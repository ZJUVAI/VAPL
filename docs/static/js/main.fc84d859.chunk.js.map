{"version":3,"sources":["components/server.ts","components/panelHeader/PanelHeader.tsx","locales/ja.ts","locales/en.ts","locales/translate.ts","store/index.js","components/editor/Editor.tsx","panels/editorPanel/EditorPanel.tsx","components/console/Console.tsx","panels/consolePanel/ConsolePanel.tsx","components/timeline/StatementHighlightContent.tsx","assets/icon/timelineLegend.svg","components/timeline/Slider.tsx","assets/icon/stepLight.svg","assets/icon/stepDark.svg","assets/icon/restartLight.svg","assets/icon/restartDark.svg","assets/icon/stepBackLight.svg","assets/icon/stepBackDark.svg","assets/icon/kaishi2.svg","assets/icon/kaishi1.svg","components/timeline/ControButton.tsx","components/timeline/ControlButtonGroup.tsx","panels/timelinePanel/TimelinePanel.tsx","components/callStack/blockDrawer/BlockDrawer.tsx","components/callStack/block/Block.tsx","components/callStack/CallStack.tsx","components/callStack/animation/AnimationDrawer.tsx","panels/callStackPanel/CallStackPanel.tsx","components/memory/memoryBlock/MemoryCell.tsx","components/memory/memoryBlock/MemoryBlock.tsx","components/memory/LogicalView.tsx","assets/icon/binaryCode/intLegend1.svg","assets/icon/binaryCode/intLegend2.svg","assets/icon/binaryCode/intLegend3.svg","assets/icon/binaryCode/intLegend4.svg","assets/icon/binaryCode/intMark1.svg","assets/icon/binaryCode/intMark2.svg","components/memory/binaryCodeSvg/IntegerBinaryCode.tsx","components/memory/binaryCodeSvg/FloatBinaryCode.tsx","components/memory/binaryCodeSvg/BinaryCodeSvg.tsx","components/memory/MemoryDetail.tsx","components/memory/PhysicalView.tsx","components/subtitleBlock/SubtitleBlock.tsx","panels/memoryPanel/MemoryPanel.tsx","assets/icon/logo.svg","assets/icon/info.svg","assets/icon/icon2.svg","components/appHeader/AppHeader.tsx","App.tsx","reportWebVitals.ts","index.tsx","components/emitter.tsx"],"names":["server","timer","isExecuting","files","Map","count","interpreter","stateHistory","outputsHistory","progLang","Error","module","this","CPP14Interpreter","Java8Interpreter","Python3Interpreter","dynamicLoadInterpreter","setFileList","file","reader","FileReader","Promise","resolve","reject","onerror","abort","DOMException","onload","result","ArrayBuffer","set","name","readAsArrayBuffer","all","Array","from","map","addFile","filename","delete","request","controlEvent","sourcecode","stdinText","lineNumOfBreakpoint","step","Start","Stop","BackAll","StepBack","Step","StepAll","JumpTo","Exec","SyntaxCheck","reset","lineCount","split","length","state","startStepExecution","execState","recordExecState","stdout","getStdout","output","recordOutputText","linesShowUp","allVariables","variableShowUp","i","push","lineNumber","steps","color","depth","visible","ret","debugState","errors","currentExpr","getCurrentExpr","nextExpr","getNextExpr","stacks","getStacks","functionName","Number","nCodeRange","codeRange","begin","y","forEach","stack","stackName","getVariables","variable","inArray","Object","keys","funcName","currentClassName","constructor","UniBinOp","res","binOp","variableName","lastExpr","nextClassName","uniReturn","returnBinOp","stepCount","outputChange","isOutputChange","uniBinOp","operator","right","UniMethodCall","methodName","left","UniIdent","UniUnaryOp","expr","variables","clearTimeout","undefined","lastState","getIsWaitingForStdin","stdin","stepExecute","isStepExecutionRunning","getLastHistory","currentCount","loop","includes","signal","global","setTimeout","bind","code","checkSyntaxError","PanelHeader","title","className","howToUse","close","debugStart","debugStop","debugBackAll","debugStepBack","debugStep","debugStepAll","changeThemedark","changeThemelight","zoomOut","zoomIn","zoomReset","howToText","uploadFile","warning","editInDebug","continueDebug","restart","rememberCommand","sourceCodeCcpp","String","raw","sourceCodeJava","sourceCodePython","translate","lang","key","ja","en","ADD_ITEM","REMOVE_ITEM","ADD_VAR","REMOVE_ITEMS","initState","statements","palette","variablesPalette","id","existColor","Set","getHashColor","index","has","add","getColor","size","reducer","action","type","data","old","rest","console","log","join","Editor","props","sentSourcecode","preventedCommand","ace","editorRef","React","isDebugging","checkbox","noAlert","highlightIds","lineCnt","sourceCodeKey","prog","replace","char","toUpperCase","fontSize","showAlert","theme","sourceCode","sessionStorage","getItem","hideAlert","setHighlightOnCode","slot","send","setItem","then","response","recieve","catch","e","alert","command","setState","Math","max","a","editor","current","on","acequire","Range","target","domEvent","currentTarget","indexOf","isFocused","clientX","getBoundingClientRect","row","getDocumentPosition","session","getSession","clearBreakpoint","filter","n","d3","d","style","removeHighlightStatement","message","setBreakpoint","addHighlightStatement","stop","remove","setSyntaxError","AceRange","range","x","end","resize","scrollToLine","getSelection","setSelectionRange","annotations","error","line","column","charPositionInLine","text","getMsg","setAnnotations","highlightId","removeMarker","annotation","highlightLines","renderAlert","renderEditor","mode","ref","value","tabSize","editorProps","$blockScrolling","Infinity","setOptions","enableBasicAutocompletion","enableLiveAutocompletion","showLineNumbers","readOnly","height","width","onChange","cnt","removeMultipleHighlight","onBeforeLoad","Dialog","aria-labelledby","tabIndex","role","Header","Title","bsStyle","Footer","onClick","checked","validationState","inputRef","mapDispatchToProps","connect","EditorPanel","Console","isReadOnly","endsWith","sendText","slice","transition","duration","tween","j","t","delay","showGutter","marginTop","ConsolePanel","StatementHighlightContent","changeStatementVisible","background","Slider","rectScale","maxDepth","domain","dragStart","stopPropagation","dragging","dragEnd","dragFromSVG","scale","invert","nativeEvent","offsetX","min","round","mouseMove","window","addEventListener","removeEventListener","variableHighlights","statementHighlights","contentWidth","activeWidth","display","zIndex","overflow","onMouseDown","onMouseMove","rx","ry","m","_step","fill","xlinkHref","timelineLegend","ControlButton","iconHrefLight","iconHrefDark","disabled","classNames","cursor","ControlButtonGroup","useState","start","setStart","setStop","setBackAll","stepBack","setStepBack","setStep","setStepAll","useEffect","stepBackLight","stepBackDark","restartLight","startLight","restartDark","startDark","arrowListJson","arrowList","JSON","parse","select","attr","clear","stepLight","stepDark","TimelinePanel","variableShowUps","updVariableShowUps","setMax","setVariableHighlights","setStatementHighlights","setLinesShowUp","setDebugStatus","setDebugState","timelineArea","createRef","timelineWidth","setTimelineWidth","useSelector","statement","floor","random","formatRgb","splice","options","temp","label","children","varName","unstable_batchedUpdates","debugStatus","useCallback","lines","clientWidth","useMemo","values","highlights","linear","arrayToString","array","isArray","fromCharCode","v","startsWith","valueToArray","toString","BlockDrawer","blockStacks","blockArrows","update","calcPos","blockStack","BlockStack","setColor","getName","calcStackPos","setPos","originX","originY","getBlockTable","blockCellContainer","_x","BlockCell","WIDTH","_y","HEIGHT","calcVariablePos","setHeight","offsetY","setWidth","pos","Vector","blockTable","makeBlockTable","setAxes","getValue","cellss","BlockArrayVariable","BlockVariable","getBlockCellContainer","getX","getY","init","address","cell","pushCell","setType","setAddress","table","concat","parentKey","FONT_SIZE","Block","each","word","words","reverse","tspan","append","pop","node","getComputedTextLength","getWidth","getHeight","stroke","strokeWidth","list","blockCell","transform","fontWeight","backgroud","renderBlockBackground","content","renderBlockContent","renderArrow","sourceStackName","targetStackName","source","empty","sourceX","sourceY","targetX","getBBox","targetY","CallStack","blockDrawer","getBlockStacks","getBlockArrows","stringify","nextProps","nextBlockStacks","blockStacksLen","nextBlockStacksLen","appendClone","clonedBlock","selectAll","block","block_node","parentNode","blocks","drawOrRemoveBlock","transform-origin","renderStackView","renderBlocks","AnimationDrawer","variableKeys","variableTypes","variableValues","postArgs","getCurrentStack","parseExe","lastClassName","variableDec","methodCall","uniMethodCall","getMethodArgs","uniVariableDec","variableDef","uniVariableDef","variableValue","returnValue","travelValue","returnValueClass","arg","idx","travelArg","args","CallStackPanel","variableWithSteps","variableChanged","highlightChangedVariable","resetVariableColor","viewBox","refX","refY","markerWidth","markerHeight","orient","cx","cy","r","Component","lastStacks","execStacks","lastValue","curValue","getValueFromStack","targetVariable","blockElement","highlightColor","defaultColor","MemoryCell","selectedVar","handleClick","dataType","active","arr","firstVarInArr","MemoryBlock","assign","parentName","Variable","LogicalView","allStacks","setAllStacks","heap","setHeap","setGlobal","curStacks","curHeap","curGlobal","p","substring","formatHeapVariable","formatGSVariable","IntegerBinaryCode","binaryCode0","signMagn","binaryCode1","oneComp","binaryCode2","oneC","d2b","parseInt","twoComp","sign","intLegend1","intLegend2","intLegend3","intLegend4","markerUnits","x1","y1","x2","y2","points","markerEnd","intMark1","intMark2","num","FloatBinaryCode","float2binary","exponent","mantissa","binary","pointPos","firstOne","DefaultBinayCode","BinaryCodeSvg","getBinaryCodeSvg","defaultMemoryInfo","MemoryDetail","memoryInfo","PhysicalView","SubtitleBlock","isActive","defaultVar","MemoryPanel","viewMode","setViewMode","setSelectedVar","lastVar","setLastVar","handleModeChange","handleSelectMemory","newSelectedVar","hideDetail","AppHeader","logo","placement","trigger","overlayClassName","menuIcon1","menuIcon2","App","setExecState","setLastState","setVariableShowUps","app","onKeyDown","preventDefault","ctrlKey","focus","Fragment","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","store","createStore","ReactDOM","render","StrictMode","document","getElementById","emitter","EventEmitter","setMaxListeners","event","listener","emit","removeAllListeners"],"mappings":"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","file":"static/js/main.fc84d859.chunk.js","sourcesContent":["import { SyntaxErrorData } from 'unicoen.ts/dist/interpreter/mapper/SyntaxErrorData';\r\nimport { ExecState } from 'unicoen.ts/dist/interpreter/Engine/ExecState';\r\nimport { signal } from './emitter';\r\nimport { Interpreter } from 'unicoen.ts/dist/interpreter/Interpreter';\r\nimport { inArray } from 'jquery';\r\nimport { UniBinOp } from 'unicoen.ts/dist/node/UniBinOp';\r\nimport { UniExpr, UniMethodCall, UniIdent, UniUnaryOp } from 'unicoen.ts';\r\nimport { Variable } from 'unicoen.ts/dist/interpreter/Engine/Variable';\r\n\r\nexport type CONTROL_EVENT =\r\n  | 'Exec'\r\n  | 'Start'\r\n  | 'Stop'\r\n  | 'BackAll'\r\n  | 'StepBack'\r\n  | 'Step'\r\n  | 'StepAll'\r\n  | 'SyntaxCheck'\r\n  | 'JumpTo';\r\nexport type DEBUG_STATE =\r\n  | 'First'\r\n  | 'Debugging'\r\n  | 'stdin'\r\n  | 'EOF'\r\n  | 'Stop'\r\n  | 'Executing';\r\nexport class Request {\r\n  constructor(\r\n    public controlEvent: CONTROL_EVENT,\r\n    public sourcecode: string,\r\n    public stdinText?: string,\r\n    public lineNumOfBreakpoint?: number[],\r\n    public progLang?: string,\r\n    public step?: number\r\n  ) {}\r\n}\r\n\r\nexport class Response {\r\n  constructor(\r\n    public output: string,\r\n    public sourcecode: string,\r\n    public debugState: DEBUG_STATE,\r\n    public step: number,\r\n    public errors: SyntaxErrorData[],\r\n    public files: Map<string, ArrayBuffer>,\r\n    public execState?: ExecState,\r\n    public lastState?: ExecState,\r\n    public stepCount?: number,\r\n    public linesShowUp?: any,\r\n    public allVariables?: any,\r\n    public variableShowUp?: any,\r\n    public outputChange?: boolean\r\n  ) {}\r\n}\r\n\r\nclass Server {\r\n  private timer: NodeJS.Timeout | null = null;\r\n  private isExecuting = false;\r\n  private files: Map<string, ArrayBuffer> = new Map();\r\n  private count = 0;\r\n  private interpreter: Interpreter | null = null;\r\n  private stateHistory: ExecState[] = [];\r\n  private outputsHistory: string[] = [];\r\n\r\n  private async dynamicLoadInterpreter(progLang?: string) {\r\n    if (typeof progLang === 'undefined') {\r\n      throw new Error('Selected programming language is invalid.');\r\n    } else if (progLang === 'c_cpp') {\r\n      // prettier-ignore\r\n      const module = await import(/* webpackChunkName: \"CPP14\" */ 'unicoen.ts/dist/interpreter/CPP14/CPP14Interpreter');\r\n      this.interpreter = new module.CPP14Interpreter();\r\n    } else if (progLang === 'java') {\r\n      // prettier-ignore\r\n      const module = await import(/* webpackChunkName: \"Java8\" */ 'unicoen.ts/dist/interpreter/Java8/Java8Interpreter');\r\n      this.interpreter = new module.Java8Interpreter();\r\n    } else if (progLang === 'python') {\r\n      // prettier-ignore\r\n      const module = await import(/* webpackChunkName: \"Python3\" */ 'unicoen.ts/dist/interpreter/Python3/Python3Interpreter');\r\n      this.interpreter = new module.Python3Interpreter();\r\n    }\r\n  }\r\n  private async reset(progLang?: string) {\r\n    this.count = 0;\r\n    await this.dynamicLoadInterpreter(progLang);\r\n    if (this.interpreter === null) {\r\n      throw new Error('Interpreter is not found');\r\n    }\r\n    this.interpreter.setFileList(this.files);\r\n    this.stateHistory = [];\r\n    this.outputsHistory = [];\r\n  }\r\n\r\n  private addFile(file: File) {\r\n    const reader = new FileReader();\r\n    return new Promise((resolve, reject) => {\r\n      reader.onerror = () => {\r\n        reader.abort();\r\n        reject(new DOMException('Problem parsing input file.'));\r\n      };\r\n\r\n      reader.onload = () => {\r\n        if (reader.result instanceof ArrayBuffer) {\r\n          this.files.set(file.name, reader.result);\r\n          resolve(reader.result);\r\n        } else {\r\n          reject(new DOMException('Problem loading input file.'));\r\n        }\r\n      };\r\n\r\n      reader.readAsArrayBuffer(file);\r\n    });\r\n  }\r\n\r\n  public async upload(files: FileList) {\r\n    await Promise.all(Array.from(files).map((file) => this.addFile(file)));\r\n    return this.files;\r\n  }\r\n\r\n  public delete(filename: string) {\r\n    this.files.delete(filename);\r\n    return this.files;\r\n  }\r\n\r\n  public async send(request: Request): Promise<Response> {\r\n    const {\r\n      controlEvent,\r\n      sourcecode,\r\n      stdinText,\r\n      lineNumOfBreakpoint,\r\n      progLang,\r\n      step = 0,\r\n    } = request;\r\n\r\n    switch (controlEvent) {\r\n      case 'Start': {\r\n        return this.Start(sourcecode, progLang);\r\n      }\r\n      case 'Stop': {\r\n        return this.Stop(sourcecode);\r\n      }\r\n      case 'BackAll': {\r\n        return this.BackAll(sourcecode);\r\n      }\r\n      case 'StepBack': {\r\n        return this.StepBack(sourcecode);\r\n      }\r\n      case 'Step': {\r\n        return this.Step(sourcecode, stdinText);\r\n      }\r\n      case 'StepAll': {\r\n        return this.StepAll(sourcecode, lineNumOfBreakpoint);\r\n      }\r\n      case 'JumpTo': {\r\n        return this.JumpTo(sourcecode, step);\r\n      }\r\n      case 'Exec': {\r\n        return this.Exec(sourcecode, progLang, lineNumOfBreakpoint);\r\n      }\r\n      case 'SyntaxCheck': {\r\n        return this.SyntaxCheck(sourcecode, progLang);\r\n      }\r\n    }\r\n  }\r\n\r\n  private async Start(sourcecode: string, progLang?: string) {\r\n    await this.reset(progLang);\r\n    if (this.interpreter === null) {\r\n      throw new Error('interpreter is not found');\r\n    }\r\n    const lineCount = sourcecode.split(/\\r\\n|\\r|\\n/).length;\r\n    const state = this.interpreter.startStepExecution(sourcecode);\r\n    const execState = this.recordExecState(state);\r\n    const stdout = this.interpreter.getStdout();\r\n    const output = this.recordOutputText(stdout);\r\n    const linesShowUp: {\r\n      lineNumber: number;\r\n      steps: number[];\r\n      color: string;\r\n      depth: number[];\r\n      visible: boolean;\r\n    }[] = [];\r\n    const allVariables: { [key: string]: any } = {};\r\n    const variableShowUp: {\r\n      funcName: string;\r\n      name: string;\r\n      steps: number[];\r\n      color: string;\r\n      visible: boolean;\r\n      variable: Variable;\r\n    }[] = [];\r\n    for (let i = 1; i <= lineCount; i++) {\r\n      linesShowUp.push({\r\n        lineNumber: i,\r\n        steps: [],\r\n        color: '',\r\n        depth: [],\r\n        visible: true,\r\n      });\r\n    }\r\n    let ret: Response = {\r\n      execState,\r\n      output,\r\n      sourcecode,\r\n      debugState: 'First',\r\n      step: this.count,\r\n      errors: [],\r\n      files: this.files,\r\n    };\r\n    this.isExecuting = true;\r\n    while (ret.debugState !== 'EOF' && ret.debugState !== 'stdin') {\r\n      const currentExpr = this.stateHistory[this.count].getCurrentExpr();\r\n      const nextExpr = this.stateHistory[this.count].getNextExpr();\r\n      const stacks = this.stateHistory[this.count].getStacks();\r\n      const functionName = stacks[stacks.length - 1].name;\r\n      let depth = 1;\r\n      if (functionName.split('.').length > 1) {\r\n        depth = Number(functionName.split('.')[1]);\r\n      }\r\n      const nCodeRange = nextExpr.codeRange;\r\n      linesShowUp[nCodeRange.begin.y - 1]['steps'].push(this.count + 1);\r\n      linesShowUp[nCodeRange.begin.y - 1]['depth'].push(depth);\r\n\r\n      stacks.forEach((stack) => {\r\n        const stackName = stack.name.split('.')[0];\r\n        if (!(stackName in allVariables)) {\r\n          allVariables[stackName] = {};\r\n        }\r\n        stack.getVariables().forEach((variable) => {\r\n          if (\r\n            inArray(variable.name, Object.keys(allVariables[stackName])) < 0\r\n          ) {\r\n            allVariables[stackName][variable.name] = variableShowUp.length;\r\n            variableShowUp.push({\r\n              funcName: stackName,\r\n              name: variable.name,\r\n              steps: [this.count],\r\n              color: '',\r\n              visible: true,\r\n              variable: variable,\r\n            });\r\n          }\r\n        });\r\n      });\r\n      const currentClassName = currentExpr.constructor.name;\r\n      if (currentExpr instanceof UniBinOp) {\r\n        const res = this.binOp(currentExpr);\r\n        if (res) {\r\n          const stack = stacks[stacks.length - 1];\r\n          const variableName = res;\r\n          variableShowUp[allVariables[stack.name.split('.')[0]][variableName]][\r\n            'steps'\r\n          ].push(this.count);\r\n        }\r\n      }\r\n      let lastExpr = null;\r\n      if (this.count > 0) {\r\n        lastExpr = this.stateHistory[this.count - 1].getNextExpr();\r\n        const nextClassName = lastExpr.constructor.name;\r\n        if (lastExpr instanceof UniBinOp && currentClassName !== 'UniBinOp') {\r\n          const res = this.binOp(lastExpr);\r\n          if (res) {\r\n            const stack = stacks[stacks.length - 1];\r\n            const variableName = res;\r\n            variableShowUp[\r\n              allVariables[stack.name.split('.')[0]][variableName]\r\n            ]['steps'].push(this.count + 1);\r\n          }\r\n        } else if (\r\n          nextClassName === 'UniReturn' &&\r\n          currentClassName === 'UniVariableDec'\r\n        ) {\r\n          const stack = stacks[stacks.length - 1];\r\n          variableShowUp[\r\n            allVariables[stack.name.split('.')[0]][this.uniReturn(currentExpr)]\r\n          ]['steps'].push(this.count);\r\n        } else if (\r\n          nextClassName === 'UniReturn' &&\r\n          currentExpr instanceof UniBinOp\r\n        ) {\r\n          const res = this.returnBinOp(currentExpr);\r\n          if (res) {\r\n            const stack = stacks[stacks.length - 1];\r\n            const variableName = res;\r\n            variableShowUp[\r\n              allVariables[stack.name.split('.')[0]][variableName]\r\n            ]['steps'].push(this.count);\r\n          }\r\n        }\r\n      }\r\n\r\n      ret = this.Step(sourcecode);\r\n    }\r\n\r\n    // console.log(this.stateHistory);\r\n\r\n    const step = this.count + 1;\r\n    this.isExecuting = true;\r\n    const res = this.BackAll(sourcecode);\r\n    res.stepCount = step;\r\n    res.linesShowUp = linesShowUp;\r\n    res.allVariables = allVariables;\r\n    res.variableShowUp = variableShowUp;\r\n    res.outputChange = this.isOutputChange(this.count);\r\n    return res;\r\n  }\r\n\r\n  private binOp(uniBinOp: UniBinOp): string | false {\r\n    const operator = uniBinOp.operator;\r\n    const right: UniBinOp | UniExpr | UniMethodCall = uniBinOp.right;\r\n    if (right instanceof UniMethodCall) {\r\n      if (right.methodName.name !== 'malloc') {\r\n        return false;\r\n      }\r\n    } else if (right instanceof UniBinOp) {\r\n      return this.binOp(right);\r\n    }\r\n\r\n    if (operator !== '=') {\r\n      const left = uniBinOp.left;\r\n\r\n      if (left instanceof UniMethodCall) {\r\n        return false;\r\n      } else if (left instanceof UniBinOp) {\r\n        return this.binOp(left);\r\n      }\r\n    }\r\n    let left = uniBinOp.left;\r\n    if (!left) {\r\n      return false;\r\n    }\r\n    while (!(left instanceof UniIdent)) {\r\n      if (left instanceof UniUnaryOp) {\r\n        left = left.expr;\r\n      } else if (left instanceof UniBinOp) {\r\n        left = left.left;\r\n      }\r\n    }\r\n    return left.name;\r\n  }\r\n\r\n  private uniReturn(expr: any) {\r\n    return expr.variables[0].name;\r\n  }\r\n  private returnBinOp(uniBinOp: UniBinOp) {\r\n    const operator = uniBinOp.operator;\r\n    if (operator === '=') {\r\n      const left: any = uniBinOp.left;\r\n      return left.name;\r\n    }\r\n    return false;\r\n  }\r\n\r\n  private Stop(sourcecode: string) {\r\n    if (this.timer !== null) {\r\n      clearTimeout(this.timer);\r\n    }\r\n    this.interpreter = null;\r\n    const ret: Response = {\r\n      sourcecode,\r\n      execState: undefined,\r\n      debugState: 'Stop',\r\n      output: '',\r\n      step: this.count,\r\n      errors: [],\r\n      files: this.files,\r\n    };\r\n    return ret;\r\n  }\r\n\r\n  private BackAll(sourcecode: string) {\r\n    this.count = 0;\r\n    const execState = this.stateHistory[this.count];\r\n    const output = this.outputsHistory[this.count];\r\n    const ret: Response = {\r\n      execState,\r\n      output,\r\n      sourcecode,\r\n      debugState: 'First',\r\n      step: this.count,\r\n      errors: [],\r\n      files: this.files,\r\n    };\r\n    return ret;\r\n  }\r\n\r\n  private StepBack(sourcecode: string) {\r\n    if (1 <= this.count) {\r\n      this.count -= 1;\r\n    }\r\n    const execState = this.stateHistory[this.count];\r\n    let lastState = undefined;\r\n    if (this.count > 0) {\r\n      lastState = this.stateHistory[this.count - 1];\r\n    }\r\n    const output = this.outputsHistory[this.count];\r\n    const ret: Response = {\r\n      execState,\r\n      lastState: lastState,\r\n      output,\r\n      sourcecode,\r\n      debugState: 'Debugging',\r\n      step: this.count,\r\n      errors: [],\r\n      files: this.files,\r\n    };\r\n    return ret;\r\n  }\r\n\r\n  private Step(sourcecode: string, stdinText?: string) {\r\n    ++this.count;\r\n    if (this.count < this.stateHistory.length) {\r\n      const execState = this.stateHistory[this.count];\r\n      let lastState = undefined;\r\n      if (this.count > 0) {\r\n        lastState = this.stateHistory[this.count - 1];\r\n      }\r\n      const output = this.outputsHistory[this.count];\r\n      const ret: Response = {\r\n        execState,\r\n        lastState: lastState,\r\n        output,\r\n        sourcecode,\r\n        debugState: 'Debugging',\r\n        step: this.count,\r\n        errors: [],\r\n        files: this.files,\r\n        outputChange: this.isOutputChange(this.count),\r\n      };\r\n      return ret;\r\n    }\r\n    if (this.isExecuting) {\r\n      if (this.interpreter === null) {\r\n        throw new Error('engine is not found');\r\n      }\r\n      if (this.interpreter.getIsWaitingForStdin()) {\r\n        if (stdinText !== undefined) {\r\n          this.interpreter.stdin(stdinText);\r\n        }\r\n        //  console.log(`stdin:${stdinText}`);\r\n      }\r\n      const state = this.interpreter.stepExecute();\r\n      // let maxSkip = 10;\r\n      // while (state.getCurrentExpr().codeRange === null && 0 < --maxSkip) {\r\n      //   state = this.engine.stepExecute();\r\n      // }\r\n      const execState = this.recordExecState(state);\r\n      const stdout = this.interpreter.getStdout();\r\n      //  console.log(`stdout:${stdout}`);\r\n      const output = this.recordOutputText(stdout);\r\n      //  console.log(`output:${output}`);\r\n      // let stateText = `Step:${this.count} | Value:${execState.getCurrentValue()}`;\r\n      let debugState: DEBUG_STATE = 'Debugging';\r\n      if (this.interpreter.getIsWaitingForStdin()) {\r\n        debugState = 'stdin';\r\n      } else if (!this.interpreter.isStepExecutionRunning()) {\r\n        debugState = 'EOF';\r\n        this.isExecuting = false;\r\n      }\r\n      const ret: Response = {\r\n        execState,\r\n        lastState: this.stateHistory[this.stateHistory.length - 2],\r\n        output,\r\n        sourcecode,\r\n        debugState,\r\n        step: this.count,\r\n        errors: [],\r\n        files: this.files,\r\n        outputChange: this.isOutputChange(this.count),\r\n      };\r\n      return ret;\r\n    }\r\n    this.count = this.stateHistory.length - 1;\r\n    const output = this.outputsHistory[this.count];\r\n    const ret: Response = {\r\n      output,\r\n      sourcecode,\r\n      execState: this.getLastHistory(),\r\n      debugState: 'EOF',\r\n      step: this.count,\r\n      errors: [],\r\n      files: this.files,\r\n      outputChange: this.isOutputChange(this.count),\r\n    };\r\n    return ret;\r\n  }\r\n\r\n  private StepAll(sourcecode: string, lineNumOfBreakpoint?: number[]) {\r\n    const currentCount = this.count;\r\n    const loop = () => {\r\n      const ret: Response = this.Step(sourcecode);\r\n      if (ret.debugState === 'EOF') {\r\n        signal('EOF', ret);\r\n        return;\r\n      } else if (ret.debugState === 'stdin') {\r\n        signal('stdin', ret);\r\n        return;\r\n      } else if (typeof lineNumOfBreakpoint !== 'undefined') {\r\n        if (typeof ret.execState !== 'undefined') {\r\n          const nextExpr = ret.execState.getNextExpr();\r\n          const { codeRange } = nextExpr;\r\n          if (codeRange) {\r\n            if (lineNumOfBreakpoint.includes(codeRange.begin.y - 1)) {\r\n              signal('Breakpoint', ret);\r\n              return;\r\n            }\r\n          }\r\n        }\r\n      }\r\n      this.timer = global.setTimeout(loop.bind(this), 1);\r\n    };\r\n    loop();\r\n    const execState = this.stateHistory[currentCount];\r\n    const output = this.outputsHistory[currentCount];\r\n    const debugState: DEBUG_STATE = 'Executing';\r\n    return {\r\n      execState,\r\n      output,\r\n      sourcecode,\r\n      debugState,\r\n      step: currentCount,\r\n      errors: [],\r\n      files: this.files,\r\n    };\r\n  }\r\n\r\n  private JumpTo(sourcecode: string, step: number) {\r\n    this.count = step;\r\n    const execState = this.stateHistory[this.count];\r\n    let lastState = undefined;\r\n    if (this.count > 0) {\r\n      lastState = this.stateHistory[this.count - 1];\r\n    }\r\n    const output = this.outputsHistory[this.count];\r\n    const ret: Response = {\r\n      execState,\r\n      lastState: lastState,\r\n      output,\r\n      sourcecode,\r\n      debugState: 'Debugging',\r\n      step: this.count,\r\n      errors: [],\r\n      files: this.files,\r\n    };\r\n    return ret;\r\n  }\r\n\r\n  private async Exec(\r\n    sourcecode: string,\r\n    progLang?: string,\r\n    lineNumOfBreakpoint?: number[]\r\n  ) {\r\n    await this.Start(sourcecode, progLang);\r\n    return this.StepAll(sourcecode, lineNumOfBreakpoint);\r\n  }\r\n\r\n  private async SyntaxCheck(code: string, progLang?: string) {\r\n    await this.dynamicLoadInterpreter(progLang);\r\n    if (this.interpreter === null) {\r\n      throw new Error('Interpreter is not found');\r\n    }\r\n    const errors: SyntaxErrorData[] = this.interpreter.checkSyntaxError(code);\r\n    const ret: Response = {\r\n      errors,\r\n      sourcecode: code,\r\n      execState: undefined,\r\n      debugState: 'Stop',\r\n      output: '',\r\n      step: this.count,\r\n      files: this.files,\r\n    };\r\n    return ret;\r\n  }\r\n\r\n  private recordOutputText(output: string) {\r\n    this.outputsHistory.push(output);\r\n    return output;\r\n  }\r\n\r\n  private recordExecState(execState: ExecState) {\r\n    this.stateHistory.push(execState);\r\n    return execState;\r\n  }\r\n\r\n  private getLastHistory() {\r\n    return this.stateHistory[this.stateHistory.length - 1];\r\n  }\r\n\r\n  private isOutputChange(step: number) {\r\n    if (step === 0) return false;\r\n    return (\r\n      this.outputsHistory[step].length > this.outputsHistory[step - 1].length\r\n    );\r\n  }\r\n}\r\n\r\nexport const server = new Server();\r\n","import React from 'react';\r\nimport './style.scss';\r\n\r\ninterface PanelHeaderProps {\r\n    title: string;\r\n}\r\n\r\nfunction PanelHeader({title}: PanelHeaderProps) {\r\n  return (\r\n      <div className='panel-header'>\r\n        <div className='text-title'>{title}</div>\r\n      </div>\r\n  );\r\n}\r\n\r\nexport default PanelHeader;\r\n","// tslint:disable:max-line-length\nexport default {\n  howToUse: '使い方',\n  close: '閉じる',\n  debugStart: '現在のプログラムで再ステップ実行',\n  debugStop: '実行終了',\n  debugBackAll: '実行中のプログラムを最初のステップに戻す',\n  debugStepBack: '実行中のプログラムを1ステップ戻す',\n  debugStep: 'プログラムを1ステップ実行する',\n  debugStepAll: 'プログラムを最後まで実行する',\n  changeThemedark: 'ダークテーマに切り替える',\n  changeThemelight: 'ライトテーマに切り替える',\n  zoomOut: 'エディタのフォントサイズを小さくする',\n  zoomIn: 'エディタのフォントサイズを大きくする',\n  zoomReset: 'エディタのフォントサイズをリセットする',\n  howToText: [\n    '下のエディタにプログラムを書き、上のボタンを押すことで可視化実行ができます。',\n    '(マウスカーソルを重ねるとで各ボタンの説明が表示されます。)',\n  ],\n  uploadFile: 'アップロードされたファイルはここに表示されます。',\n  warning: '警告!',\n  editInDebug: `実行中のソースコードが編集されました。\nプログラムの挙動には反映されませんが、\nコードのハイライトが等がずれる恐れがあります。`,\n  continueDebug: '続行',\n  restart: '再実行',\n  rememberCommand: 'この選択を記憶する',\n  sourceCodeCcpp: String.raw`#include<stdio.h>\nint recursiveToThree(int n){\n  printf(\"%d th\\n\", n + 1);\n  if(n < 3){\n    int r = recursiveToThree(n + 1);\n    n = r;\n  }\n  return n;\n}\nint main(){\n  int n = 0;//変数定義\n\n  n = recursiveToThree(0);//再帰関数呼出\n\n  int arr[5] = {1, 2, 3};//配列変数\n\n  int* ptr = &arr[2];//ポインタ変数\n  *ptr = 5;\n\n  //動的メモリ確保\n  int* d_arry = malloc(sizeof(int) * 3);\n\n  //二次元ポインタ配列の動的メモリ配列\n  int* pd_arr[2];\n  pd_arr[0] = malloc(sizeof(int) * 2);\n  pd_arr[1] = malloc(sizeof(int) * 2);\n\n  free(pd_arr[0]);//メモリの解放\n\n  printf(\"Hello,world!\\n\");//標準出力\n\n\n  return 0;\n}`,\n  sourceCodeJava: String.raw`import java.util.*;\npublic class Main {\n  public static void main(String[] args) {\n    Scanner sc = new Scanner(System.in);\n    while (true) {\n      int n = sc.nextInt();\n      int r = sc.nextInt();\n      if (n == 0) {\n        break;\n      }\n      int[] a = new int[n];\n      int[] b = new int[n];\n      for (int i = 0; i < n; i++) {\n        a[i] = n - i;\n      }\n      for (int i = 0; i < r; i++) {\n        int p = sc.nextInt();\n        int c = sc.nextInt();\n        p--;\n        for (int j = 0; j < c; j++) {\n          b[j] = a[p + j];\n        }\n        for (int j = 0; j < p; j++) {\n          b[c + j] = a[j];\n        }\n        for (int j = 0; j < p + c; j++) {\n          a[j] = b[j];\n        }\n      }\n      System.out.println(a[0]);\n    }\n  }\n}`,\n  sourceCodePython: String.raw`while True:\n  n, r = map(int, input().split())\n  if n == 0:\n    break\n  a = [0] * n\n  b = [0] * n\n  for i in range(n):\n    a[i] = b[i] = n - i\n  for i in range(r):\n    p, c = map(int, input().split())\n    p = p - 1\n    for j in range(c):\n      b[j] = a[p + j]\n    for j in range(p):\n      b[c + j] = a[j]\n    for j in range(p + c):\n      a[j] = b[j]\n  print(a[0])\n`,\n};\n","// tslint:disable:max-line-length\r\nexport default {\r\n  howToUse: 'How to use',\r\n  close: 'Close',\r\n  debugStart: 'restart step execution',\r\n  debugStop: 'stop execution',\r\n  debugBackAll: 'go backward for all steps',\r\n  debugStepBack: 'step backward',\r\n  debugStep: 'step forward',\r\n  debugStepAll: 'execute all step',\r\n  changeThemedark: 'change to dark theme',\r\n  changeThemelight: 'change to light theme',\r\n  zoomOut: 'change the font size to smaller.',\r\n  zoomIn: 'change the font size to larger.',\r\n  zoomReset: 'reset the font size',\r\n  howToText: [\r\n    'PVC.js has five GUI components:',\r\n    '(1) editor, (2) execution controller, buttons, (3) I/O window, (4) canvas for visualization, and (5) file upload form.',\r\n    'Users can write source code in the editor. Clicking on the execution control buttons initiates the step execution.',\r\n    'The I/O window shows the content of the standard output written by the program (e.g., printf) and accepts standard input (e.g., scanf).',\r\n    \"Canvas shows the program's execution status using tables and figures.\",\r\n    'PVC.js adaptively changes its layout to correspond with the size of the browser window.',\r\n  ],\r\n  uploadFile: 'The uploaded file will be displayed here.',\r\n  warning: 'Warning!',\r\n  editInDebug: `The source code being executed has been edited.\r\nProgram behavior is not affected by changing code. \r\nHowever, the highlight of the code may be out of place.`,\r\n  continueDebug: 'Continue',\r\n  restart: 'Restart',\r\n  rememberCommand: 'Remember this choice',\r\n//   sourceCodeCcpp: String.raw`#include<stdio.h>\r\n// int recursiveToThree(int n){\r\n//   printf(\"%d th\\n\", n + 1);\r\n//   if(n < 3){\r\n//       int r = recursiveToThree(n + 1);\r\n//       n = r;\r\n//   }\r\n//   return n;\r\n// }\r\n\r\n// static int a = 1;\r\n// int b = 2;\r\n\r\n// int main(){\r\n//   int n = 0;//variable declaration\r\n\r\n//   n = recursiveToThree(0);//recursive function\r\n\r\n//   int arr[5] = {1, 2, 3};//array variable\r\n\r\n//   int* ptr = &arr[2];//pointer variable\r\n//   *ptr = 5;\r\n\r\n//   //dynamic memory allocation\r\n//   int* d_arry = malloc(sizeof(int) * 3);\r\n\r\n//   //two-dimensional dynamic array\r\n//   int* pd_arr[2];\r\n//   pd_arr[0] = malloc(sizeof(int) * 2);\r\n//   pd_arr[1] = malloc(sizeof(int) * 2);\r\n\r\n//   printf(\"Hello,world!\\n\");//standard output\r\n\r\n//   free(pd_arr[0]);//memory leak\r\n\r\n//   return 0;\r\n// }`\r\nsourceCodeCcpp: String.raw`#include<stdio.h>\r\n\r\n/*print Fahrenheit-Celsius table\r\n    for fahr = 0, 20, ..., 300 */\r\n\r\nint main() {\r\n  int fahr, celsius;\r\n  int lower, upper, step;\r\n  lower = 0;\r\n  upper = 300;\r\n  step = 20;\r\n  \r\n  fahr = lower;\r\n  while (fahr <= upper) {\r\n    celsius = 5 * (fahr-32) / 9;\r\n    printf(\"%d\\t%d\\n\", fahr, celsius);\r\n    fahr = fahr + step;\r\n  }\r\n}\r\n`\r\n,\r\n  sourceCodeJava: String.raw`import java.util.*;\r\npublic class Main {\r\n  public static void main(String[] args) {\r\n    Scanner sc = new Scanner(System.in);\r\n    while (true) {\r\n      int n = sc.nextInt();\r\n      int r = sc.nextInt();\r\n      if (n == 0) {\r\n        break;\r\n      }\r\n      int[] a = new int[n];\r\n      int[] b = new int[n];\r\n      for (int i = 0; i < n; i++) {\r\n        a[i] = n - i;\r\n      }\r\n      for (int i = 0; i < r; i++) {\r\n        int p = sc.nextInt();\r\n        int c = sc.nextInt();\r\n        p--;\r\n        for (int j = 0; j < c; j++) {\r\n          b[j] = a[p + j];\r\n        }\r\n        for (int j = 0; j < p; j++) {\r\n          b[c + j] = a[j];\r\n        }\r\n        for (int j = 0; j < p + c; j++) {\r\n          a[j] = b[j];\r\n        }\r\n      }\r\n      System.out.println(a[0]);\r\n    }\r\n  }\r\n}`,\r\n  sourceCodePython: String.raw`while True:\r\n  n, r = map(int, input().split())\r\n  if n == 0:\r\n    break\r\n  a = [0] * n\r\n  b = [0] * n\r\n  for i in range(n):\r\n    a[i] = b[i] = n - i\r\n  for i in range(r):\r\n    p, c = map(int, input().split())\r\n    p = p - 1\r\n    for j in range(c):\r\n      b[j] = a[p + j]\r\n    for j in range(p):\r\n      b[c + j] = a[j]\r\n    for j in range(p + c):\r\n      a[j] = b[j]\r\n  print(a[0])\r\n`,\r\n};\r\n","import ja from './ja';\nimport en from './en';\nconst translate = (lang: string, key: string) => {\n  if (lang === 'ja') {\n    return (ja as any)[key];\n  }\n  return (en as any)[key];\n};\nexport default translate;\n","const ADD_ITEM = 'ADD_ITEM';\r\nconst REMOVE_ITEM = 'REMOVE_ITEM';\r\nconst ADD_VAR = 'ADD_VAR';\r\nconst REMOVE_VAR = 'REMOVE_VAR';\r\nconst REMOVE_ITEMS = 'REMOVE_ITEMS';\r\n\r\nconst initState = {\r\n  // line numbers of the highlight statments: color\r\n  statements: {},\r\n  variables: {},\r\n}\r\n\r\nconst palette = ['#4d7cfe', '#f35c9b', '#feb74b', '#ca78ff'];\r\nconst variablesPalette = ['#5E8B7E', '#FFC288', '#A19882'];\r\n\r\nlet id = 0;\r\nconst existColor = new Set();\r\n\r\nconst getHashColor = (index) => {\r\n  const color = palette[index % palette.length];\r\n  if (existColor.has(color)) {\r\n    return getHashColor(index + 1);\r\n  } else {\r\n    existColor.add(color)\r\n    return color;\r\n  }\r\n};\r\n\r\nexport const getColor = () => {\r\n  if (existColor.size === palette.length) return 'DISABLE';\r\n  return getHashColor(id++);\r\n};\r\n\r\nexport const addHighlightStatement = (lineNumber, color) => {\r\n  return {\r\n    type: ADD_ITEM,\r\n    data: { [lineNumber]: color }\r\n  }\r\n}\r\n\r\nexport const removeHighlightStatement = (lineNumber) => {\r\n  return {\r\n    type: REMOVE_ITEM,\r\n    data: lineNumber\r\n  }\r\n}\r\n\r\nexport const removeMultipleHighlight = (lineCnt) => {\r\n  return {\r\n    type: REMOVE_ITEMS,\r\n    data: lineCnt\r\n  }\r\n}\r\n\r\nexport const addVariable = (variable) => {\r\n  return {\r\n    type: ADD_VAR,\r\n    data: variable\r\n  }\r\n}\r\n\r\nconst reducer = (state = initState, action) => {\r\n  switch (action.type) {\r\n    case ADD_ITEM:\r\n      return { ...state, statements: { ...state.statements, ...action.data } }\r\n    case REMOVE_ITEM:\r\n      const { [action.data]: old, ...rest } = state.statements;\r\n      // console.log(old)\r\n      existColor.delete(old);\r\n      return { ...state, statements: rest }\r\n    case REMOVE_ITEMS:\r\n      console.log(action.data)\r\n      const statements = {};\r\n      Object.keys(state.statements).forEach(id => {\r\n        if ((+id) >= action.data) {\r\n          existColor.delete(state.statements[id])\r\n        } else {\r\n          statements[id] = state.statements[id];\r\n        }\r\n      })\r\n      return { ...state, statements }\r\n    case ADD_VAR:\r\n      return {\r\n        ...state, variables: {\r\n          ...state.variables,\r\n          ...{ [action.data.join('-')]: variablesPalette[Object.keys(state.variables).length % variablesPalette.length] }\r\n        }\r\n      }\r\n    default:\r\n      return state\r\n  }\r\n}\r\n\r\nexport default reducer;","import * as React from 'react';\r\nimport Alert from 'react-bootstrap/lib/Alert';\r\nimport Button from 'react-bootstrap/lib/Button';\r\nimport Modal from 'react-bootstrap/lib/Modal';\r\nimport Checkbox from 'react-bootstrap/lib/Checkbox';\r\n// tslint:disable-next-line:import-name\r\nimport AceEditor from 'react-ace';\r\n\r\nimport 'ace-builds/src-min-noconflict/mode-c_cpp';\r\nimport 'ace-builds/src-min-noconflict/snippets/c_cpp';\r\nimport 'ace-builds/src-min-noconflict/theme-textmate';\r\nimport 'ace-builds/src-min-noconflict/theme-monokai';\r\nimport 'ace-builds/src-min-noconflict/ext-language_tools';\r\nimport * as d3 from 'd3';\r\n\r\nimport './editor.scss';\r\nimport { signal, slot, remove } from '../emitter';\r\nimport {\r\n  Request,\r\n  CONTROL_EVENT,\r\n  server,\r\n  Response,\r\n  DEBUG_STATE,\r\n} from '../server';\r\nimport translate from '../../locales/translate';\r\nimport { ExecState } from 'unicoen.ts/dist/interpreter/Engine/ExecState';\r\nimport { LangProps, ProgLangProps, Theme } from '../Props';\r\nimport { SyntaxErrorData } from 'unicoen.ts/dist/interpreter/mapper/SyntaxErrorData';\r\nimport { connect } from 'react-redux'\r\nimport { addHighlightStatement, removeHighlightStatement, removeMultipleHighlight,  } from '../../store';\r\nimport {getColor} from '../../store/index'\r\nimport { message } from 'antd';\r\n\r\ntype Props = LangProps & ProgLangProps & {\r\n  addHighlightStatement: Function,\r\n  removeHighlightStatement: Function,\r\n  removeMultipleHighlight: Function\r\n};\r\ninterface State {\r\n  fontSize: number;\r\n  showAlert: boolean;\r\n  theme: Theme;\r\n}\r\n\r\ninterface TextRectangle {\r\n  left: number;\r\n  top: number;\r\n  width: number;\r\n  height: number;\r\n}\r\n\r\ninterface GutterMousedownEventTarget\r\n  extends React.BaseHTMLAttributes<HTMLElement> {\r\n  getBoundingClientRect: () => TextRectangle;\r\n}\r\ninterface GutterMousedownEvent extends React.MouseEvent {\r\n  domEvent: React.MouseEvent<GutterMousedownEventTarget>;\r\n  editor: AceAjax.Editor;\r\n  getDocumentPosition: () => AceAjax.Position;\r\n  stop: () => void;\r\n}\r\n\r\nclass Editor extends React.Component<Props, State> {\r\n  private sentSourcecode: string;\r\n  private preventedCommand: CONTROL_EVENT = 'Stop';\r\n  private controlEvent: CONTROL_EVENT = 'Stop';\r\n  private sourcecode: string;\r\n  private ace: any = null;\r\n  private editorRef = React.createRef<any>();\r\n  private lineNumOfBreakpoint: number[] = [];\r\n  private isDebugging = false;\r\n  private checkbox: HTMLInputElement | null = null;\r\n  private noAlert = false;\r\n  private highlightIds: number[] = [];\r\n  // 拿不到这个值，只能先用\\n判断了\r\n  private lineCnt: number = 0;\r\n\r\n  constructor(props: Props) {\r\n    super(props);\r\n    this.state = {\r\n      fontSize: 14,\r\n      showAlert: false,\r\n      theme: 'light',\r\n    };\r\n    const { lang, progLang } = props;\r\n\r\n    const sourceCode = sessionStorage.getItem('sourceCode');\r\n\r\n    if (sourceCode) {\r\n      this.sourcecode = sourceCode;\r\n    } else {\r\n      this.sourcecode = translate(lang, this.sourceCodeKey(progLang));\r\n    }\r\n    this.sentSourcecode = '';\r\n\r\n    this.hideAlert = this.hideAlert.bind(this);\r\n    this.setHighlightOnCode = this.setHighlightOnCode.bind(this);\r\n  }\r\n\r\n  componentDidMount() {\r\n    const progLang = this.props.progLang;\r\n    slot('debug', (controlEvent: CONTROL_EVENT, stdinText?: string) => {\r\n      this.send(controlEvent, stdinText);\r\n      if (controlEvent === 'StepBack' || controlEvent === 'BackAll') {\r\n        sessionStorage.setItem('exec', 'step');\r\n      } else {\r\n        sessionStorage.setItem('exec', 'debug');\r\n      }\r\n    });\r\n    slot('jumpTo', (step: number) => {\r\n      const request: Request = {\r\n        sourcecode: this.sourcecode,\r\n        controlEvent: 'JumpTo',\r\n        progLang,\r\n        step: step,\r\n      };\r\n      server\r\n        .send(request)\r\n        .then((response: Response) => {\r\n          this.recieve(response);\r\n        })\r\n        .catch((e) => {\r\n          alert('constructor: ' + e);\r\n        });\r\n      sessionStorage.setItem('exec', 'step');\r\n    });\r\n    slot('EOF', (response: Response) => {\r\n      this.recieve(response);\r\n    });\r\n    slot('stdin', (response: Response) => {\r\n      this.recieve(response);\r\n    });\r\n    slot('Breakpoint', (response: Response) => {\r\n      this.recieve(response);\r\n    });\r\n    slot('zoom', (command: string) => {\r\n      if (command === 'In') {\r\n        this.setState({ fontSize: this.state.fontSize + 1 });\r\n      } else if (command === 'Out') {\r\n        this.setState({ fontSize: Math.max(this.state.fontSize - 1, 10) });\r\n      } else if (command === 'Reset') {\r\n        this.setState({ fontSize: 14 });\r\n      }\r\n    });\r\n    slot('changeTheme', async (theme: Theme) => {\r\n      this.setState({ theme });\r\n    });\r\n\r\n    // Enable breakpoint\r\n    const editor: AceAjax.Editor = this.editorRef.current.editor;\r\n    editor.on('keydown', (e: any) => {\r\n      // console.log(e);\r\n    });\r\n    editor.on('guttermousedown', (e: GutterMousedownEvent) => {\r\n      //  mousedown\r\n      const AceRange = this.ace.acequire('ace/range').Range;\r\n      const target: GutterMousedownEventTarget = e.domEvent.currentTarget;\r\n      if (\r\n        typeof target.className !== 'undefined' &&\r\n        target.className.indexOf('ace_gutter') === -1\r\n      ) {\r\n        return;\r\n      }\r\n      if (!editor.isFocused()) {\r\n        return;\r\n      }\r\n      if (e.clientX > 25 + target.getBoundingClientRect().left) return;\r\n\r\n      const row: number = e.getDocumentPosition().row;\r\n\r\n      const session: AceAjax.IEditSession = e.editor.getSession();\r\n      if (this.lineNumOfBreakpoint.includes(row)) {\r\n        session.clearBreakpoint(row);\r\n        //signal('cancelStatementHighlight', row);\r\n        //const line = d3.selectAll('.ace_line').filter((d, i) => i === row);\r\n        //line.classed('highlight' + row, false);\r\n        this.lineNumOfBreakpoint = this.lineNumOfBreakpoint.filter(\r\n          (n) => n !== row\r\n        );\r\n\r\n        const line = d3\r\n          .selectAll('.ace_gutter-cell')\r\n          .filter((d, i) => i === row)\r\n          .style('background', '#f3f7f9')\r\n          .style('border-left', 'none');\r\n\r\n        console.log(row);\r\n        this.props.removeHighlightStatement(row);\r\n      } else {\r\n        const color = getColor();\r\n        if (color === 'DISABLE') {\r\n          message.warning('请先取消一个断点');\r\n        } else {\r\n          session.setBreakpoint(row, 'ace_breakpoint');\r\n          this.lineNumOfBreakpoint.push(row);\r\n          const line = d3\r\n            .selectAll('.ace_gutter-cell')\r\n            .filter((d, i) => i === row)\r\n            .style('background', color + '33')\r\n            .style('border-left', '3px solid ' + color);\r\n          // line.classed('highlight' + row, true);\r\n          //signal('statementHighlight', row);\r\n          // console.log(row)\r\n          this.props.addHighlightStatement(row, color);\r\n        }\r\n      }\r\n      e.stop();\r\n    });\r\n  }\r\n\r\n  // componentDidUpdate() {\r\n  // d3.selectAll('.ace_line')\r\n  //   // .filter((d, i) => inArray(i, this.lineNumOfBreakpoint) >= 0)\r\n  //   .attr('class', (d, i) => {\r\n  //     return `ace_line highlight${i}`;\r\n  //   });\r\n  // }\r\n\r\n  componentWillUnmount() {\r\n    remove('debug');\r\n    remove('jumpTo');\r\n    remove('EOF');\r\n    remove('stdin');\r\n    remove('Breakpoint');\r\n    remove('zoom');\r\n    remove('changeTheme');\r\n  }\r\n\r\n  sourceCodeKey = (prog: string) =>\r\n    'sourceCode' +\r\n    prog.replace(/_/g, '').replace(/^[a-z]/g, (char) => char.toUpperCase());\r\n\r\n  // UNSAFE_componentWillReceiveProps(nextProps: Props) {\r\n  //   const { lang, progLang } = this.props;\r\n  //   const nextLang = nextProps.lang;\r\n  //   const nextProgLang = nextProps.progLang;\r\n\r\n  //   if (nextLang !== lang) {\r\n  //     if (this.sourcecode === translate(lang, this.sourceCodeKey(progLang))) {\r\n  //       this.sourcecode = translate(nextLang, this.sourceCodeKey(nextProgLang));\r\n  //     }\r\n  //   } else if (nextProgLang !== progLang) {\r\n  //     this.sourcecode = translate(nextLang, this.sourceCodeKey(nextProgLang));\r\n  //   }\r\n  // }\r\n\r\n  send(controlEvent: CONTROL_EVENT, stdinText?: string) {\r\n    const sourcecode = this.sourcecode;\r\n    const lineNumOfBreakpoint = this.lineNumOfBreakpoint;\r\n    const progLang = this.props.progLang;\r\n    const request: Request = {\r\n      sourcecode,\r\n      controlEvent,\r\n      stdinText,\r\n      lineNumOfBreakpoint,\r\n      progLang,\r\n    };\r\n    this.controlEvent = controlEvent;\r\n    if (controlEvent === 'SyntaxCheck') {\r\n      server\r\n        .send(request)\r\n        .then((response: Response) => {\r\n          const { errors } = response;\r\n          this.setSyntaxError(errors);\r\n        })\r\n        .catch((e) => {\r\n          alert('SyntaxCheck: ' + e);\r\n        });\r\n    } else if (\r\n      !this.noAlert &&\r\n      this.isDebugging &&\r\n      (controlEvent === 'BackAll' ||\r\n        controlEvent === 'StepBack' ||\r\n        controlEvent === 'Step' ||\r\n        controlEvent === 'StepAll') &&\r\n      sourcecode !== this.sentSourcecode\r\n    ) {\r\n      this.preventedCommand = controlEvent;\r\n      this.setState({ showAlert: true });\r\n    } else {\r\n      this.setState({ showAlert: false });\r\n      server\r\n        .send(request)\r\n        .then((response: Response) => {\r\n          this.recieve(response);\r\n        })\r\n        .catch((e) => {\r\n          alert('Other controlEvent' + e);\r\n        });\r\n    }\r\n  }\r\n\r\n  recieve(response: Response) {\r\n    try {\r\n      const {\r\n        debugState,\r\n        execState,\r\n        output,\r\n        step,\r\n        sourcecode,\r\n        files,\r\n        lastState,\r\n        stepCount,\r\n        linesShowUp,\r\n        allVariables,\r\n        variableShowUp,\r\n        outputChange,\r\n      } = response;\r\n      this.isDebugging = debugState !== 'Stop';\r\n      this.sentSourcecode = sourcecode;\r\n      if (debugState === 'Executing') {\r\n        return;\r\n      }\r\n      if (debugState === 'First') {\r\n        signal('init', stepCount, linesShowUp, allVariables, variableShowUp);\r\n      }\r\n      if (this.controlEvent !== 'JumpTo') {\r\n        signal('changeStep', step);\r\n      }\r\n      signal('changeState', debugState, step);\r\n      signal('changeOutput', output, outputChange);\r\n      signal('draw', execState, lastState);\r\n      signal('files', files);\r\n      this.setHighlightOnCode(debugState, execState);\r\n      // this.lineCnt = linesShowUp.length;\r\n    } catch (e) {\r\n      // alert('recieve: ' + e);\r\n      console.log(e)\r\n    }\r\n  }\r\n\r\n  setHighlightOnCode(debugState: DEBUG_STATE, execState?: ExecState) {\r\n    if (debugState === 'Stop') {\r\n      return;\r\n    }\r\n    if (typeof execState === 'undefined') {\r\n      return;\r\n    }\r\n    const codeRange = execState.getNextExpr().codeRange;\r\n    const AceRange = this.ace.acequire('ace/range').Range;\r\n    const editor: AceAjax.Editor = this.editorRef.current.editor;\r\n    if (codeRange) {\r\n      const range: AceAjax.Range = new AceRange(\r\n        codeRange.begin.y - 1,\r\n        codeRange.begin.x,\r\n        codeRange.end.y - 1,\r\n        codeRange.end.x\r\n      );\r\n      editor.resize(true);\r\n      // tslint:disable-next-line:no-empty\r\n      editor.scrollToLine(codeRange.begin.y, true, true, () => {});\r\n      if (debugState === 'EOF') {\r\n        editor.getSelection().setSelectionRange(new AceRange(-1, 0, -1, 1));\r\n      } else {\r\n        editor.getSelection().setSelectionRange(range);\r\n      }\r\n    }\r\n  }\r\n\r\n  setSyntaxError(errors: SyntaxErrorData[]) {\r\n    const editor: AceAjax.Editor = this.editorRef.current.editor;\r\n    const annotations = errors.map((error: SyntaxErrorData) => {\r\n      return {\r\n        row: error.line - 1,\r\n        column: error.charPositionInLine - 1,\r\n        text: error.getMsg(),\r\n        type: 'error',\r\n      };\r\n    });\r\n    const session: AceAjax.IEditSession = editor.getSession();\r\n    session.setAnnotations(annotations);\r\n    for (const highlightId of this.highlightIds) {\r\n      session.removeMarker(highlightId);\r\n    }\r\n    this.highlightIds = [];\r\n    for (const annotation of annotations) {\r\n      const range = (session as any).highlightLines(\r\n        annotation.row,\r\n        annotation.row,\r\n        'error_line'\r\n      );\r\n      this.highlightIds.push(range.id);\r\n    }\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <React.Fragment>\r\n        {this.state.showAlert ? this.renderAlert() : null} {this.renderEditor()}\r\n      </React.Fragment>\r\n    );\r\n  }\r\n\r\n  renderEditor() {\r\n    const mode = this.props.progLang;\r\n    const { fontSize, theme } = this.state;\r\n    return (\r\n      <AceEditor\r\n        ref={this.editorRef}\r\n        mode={mode}\r\n        theme=\"textmate\"\r\n        value={this.sourcecode}\r\n        name=\"sourcecode\"\r\n        fontSize={fontSize}\r\n        tabSize={2}\r\n        editorProps={{\r\n          $blockScrolling: Infinity,\r\n        }}\r\n        setOptions={{\r\n          enableBasicAutocompletion: true,\r\n          enableLiveAutocompletion: true,\r\n          showLineNumbers: true,\r\n          readOnly: false,\r\n        }}\r\n        style={{ height: '100%', width: '100%' }}\r\n        className=\"editorMain\"\r\n        onChange={(text: string) => {\r\n          sessionStorage.setItem('sourceCode', text);\r\n\r\n          this.sourcecode = text;\r\n\r\n          const delaySyntaxCheck = (code: string) => {\r\n            if (code === this.sourcecode) {\r\n              signal('debug', 'SyntaxCheck');\r\n            }\r\n          };\r\n          const cnt = text.split('\\n').length;\r\n          if(cnt < this.lineCnt) {\r\n            this.props.removeMultipleHighlight(cnt);\r\n          }\r\n          this.lineCnt = cnt;\r\n          setTimeout(() => delaySyntaxCheck(text), 1000);\r\n        }}\r\n        onBeforeLoad={(ace) => (this.ace = ace)}\r\n      />\r\n    );\r\n  }\r\n\r\n  hideAlert() {\r\n    this.setState({ showAlert: false });\r\n  }\r\n\r\n  renderAlert() {\r\n    const { lang } = this.props;\r\n    const warning = translate(lang, 'warning');\r\n    const editInDebug = translate(lang, 'editInDebug');\r\n    const continueDebug = translate(lang, 'continueDebug');\r\n    const restart = translate(lang, 'restart');\r\n    const rememberCommand = translate(lang, 'rememberCommand');\r\n    return (\r\n      <Modal.Dialog\r\n        className=\"modal-container\"\r\n        aria-labelledby=\"ModalHeader\"\r\n        // animation={true}\r\n        tabIndex={-1}\r\n        role=\"dialog\"\r\n      >\r\n        <Modal.Header>\r\n          <Modal.Title>{warning}</Modal.Title>\r\n        </Modal.Header>\r\n        <Alert bsStyle=\"danger\">\r\n          <p>{editInDebug}</p>\r\n        </Alert>\r\n        <Modal.Footer>\r\n          <Button\r\n            bsStyle=\"danger\"\r\n            onClick={() => {\r\n              this.isDebugging = false;\r\n              if (this.checkbox !== null) {\r\n                this.noAlert = this.checkbox.checked;\r\n              }\r\n              signal('debug', this.preventedCommand);\r\n            }}\r\n          >\r\n            {continueDebug}\r\n          </Button>\r\n          <Button\r\n            onClick={() => {\r\n              this.isDebugging = false;\r\n              if (this.checkbox !== null) {\r\n                this.noAlert = this.checkbox.checked;\r\n              }\r\n              signal('debug', 'Start');\r\n            }}\r\n          >\r\n            {restart}\r\n          </Button>\r\n          <Checkbox\r\n            validationState=\"warning\"\r\n            inputRef={(ref) => (this.checkbox = ref)}\r\n          >\r\n            {rememberCommand}\r\n          </Checkbox>\r\n        </Modal.Footer>\r\n      </Modal.Dialog>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapDispatchToProps = {\r\n  addHighlightStatement: addHighlightStatement,\r\n  removeHighlightStatement: removeHighlightStatement,\r\n  removeMultipleHighlight: removeMultipleHighlight,\r\n}\r\n\r\nexport default (connect(null, mapDispatchToProps) as any)(Editor);\r\n","import React from 'react';\r\nimport './style.scss';\r\nimport PanelHeader from '../../components/panelHeader/PanelHeader';\r\nimport Editor from '../../components/editor/Editor';\r\n\r\nfunction EditorPanel() {\r\n  return (\r\n    <div id='EditorPanel' className='panel'>\r\n      <PanelHeader title='Source Editor' />\r\n      <div className='editor-area'>\r\n        <Editor lang='en' progLang='c_cpp'/>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default EditorPanel;\r\n","import * as React from 'react';\r\n// tslint:disable-next-line:import-name\r\nimport AceEditor from 'react-ace';\r\n\r\nimport 'ace-builds/src-min-noconflict/mode-text';\r\nimport 'ace-builds/src-min-noconflict/theme-textmate';\r\nimport 'ace-builds/src-min-noconflict/theme-monokai';\r\nimport * as d3 from 'd3';\r\n\r\nimport './console.scss';\r\nimport { slot, signal, remove } from '../emitter';\r\nimport { LangProps } from '../Props';\r\nimport { DEBUG_STATE } from '../server';\r\ntype Props = LangProps;\r\n\r\ninterface State {\r\n  output: string;\r\n  isReadOnly: boolean;\r\n  outputChange: boolean;\r\n}\r\n\r\nexport default class Console extends React.Component<Props, State> {\r\n  constructor(props: Props) {\r\n    super(props);\r\n    this.state = { output: '', isReadOnly: true, outputChange: false };\r\n    this.onChange = this.onChange.bind(this);\r\n  }\r\n\r\n  componentDidMount() {\r\n    slot('changeOutput', (output: string, outputChange: boolean) => {\r\n      this.setState({ output, outputChange });\r\n    });\r\n    slot('changeState', async (debugState: DEBUG_STATE) => {\r\n      if (debugState === 'stdin') {\r\n        this.setState({ isReadOnly: false });\r\n      }\r\n    });\r\n  }\r\n\r\n  componentWillUnmount() {\r\n    remove('changeOutput');\r\n    remove('changeState');\r\n  }\r\n\r\n  onChange(text: string) {\r\n    if (text.endsWith('\\n')) {\r\n      const sendText = text.slice(0, -1).replace(this.state.output, '');\r\n      this.setState({ output: text, isReadOnly: true });\r\n      signal('debug', 'Step', sendText);\r\n    }\r\n  }\r\n\r\n  componentDidUpdate() {\r\n    if (this.state.outputChange) {\r\n      d3.select('#ConsolePanel')\r\n        .transition()\r\n        .duration(1000)\r\n        .tween('number', function () {\r\n          let i = d3.interpolateNumber(8, 16);\r\n          let j = d3.interpolateRgb('#ffffff', '#4A8CE3');\r\n          return function (t) {\r\n            d3.select('#ConsolePanel').style(\r\n              'box-shadow',\r\n              `0px 0px ${i(t)}px ${j(t)}`\r\n            );\r\n          };\r\n        });\r\n      d3.select('#ConsolePanel')\r\n        .transition()\r\n        .delay(1000)\r\n        .duration(1000)\r\n        .tween('number', function () {\r\n          let i = d3.interpolateNumber(16, 8);\r\n          let j = d3.interpolateRgb('#4A8CE3', '#ffffff');\r\n          return function (t) {\r\n            d3.select('#ConsolePanel').style(\r\n              'box-shadow',\r\n              `0px 0px ${i(t)}px ${j(t)}`\r\n            );\r\n          };\r\n        });\r\n    }\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <AceEditor\r\n        mode=\"text\"\r\n        theme=\"light\"\r\n        value={this.state.output}\r\n        onChange={this.onChange}\r\n        name=\"IO\"\r\n        fontSize={14}\r\n        editorProps={{ $blockScrolling: true }}\r\n        setOptions={{\r\n          enableBasicAutocompletion: false,\r\n          enableLiveAutocompletion: false,\r\n          showLineNumbers: false,\r\n          readOnly: this.state.isReadOnly,\r\n          showGutter: false,\r\n        }}\r\n        style={{ height: '100%', width: '100%', marginTop: '.25rem' }}\r\n        className=\"console\"\r\n      />\r\n    );\r\n  }\r\n}\r\n","import React from 'react';\r\nimport './style.scss';\r\nimport Console from '../../components/console/Console';\r\nimport PanelHeader from '../../components/panelHeader/PanelHeader';\r\n\r\nfunction ConsolePanel() {\r\n  return (\r\n    <div id=\"ConsolePanel\" className=\"panel\">\r\n      <PanelHeader title=\"Console\" />\r\n      <div className=\"console-area\">\r\n        <Console lang=\"en\" />\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default ConsolePanel;\r\n","import React from 'react';\r\nimport { StatementHighlight } from '../../panels/timelinePanel/TimelinePanel';\r\n\r\ninterface StatementHighlightContentProps {\r\n  // changeStatementColor: (lineNumber: number, color: string) => void;\r\n  linesShowUp: StatementHighlight[];\r\n  changeStatementVisible: (lineNumber: number) => void;\r\n  statements: {[key: string]: string},\r\n}\r\n\r\nfunction StatementHighlightContent({statements, linesShowUp, changeStatementVisible}: StatementHighlightContentProps) {\r\n  return <div className=\"highlight-statements\">\r\n    <p className=\"header\">Highlight Statements</p>\r\n    <div className=\"content\">\r\n      <div>\r\n      {\r\n        Object.keys(statements).map((d, i) => (\r\n          <div key={i} className={[\"item\", linesShowUp[+d] && !linesShowUp[+d].visible ? 'disable': ''].join(' ')} \r\n            onClick={() => changeStatementVisible(+d)}\r\n          >\r\n            <span style={{background: statements[d]}}></span>\r\n            <p>Line number: {+d+1}</p>\r\n          </div>\r\n        ))\r\n      }\r\n      </div>\r\n    </div>\r\n  </div>;\r\n}\r\n\r\nexport default StatementHighlightContent;\r\n","export default __webpack_public_path__ + \"static/media/timelineLegend.6f5aabd8.svg\";","import * as React from 'react';\r\nimport { signal } from '../emitter';\r\nimport * as d3 from 'd3';\r\nimport {\r\n  VariableWithSteps,\r\n  StatementHighlight,\r\n} from '../../panels/timelinePanel/TimelinePanel';\r\n\r\nimport timelineLegend from '../../assets/icon/timelineLegend.svg';\r\n\r\ninterface Props {\r\n  step: number;\r\n  max: number;\r\n  scale: any;\r\n  width: number;\r\n  height: number;\r\n  variableHighlights: VariableWithSteps[];\r\n  statementHighlights: StatementHighlight[];\r\n  maxDepth: number;\r\n}\r\ninterface State {\r\n  dragging: boolean;\r\n  dragIndex?: any;\r\n}\r\n\r\nexport default class Slider extends React.Component<Props, State> {\r\n  componentDidMount() {\r\n    window.addEventListener('mouseup', this.dragEnd, false);\r\n  }\r\n\r\n  componentWillUnmount() {\r\n    window.removeEventListener('mouseup', this.dragEnd, false);\r\n  }\r\n\r\n  constructor(props: Props) {\r\n    super(props);\r\n    this.state = {\r\n      dragging: false,\r\n    };\r\n  }\r\n\r\n  rectScale = () => {\r\n    const { maxDepth } = this.props;\r\n    const range = 40;\r\n\r\n    if (maxDepth > 20) {\r\n      return d3.scaleLog().range([0, range]).domain([1e-15, maxDepth]);\r\n    } else {\r\n      return d3.scaleLinear().range([0, range]).domain([0, maxDepth]);\r\n    }\r\n  };\r\n\r\n  dragStart = (e: any) => {\r\n    e.stopPropagation();\r\n    if (!this.state.dragging) {\r\n      this.setState(\r\n        {\r\n          dragging: true,\r\n        },\r\n        () => {\r\n          this.setState({ dragging: true });\r\n        }\r\n      );\r\n    }\r\n  };\r\n\r\n  dragEnd = (e: any) => {\r\n    e.stopPropagation();\r\n    this.setState(\r\n      {\r\n        dragging: false,\r\n      },\r\n      () => {\r\n        this.setState({ dragging: false });\r\n      }\r\n    );\r\n  };\r\n\r\n  dragFromSVG = (e: React.MouseEvent) => {\r\n    if (this.props.max === 0) return;\r\n    if (!this.state.dragging) {\r\n      let step = this.props.scale.invert(e.nativeEvent.offsetX);\r\n      step = Math.min(step, this.props.max);\r\n      step = Math.max(step, 0);\r\n      step = Math.round(step);\r\n      signal('changeStep', step);\r\n      signal('jumpTo', step);\r\n      this.setState(\r\n        {\r\n          dragging: true,\r\n        },\r\n        () => {\r\n          this.setState({ dragging: true });\r\n        }\r\n      );\r\n    }\r\n  };\r\n\r\n  mouseMove = (e: React.MouseEvent) => {\r\n    if (this.props.max === 0) return;\r\n    if (this.state.dragging) {\r\n      let step = this.props.scale.invert(e.nativeEvent.offsetX);\r\n      step = Math.min(step, this.props.max);\r\n      step = Math.max(step, 0);\r\n      step = Math.round(step);\r\n      signal('changeStep', step);\r\n      signal('jumpTo', step);\r\n    }\r\n  };\r\n\r\n  render() {\r\n    const {\r\n      step,\r\n      max,\r\n      scale,\r\n      width,\r\n      height,\r\n      variableHighlights,\r\n      statementHighlights,\r\n    } = this.props;\r\n\r\n    // const contenWidth = width > 250 ? width - 60 : width;\r\n    const contentWidth = width;\r\n    const activeWidth = max ? (step / max) * contentWidth : 0;\r\n\r\n    // console.log(contentWidth, activeWidth, step, max);\r\n\r\n    return (\r\n      <div>\r\n        <svg\r\n          style={{\r\n            display: 'block',\r\n            // paddingBottom: '8px',\r\n            zIndex: 6,\r\n            overflow: 'visible',\r\n          }}\r\n          height={height}\r\n          width={contentWidth}\r\n          onMouseDown={this.dragFromSVG}\r\n          onMouseMove={this.mouseMove}\r\n        >\r\n          <rect\r\n            className=\"timeline\"\r\n            height={8}\r\n            x={0}\r\n            y={height / 2 - 4}\r\n            width={contentWidth}\r\n            rx=\"4\"\r\n            ry=\"4\"\r\n          />\r\n          <rect\r\n            className=\"timeline active\"\r\n            height={8}\r\n            x={0}\r\n            y={height / 2 - 4}\r\n            width={activeWidth}\r\n            rx=\"4\"\r\n            ry=\"4\"\r\n          />\r\n\r\n          <g>\r\n            {variableHighlights.map((m) => {\r\n              return (\r\n                <g key={m.funcName + '_' + m.name}>\r\n                  {m['steps'].map((_step, i) => {\r\n                    if (m['visible']) {\r\n                      return (\r\n                        <rect\r\n                          key={i}\r\n                          height={30}\r\n                          x={scale(_step) - 1.5}\r\n                          y={-30}\r\n                          width={3}\r\n                          fill={m['color']}\r\n                        />\r\n                      );\r\n                    }\r\n                    return null;\r\n                  })}\r\n                </g>\r\n              );\r\n            })}\r\n          </g>\r\n          <g>\r\n            {statementHighlights.map((m) => {\r\n              return (\r\n                <g key={m.lineNumber}>\r\n                  {m['steps'].map((_step, i) => {\r\n                    if (m['visible']) {\r\n                      return (\r\n                        <rect\r\n                          height={this.rectScale()(m['depth'][i])}\r\n                          x={scale(_step) - 1.5}\r\n                          y={height / 2 + 4}\r\n                          width={3}\r\n                          fill={m['color']}\r\n                        ></rect>\r\n                      );\r\n                    }\r\n                    return null;\r\n                  })}\r\n                </g>\r\n              );\r\n            })}\r\n          </g>\r\n          <g>\r\n            <image x={width - 80} y={-60} xlinkHref={timelineLegend} />\r\n            {/* <text\r\n              className=\"timeline-legend\"\r\n              x={contentWidth}\r\n              y={height / 2 - 20}\r\n              fontSize=\"15\"\r\n            >\r\n              Variables\r\n            </text>\r\n            <text\r\n              className=\"timeline-legend\"\r\n              x={contentWidth}\r\n              y={height / 2 + 35}\r\n              fontSize=\"15\"\r\n            >\r\n              Statements\r\n            </text> */}\r\n          </g>\r\n        </svg>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","export default __webpack_public_path__ + \"static/media/stepLight.1342c687.svg\";","export default __webpack_public_path__ + \"static/media/stepDark.4b3318fe.svg\";","export default __webpack_public_path__ + \"static/media/restartLight.8c265da1.svg\";","export default __webpack_public_path__ + \"static/media/restartDark.bc869dd8.svg\";","export default __webpack_public_path__ + \"static/media/stepBackLight.d6c0cb2a.svg\";","export default __webpack_public_path__ + \"static/media/stepBackDark.4ac60f09.svg\";","export default __webpack_public_path__ + \"static/media/kaishi2.c2674428.svg\";","export default __webpack_public_path__ + \"static/media/kaishi1.7a08fbf8.svg\";","import classNames from 'classnames';\r\nimport React from 'react';\r\nimport './style.scss';\r\n\r\ninterface ControlButtonProps {\r\n  iconHrefLight: string;\r\n  iconHrefDark: string;\r\n  onClick: () => void;\r\n  disabled: boolean;\r\n}\r\n\r\nfunction ControlButton({iconHrefLight, iconHrefDark, onClick, disabled}: ControlButtonProps) {\r\n  return (\r\n    <div\r\n      className={classNames('control-button', {disabled: disabled})}\r\n      onClick={onClick}\r\n    >\r\n      <svg width={40} height={40}>\r\n        <image xlinkHref={disabled ? iconHrefLight : iconHrefDark} height='40' width='40' cursor='pointer' />\r\n      </svg>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default ControlButton;\r\n","import React, { useEffect, useState } from 'react';\r\n\r\nimport { DEBUG_STATE } from '../server';\r\nimport { showEvents, signal } from '../emitter';\r\nimport * as d3 from 'd3';\r\n\r\nimport stepLight from '../../assets/icon/stepLight.svg';\r\nimport stepDark from '../../assets/icon/stepDark.svg';\r\nimport stepAllLight from '../../assets/icon/stepAllLight.svg';\r\nimport stepAllDark from '../../assets/icon/stepAllDark.svg';\r\nimport restartLight from '../../assets/icon/restartLight.svg';\r\nimport restartDark from '../../assets/icon/restartDark.svg';\r\n\r\nimport stepBackLight from '../../assets/icon/stepBackLight.svg';\r\nimport stepBackDark from '../../assets/icon/stepBackDark.svg';\r\nimport backAllLight from '../../assets/icon/backAllLight.svg';\r\nimport backAllDark from '../../assets/icon/backAllDark.svg';\r\n\r\nimport startLight from '../../assets/icon/kaishi2.svg';\r\nimport startDark from '../../assets/icon/kaishi1.svg';\r\nimport ControlButton from './ControButton';\r\n\r\nimport './style.scss';\r\n\r\nfunction ControlButtonGroup({ debugState }: { debugState: DEBUG_STATE }) {\r\n  const [start, setStart] = useState(false);\r\n  const [stop, setStop] = useState(false);\r\n  const [backAll, setBackAll] = useState(false);\r\n  const [stepBack, setStepBack] = useState(false);\r\n  const [step, setStep] = useState(true);\r\n  const [stepAll, setStepAll] = useState(false);\r\n\r\n  useEffect(() => {\r\n    switch (debugState) {\r\n      case 'Stop':\r\n        setStart(true);\r\n        setStop(false);\r\n        setBackAll(false);\r\n        setStepBack(false);\r\n        setStep(false);\r\n        setStepAll(false);\r\n        break;\r\n      case 'First':\r\n        setStart(true);\r\n        setStop(true);\r\n        setBackAll(false);\r\n        setStepBack(false);\r\n        setStep(true);\r\n        setStepAll(true);\r\n        break;\r\n      case 'stdin':\r\n        setBackAll(false);\r\n        setStepBack(false);\r\n        setStep(true);\r\n        setStepAll(true);\r\n        break;\r\n      case 'Debugging':\r\n        setBackAll(true);\r\n        setStepBack(true);\r\n        setStep(true);\r\n        setStepAll(true);\r\n        break;\r\n      case 'Executing':\r\n        setBackAll(false);\r\n        setStepBack(false);\r\n        setStep(false);\r\n        setStepAll(false);\r\n        break;\r\n      case 'EOF':\r\n        setStart(true);\r\n        setStop(true);\r\n        setBackAll(true);\r\n        setStepBack(true);\r\n        setStep(false);\r\n        setStepAll(false);\r\n        break;\r\n      default:\r\n        break;\r\n    }\r\n    return () => {};\r\n  }, [debugState]);\r\n\r\n  return (\r\n    <div className=\"control-btn-group\">\r\n      {/* <ControlButton\r\n        iconHrefLight={backAllLight}\r\n        iconHrefDark={backAllDark}\r\n        // onClick={() => signal('debug', 'BackAll')}\r\n        onClick={() => {}}\r\n        disabled={!backAll}\r\n      /> */}\r\n      <ControlButton\r\n        iconHrefLight={stepBackLight}\r\n        iconHrefDark={stepBackDark}\r\n        onClick={() => signal('debug', 'StepBack')}\r\n        disabled={!stepBack}\r\n      />\r\n      <ControlButton\r\n        iconHrefLight={stop ? restartLight : startLight}\r\n        iconHrefDark={stop ? restartDark : startDark}\r\n        onClick={() => {\r\n          signal('debug', 'Start');\r\n          const arrowListJson = sessionStorage.getItem('arrowList');\r\n          let arrowList =\r\n            arrowListJson === null ? {} : JSON.parse(arrowListJson);\r\n          if (!arrowList) {\r\n            arrowList = {};\r\n          }\r\n          Object.keys(arrowList).forEach((name) => {\r\n            d3.select('#svg')\r\n              .select(`#block_${name}`)\r\n              .attr('transform', 'matrix(1,0,0,1,0,0)');\r\n          });\r\n          const sourceCode = sessionStorage.getItem('sourceCode');\r\n          sessionStorage.clear();\r\n          if (sourceCode) sessionStorage.setItem('sourceCode', sourceCode);\r\n        }}\r\n        disabled={!start}\r\n      />\r\n      <ControlButton\r\n        iconHrefLight={stepLight}\r\n        iconHrefDark={stepDark}\r\n        onClick={() => {\r\n          signal('debug', stop ? 'Step' : 'Start');\r\n        }}\r\n        disabled={!step}\r\n      />\r\n      {/* <ControlButton\r\n        iconHrefLight={stepAllLight}\r\n        iconHrefDark={stepAllDark}\r\n        // onClick={() => signal('debug', stop ? 'StepAll' : 'Exec')}\r\n        onClick={() => {}}\r\n        disabled={!stepAll}\r\n      /> */}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default ControlButtonGroup;\r\n","import React, { useCallback, useEffect, useMemo, useState } from 'react';\r\nimport { scaleLinear as linear } from 'd3-scale';\r\nimport PanelHeader from '../../components/panelHeader/PanelHeader';\r\nimport StatementHighlightContent from '../../components/timeline/StatementHighlightContent';\r\nimport VariableHighlightContent from '../../components/timeline/VariableHighlightContent';\r\nimport './style.scss';\r\nimport '../../styles/colors.scss';\r\nimport * as d3 from 'd3';\r\nimport { inArray } from 'jquery';\r\nimport Slider from '../../components/timeline/Slider';\r\nimport ControlButtonGroup from '../../components/timeline/ControlButtonGroup';\r\nimport { DEBUG_STATE } from '../../components/server';\r\nimport { remove, slot } from '../../components/emitter';\r\nimport { unstable_batchedUpdates } from 'react-dom';\r\nimport { Variable } from 'unicoen.ts/dist/interpreter/Engine/Variable';\r\n\r\nimport { useSelector } from 'react-redux'\r\nimport '../../components/timeline/timeline.scss';\r\ninterface OptionItem {\r\n  value: string;\r\n  label: string;\r\n  children: { value: string; label: string }[];\r\n}\r\n\r\nexport interface StatementHighlight {\r\n  color: string;\r\n  lineNumber: number;\r\n  visible: boolean;\r\n  steps: number[];\r\n  depth: number[];\r\n}\r\n\r\nexport interface VariableWithSteps {\r\n  color: string;\r\n  funcName: string;\r\n  name: string;\r\n  visible: boolean;\r\n  steps: number[];\r\n  variable: Variable;\r\n}\r\n\r\ninterface TimelinePanelProps {\r\n  variableShowUps: VariableWithSteps[];\r\n  updVariableShowUps: (variableShowUps: VariableWithSteps[]) => void;\r\n}\r\n\r\nfunction TimelinePanel({ variableShowUps, updVariableShowUps }: TimelinePanelProps) {\r\n  const [max, setMax] = useState(0);\r\n  const [marks, setMarks] = useState({});\r\n  const [step, setStep] = useState(0);\r\n  const [variableHighlights, setVariableHighlights] = useState<\r\n    VariableWithSteps[]\r\n  >([]);\r\n  const [statementHighlights, setStatementHighlights] = useState<\r\n    StatementHighlight[]\r\n  >([]);\r\n  const [options, setOptions] = useState<OptionItem[]>([]);\r\n  const [linesShowUp, setLinesShowUp] = useState<StatementHighlight[]>([]);\r\n  const [debugStatus, setDebugStatus] = useState('');\r\n  const [debugState, setDebugState] = useState<DEBUG_STATE>('Stop');\r\n  const timelineArea = React.createRef<any>();\r\n  const [timelineWidth, setTimelineWidth] = useState(0);\r\n\r\n  const statements = useSelector((state) => (state as any).statements);\r\n  const variables = useSelector((state) => (state as any).variables);\r\n\r\n  useEffect(() => {\r\n    slot('changeStep', (step: number) => {\r\n      setStep(step);\r\n    });\r\n    slot('statementHighlight', (lineNumber: number) => {\r\n      const statement = linesShowUp[lineNumber];\r\n      const color = d3\r\n        .rgb(\r\n          Math.floor(Math.random() * 255),\r\n          Math.floor(Math.random() * 255),\r\n          Math.floor(Math.random() * 255)\r\n        )\r\n        .formatRgb();\r\n      alert(linesShowUp);\r\n      statement.color = color;\r\n      statementHighlights.push(statement);\r\n      setStatementHighlights(statementHighlights);\r\n      d3.selectAll(`.highlight${lineNumber}`).style('background-color', color);\r\n    });\r\n\r\n    slot('cancelStatementHighlight', (lineNumber: number) => {\r\n      for (let i = 0; i < statementHighlights.length; i++) {\r\n        if (statementHighlights[i]['lineNumber'] == lineNumber + 1) {\r\n          statementHighlights.splice(i, 1);\r\n          break;\r\n        }\r\n      }\r\n      d3.selectAll(`.highlight${lineNumber}`).style('background-color', '#fff');\r\n      setStatementHighlights(statementHighlights);\r\n    });\r\n    slot(\r\n      'init',\r\n      (\r\n        stepCount: number,\r\n        linesShowUp: any,\r\n        allVariables: any,\r\n        variableShowUp: any\r\n      ) => {\r\n        const options: OptionItem[] = [];\r\n        Object.keys(allVariables).forEach((funcName) => {\r\n          const temp: OptionItem = {\r\n            value: funcName,\r\n            label: funcName,\r\n            children: [],\r\n          };\r\n          Object.keys(allVariables[funcName]).forEach((varName) => {\r\n            temp.children.push({\r\n              value: varName,\r\n              label: varName,\r\n            });\r\n          });\r\n          options.push(temp);\r\n        });\r\n        console.log(options, 'options');\r\n        unstable_batchedUpdates(() => {\r\n          setMax(stepCount);\r\n          setVariableHighlights([]);\r\n          setStatementHighlights([]);\r\n          setLinesShowUp(linesShowUp);\r\n          updVariableShowUps(variableShowUp);\r\n          setOptions(options);\r\n        });\r\n        updVariableShowUps(variableShowUp);\r\n      }\r\n    );\r\n    slot('changeState', (debugState: DEBUG_STATE, step: number) => {\r\n      let debugStatus = '';\r\n      if (debugState === 'Debugging') {\r\n        debugStatus = `Step ${step}`;\r\n      } else {\r\n        debugStatus = debugState;\r\n      }\r\n      unstable_batchedUpdates(() => {\r\n        setDebugStatus(debugStatus);\r\n        setDebugState(debugState);\r\n      });\r\n    });\r\n\r\n    return () => {\r\n      remove('changeStep');\r\n      remove('statementHighlight');\r\n      remove('cancelStatementHighlight');\r\n      remove('init');\r\n      remove('changeState');\r\n    };\r\n  });\r\n\r\n  const changeStatementColor = (lineNumber: number, color: string) => {\r\n    for (let i = 0; i < statementHighlights.length; i++) {\r\n      if (statementHighlights[i].lineNumber === lineNumber) {\r\n        statementHighlights[i].color = color;\r\n        break;\r\n      }\r\n    }\r\n    d3.selectAll(`.highlight${lineNumber - 1}`).style(\r\n      'background-color',\r\n      color\r\n    );\r\n    setStatementHighlights(statementHighlights);\r\n  };\r\n\r\n  const changeStatementVisible = useCallback( (lineNumber: number) => {\r\n    if(!linesShowUp[lineNumber]) return;\r\n    \r\n    const lines = [...linesShowUp];\r\n    lines[lineNumber] = {...linesShowUp[lineNumber], visible: !linesShowUp[lineNumber].visible}\r\n    setLinesShowUp(lines);\r\n    // const len = statementHighlights.length;\r\n    // for (let i = 0; i < len; i++) {\r\n    //   if (statementHighlights[i].lineNumber === lineNumber) {\r\n    //     statementHighlights[i].visible = !statementHighlights[i].visible;\r\n    //     break;\r\n    //   }\r\n    // }\r\n    // setStatementHighlights(statementHighlights);\r\n  }, [linesShowUp])\r\n\r\n  const addVariableHighlight = (funcName: string, varName: string) => {\r\n    const color = d3\r\n      .rgb(\r\n        Math.floor(Math.random() * 255),\r\n        Math.floor(Math.random() * 255),\r\n        Math.floor(Math.random() * 255)\r\n      )\r\n      .formatRgb();\r\n    // console.log('addVariableHighlight: ', color);\r\n    let temp = null;\r\n    for (let i = 0; i < variableShowUps.length; i++) {\r\n      if (\r\n        variableShowUps[i].funcName === funcName &&\r\n        variableShowUps[i].name === varName\r\n      ) {\r\n        variableShowUps[i].color = color;\r\n        temp = variableShowUps[i];\r\n        break;\r\n      }\r\n    }\r\n    if (temp === null) {\r\n      alert('Unexcepted Variable');\r\n      return;\r\n    }\r\n    if (inArray(temp, variableHighlights) < 0) {\r\n      variableHighlights.push(temp);\r\n      setVariableHighlights(variableHighlights);\r\n      updVariableShowUps(variableShowUps);\r\n    }\r\n    const memoryCells = d3\r\n      .select('#memory')\r\n      .selectAll(`.memory-${funcName}-${varName}`);\r\n    memoryCells.select('rect').style('stroke', color);\r\n    memoryCells.selectAll('text').attr('fill', color);\r\n    const blockCells = d3\r\n      .select('#svg')\r\n      .selectAll(`.block-${funcName}-${varName}`);\r\n    blockCells.select('rect').style('stroke', color);\r\n    blockCells.selectAll('text').attr('fill', color);\r\n  };\r\n\r\n  const removeVariableHighlight = (funcName: string, varName: string) => {\r\n    for (let i = 0; i < variableShowUps.length; i++) {\r\n      if (\r\n        variableShowUps[i].funcName === funcName &&\r\n        variableShowUps[i].name === varName\r\n      ) {\r\n        variableShowUps[i].visible = true;\r\n        break;\r\n      }\r\n    }\r\n    for (let i = 0; i < variableHighlights.length; i++) {\r\n      for (let j = 0; j < variableHighlights.length; j++) {\r\n        if (\r\n          variableHighlights[j].funcName === funcName &&\r\n          variableHighlights[j].funcName === varName\r\n        ) {\r\n          variableHighlights.splice(i, 1);\r\n          break;\r\n        }\r\n      }\r\n    }\r\n    const memoryCells = d3\r\n      .select('#memory')\r\n      .selectAll(`.memory-${funcName}-${varName}`);\r\n    memoryCells.select('rect').style('stroke', 'black');\r\n    memoryCells.selectAll('text').attr('fill', 'black');\r\n    const blockCells = d3\r\n      .select('#svg')\r\n      .selectAll(`.block-${funcName}-${varName}`);\r\n    blockCells.select('rect').style('stroke', 'black');\r\n    blockCells.selectAll('text').attr('fill', 'black');\r\n\r\n    setVariableHighlights(variableHighlights);\r\n    updVariableShowUps(variableShowUps);\r\n  };\r\n\r\n  const changeVariableColor = (\r\n    funcName: string,\r\n    varName: string,\r\n    color: string\r\n  ) => {\r\n    let i = 0;\r\n    for (; i < variableShowUps.length; i++) {\r\n      if (\r\n        variableShowUps[i].funcName === funcName &&\r\n        variableShowUps[i].name === varName\r\n      ) {\r\n        variableShowUps[i].color = color;\r\n        break;\r\n      }\r\n    }\r\n    for (let j = 0; j < variableHighlights.length; j++) {\r\n      if (\r\n        variableHighlights[j].funcName === funcName &&\r\n        variableHighlights[j].name === varName\r\n      ) {\r\n        variableHighlights[j].color = color;\r\n        break;\r\n      }\r\n    }\r\n    const memoryCells = d3\r\n      .select('#memory')\r\n      .selectAll(`.memory-${funcName}-${varName}`);\r\n    memoryCells.select('rect').style('stroke', color);\r\n    memoryCells.selectAll('text').attr('fill', color);\r\n    const blockCells = d3\r\n      .select('#svg')\r\n      .selectAll(`.block-${funcName}-${varName}`);\r\n    blockCells.select('rect').style('stroke', color);\r\n    blockCells.selectAll('text').attr('fill', color);\r\n\r\n    setVariableHighlights(variableHighlights);\r\n    updVariableShowUps(variableShowUps);\r\n  };\r\n\r\n  const changeVariableVisible = (funcName: string, varName: string) => {\r\n    for (let i = 0; i < variableShowUps.length; i++) {\r\n      if (\r\n        variableShowUps[i].funcName === funcName &&\r\n        variableShowUps[i]['name'] === varName\r\n      ) {\r\n        if (variableShowUps[i]['visible']) {\r\n          const memoryCells = d3\r\n            .select('#memory')\r\n            .selectAll(`.memory-${funcName}-${varName}`);\r\n          memoryCells.select('rect').style('stroke', 'black');\r\n          memoryCells.selectAll('text').attr('fill', 'black');\r\n          const blockCells = d3\r\n            .select('#svg')\r\n            .selectAll(`.block-${funcName}-${varName}`);\r\n          blockCells.select('rect').style('stroke', 'black');\r\n          blockCells.selectAll('text').attr('fill', 'black');\r\n        } else {\r\n          const memoryCells = d3\r\n            .select('#memory')\r\n            .selectAll(`.memory-${funcName}-${varName}`);\r\n          memoryCells\r\n            .select('rect')\r\n            .style('stroke', variableShowUps[i]['color']);\r\n          memoryCells\r\n            .selectAll('text')\r\n            .attr('fill', variableShowUps[i]['color']);\r\n          const blockCells = d3\r\n            .select('#svg')\r\n            .selectAll(`.block-${funcName}-${varName}`);\r\n          blockCells.select('rect').style('stroke', variableShowUps[i]['color']);\r\n          blockCells.selectAll('text').attr('fill', variableShowUps[i]['color']);\r\n        }\r\n        variableShowUps[i]['visible'] = !variableShowUps[i]['visible'];\r\n        break;\r\n      }\r\n    }\r\n\r\n    setVariableHighlights(variableHighlights);\r\n    updVariableShowUps(variableShowUps);\r\n  };\r\n\r\n  useEffect(() => {\r\n    setTimelineWidth(timelineArea.current.clientWidth - 60);\r\n  }, [timelineArea]);\r\n\r\n  useEffect(() => {\r\n    if(linesShowUp.length) {\r\n      setStatementHighlights(\r\n        Object.keys(statements).map(d => ({\r\n          ...linesShowUp[d as any],\r\n          color: statements[d],\r\n        }))\r\n      )\r\n    }\r\n  }, [linesShowUp, statements])\r\n\r\n  const maxDepth = useMemo(() => {\r\n    let max = 0;\r\n    Object.values(linesShowUp).forEach(({depth}) => {\r\n      max = Math.max(max, ...depth)\r\n    })\r\n\r\n    return max;\r\n  }, [linesShowUp])\r\n\r\n  useEffect(() => {\r\n    if(variableShowUps.length) {\r\n      console.log(variableShowUps, 'varib', variables)\r\n     \r\n      const highlights = variableShowUps.filter(({funcName, name}) => {\r\n        return variables[funcName+'-'+name]\r\n      }).map(d => {\r\n        return ({\r\n          ...d,\r\n          color: variables[d.funcName+'-'+d.name]\r\n        })\r\n      })\r\n\r\n      setVariableHighlights(highlights)\r\n    }\r\n  }, [variableShowUps, variables])\r\n\r\n  return (\r\n    <div id=\"TimelinePanel\" className=\"panel\">\r\n      <PanelHeader title=\"Timeline\" />\r\n      <div className=\"main-content\">\r\n        <div className=\"col-2\" ref={timelineArea}>\r\n          <div className=\"row-1\">\r\n            <Slider\r\n              step={step}\r\n              max={max}\r\n              scale={linear().domain([0, max]).range([0, timelineWidth])}\r\n              width={timelineWidth}\r\n              height={8}\r\n              maxDepth={maxDepth}\r\n              variableHighlights={variableHighlights}\r\n              statementHighlights={statementHighlights}\r\n            />\r\n          </div>\r\n          <div className=\"row-2\">\r\n            <ControlButtonGroup debugState={debugState} />\r\n          </div>\r\n        </div>\r\n        <div className=\"col-1\">\r\n          <StatementHighlightContent\r\n            statements={statements}\r\n            linesShowUp={linesShowUp}\r\n            // changeStatementColor={changeStatementColor}\r\n            // statementHighlights={statementHighlights}\r\n            changeStatementVisible={changeStatementVisible}\r\n          />\r\n        </div>\r\n        {/* <div className=\"col-3\">\r\n          <VariableHighlightContent\r\n            variableHighlights={variableHighlights}\r\n            options={options}\r\n          // addVariableHighlight={addVariableHighlight}\r\n          // changeVariableColor={changeVariableColor}\r\n          // changeVariableVisible={changeVariableVisible}\r\n          // removeVariableHighlight={removeVariableHighlight}\r\n          />\r\n        </div> */}\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default TimelinePanel;\r\n","import { ExecState } from 'unicoen.ts/dist/interpreter/Engine/ExecState';\r\nimport { Stack } from 'unicoen.ts/dist/interpreter/Engine/Stack';\r\nimport { Variable } from 'unicoen.ts/dist/interpreter/Engine/Variable';\r\nimport { Vector } from 'vector2d';\r\n\r\nexport type BlockCellContainer = BlockCell[];\r\nexport type BlockTable = BlockCellContainer[];\r\n\r\nexport function arrayToString(value: number | any[], type: string) {\r\n  const array = valueToArray(value, type);\r\n  if (Array.isArray(value)) {\r\n    if (\r\n      (type.startsWith('char') || type.startsWith('unsignedchar')) &&\r\n      type.split('[').length === 2\r\n    ) {\r\n      return '\"' + array.toString() + '\"';\r\n    }\r\n    return '[' + array.toString() + ']';\r\n  }\r\n  return array.toString();\r\n}\r\n\r\nexport function valueToArray(value: number | any[], type: string) {\r\n  const res: string[] = [];\r\n  if (Array.isArray(value)) {\r\n    value.forEach((v) => {\r\n      res.push(arrayToString(v.value, v.type));\r\n    });\r\n  } else {\r\n    if (type === 'char' || type === 'unsignedchar') {\r\n      return typeof value === undefined || value === 0\r\n        ? ''\r\n        : String.fromCharCode(value);\r\n    } else {\r\n      return value ? value : 0;\r\n    }\r\n  }\r\n  if (\r\n    (type.startsWith('char') || type.startsWith('unsignedchar')) &&\r\n    type.split('[').length === 2\r\n  ) {\r\n    return [res.join('')];\r\n  }\r\n  return res;\r\n}\r\n\r\nexport class BlockDrawer {\r\n  private blockStacks: BlockStack[] = [];\r\n  private blockArrows: any = [null, null];\r\n  private execState: ExecState | null = null;\r\n  constructor(execState?: ExecState) {\r\n    if (typeof execState === 'undefined') return;\r\n    this.execState = execState;\r\n    this.reset();\r\n    this.update();\r\n    this.calcPos();\r\n  }\r\n  private reset() {\r\n    this.blockStacks = [];\r\n  }\r\n\r\n  private update() {\r\n    if (this.execState === null) return;\r\n    const stacks = this.execState.getStacks();\r\n    stacks.forEach((stack, i) => {\r\n      if (stack.name !== 'GLOBAL') {\r\n        const blockStack = new BlockStack(stack);\r\n        blockStack.setColor('#979797');\r\n        this.blockStacks.push(blockStack);\r\n      }\r\n    });\r\n  }\r\n\r\n  private calcPos() {\r\n    const originX = 300;\r\n    const originY = 5;\r\n    const offsetX = 40;\r\n    const offsetY = 40;\r\n    const x = originX;\r\n    let y = originY;\r\n    this.blockStacks.slice(-2).forEach((blockStack, index) => {\r\n      this.blockArrows[index] = blockStack.getName();\r\n      const height = this.calcStackPos(x, y, blockStack);\r\n      y += height + offsetY;\r\n    });\r\n\r\n    this.blockStacks.slice(0, -2).forEach((blockStack, index) => {\r\n      this.calcStackPos(0, 0, blockStack);\r\n    });\r\n  }\r\n\r\n  private calcStackPos(x: number, y: number, blockStack: BlockStack) {\r\n    blockStack.setPos(x, y);\r\n    const offsetX = 20;\r\n    const offsetY = 40;\r\n    const originX = x + offsetX;\r\n    const originY = y + 20;\r\n    let row = 1;\r\n    let count = 0;\r\n    const blockTable = blockStack.getBlockTable();\r\n    blockTable.forEach((blockCellContainer) => {\r\n      const len = 1;\r\n      if (count + len > 2) {\r\n        row++;\r\n        count = 0;\r\n      }\r\n      const _x = originX + (offsetX + BlockCell.WIDTH) * count + offsetX;\r\n      const _y =\r\n        originY + (offsetY + BlockCell.HEIGHT) * row - BlockCell.HEIGHT;\r\n      this.calcVariablePos(_x, _y, blockCellContainer);\r\n      count += len;\r\n    });\r\n    blockStack.setHeight((BlockCell.HEIGHT + offsetY) * row + offsetY * 2);\r\n    blockStack.setWidth((BlockCell.WIDTH + offsetX) * 2 + offsetX * 3);\r\n\r\n    return (BlockCell.HEIGHT + offsetY) * row + offsetY * 2;\r\n  }\r\n\r\n  private calcVariablePos(\r\n    x: number,\r\n    y: number,\r\n    blockCellContainer: BlockCellContainer\r\n  ) {\r\n    const offsetX = 20 + BlockCell.WIDTH;\r\n    blockCellContainer[0].setPos(x, y);\r\n  }\r\n\r\n  // private calcVariablePos(\r\n  //   x: number,\r\n  //   y: number,\r\n  //   blockCellContainer: BlockCellContainer\r\n  // ) {\r\n  //   const offsetX = 20 + BlockCell.WIDTH;\r\n  //   if (blockCellContainer.length === 1) {\r\n  //     blockCellContainer[0].setPos(x, y);\r\n  //   } else {\r\n  //     blockCellContainer[0].setPos(x - 10, y - 10);\r\n  //     blockCellContainer[0].setWidth(\r\n  //       offsetX * Math.min(getCellsByDepth(blockCellContainer, 1).length, 3)\r\n  //     );\r\n  //     blockCellContainer[0].setHeight(BlockCell.HEIGHT + 20);\r\n  //     const depth = getDepth(blockCellContainer);\r\n  //     for (let i = 1; i <= depth; i++) {\r\n  //       const blockCells = getCellsByDepth(blockCellContainer, i);\r\n  //       blockCells.forEach((blockCell) => {});\r\n  //     }\r\n  //   }\r\n  // }\r\n\r\n  public getBlockStacks() {\r\n    return this.blockStacks;\r\n  }\r\n\r\n  public getBlockArrows() {\r\n    return this.blockArrows;\r\n  }\r\n\r\n  public addBlockStack(blockStack: BlockStack) {\r\n    this.blockStacks.push(blockStack);\r\n  }\r\n\r\n  public addArrow(stackName: any) {\r\n    this.blockArrows.push(stackName);\r\n  }\r\n}\r\n\r\nexport class BlockStack {\r\n  public readonly key: string;\r\n  private pos: Vector = new Vector(0, 0);\r\n  private blockTable: BlockTable;\r\n  private stack: Stack;\r\n  private width = 0;\r\n  private height = 0;\r\n  private color: string | undefined;\r\n\r\n  constructor(stack: Stack) {\r\n    this.stack = stack;\r\n    this.blockTable = this.makeBlockTable();\r\n    this.key = stack.name;\r\n  }\r\n\r\n  public setPos(x: number, y: number) {\r\n    this.pos.setAxes(x, y);\r\n  }\r\n\r\n  public setWidth(width: number) {\r\n    this.width = width;\r\n  }\r\n\r\n  public setHeight(height: number) {\r\n    this.height = height;\r\n  }\r\n\r\n  public setColor(color: string) {\r\n    this.color = color;\r\n  }\r\n\r\n  private makeBlockTable(): BlockTable {\r\n    const blockTable: BlockTable = [];\r\n    const variables = this.stack.getVariables();\r\n    const stackName = this.stack.name;\r\n    variables.forEach((variable) => {\r\n      const value = variable.getValue();\r\n      const isArrayVariable = Array.isArray(value);\r\n      const blockVariable = isArrayVariable\r\n        ? new BlockArrayVariable(variable, stackName)\r\n        : new BlockVariable(variable, stackName);\r\n      const cellss = blockVariable.getBlockCellContainer();\r\n      blockTable.push(cellss);\r\n    });\r\n    return blockTable;\r\n  }\r\n\r\n  public getBlockTable() {\r\n    return this.blockTable;\r\n  }\r\n\r\n  public x() {\r\n    return this.pos.getX();\r\n  }\r\n\r\n  public y() {\r\n    return this.pos.getY();\r\n  }\r\n\r\n  public getWidth() {\r\n    return this.width;\r\n  }\r\n\r\n  public getHeight() {\r\n    return this.height;\r\n  }\r\n\r\n  public getName() {\r\n    const res = this.key.replace(/[&|\\\\*:^%$@()[\\].]/g, '_');\r\n    return res;\r\n  }\r\n\r\n  public getColor() {\r\n    return this.color;\r\n  }\r\n}\r\n\r\nexport class BlockVariable {\r\n  public readonly key: string;\r\n  protected blockCellContainer: BlockCellContainer = [];\r\n  protected readonly variable: Variable;\r\n  protected readonly stackName: string;\r\n  constructor(variable: Variable, stackName: string) {\r\n    this.variable = variable;\r\n    this.stackName = stackName;\r\n    this.key = `${stackName}-${variable.name}`;\r\n    this.key = this.key.replace(/[&|\\\\*:^%$@()[\\].]/g, '_');\r\n    this.init();\r\n  }\r\n\r\n  protected init() {\r\n    const { type, name, address } = this.variable;\r\n    const cell = this.pushCell(name, this.variable.getValue());\r\n    cell.setType(type);\r\n    cell.setAddress(address);\r\n  }\r\n\r\n  protected pushCell(name: string, value: any): BlockCell {\r\n    const cell = new BlockCell(name, this.key, value);\r\n    this.blockCellContainer.push(cell);\r\n    return cell;\r\n  }\r\n\r\n  public getBlockCellContainer(): BlockCellContainer {\r\n    return this.blockCellContainer;\r\n  }\r\n}\r\n\r\nexport class BlockArrayVariable extends BlockVariable {\r\n  constructor(variable: Variable, stackName: string) {\r\n    super(variable, stackName);\r\n  }\r\n\r\n  public getBlockCellContainer(): BlockCellContainer {\r\n    const children: BlockCellContainer = [];\r\n    const value: Variable[] = this.variable.getValue();\r\n    for (const v of value) {\r\n      const blockVariable = Array.isArray(v.getValue())\r\n        ? new BlockArrayVariable(v, this.stackName)\r\n        : new BlockVariable(v, this.stackName);\r\n      const table = blockVariable.getBlockCellContainer();\r\n      children.push(...table);\r\n    }\r\n    return this.blockCellContainer.concat(children);\r\n  }\r\n}\r\n\r\nexport class BlockCell {\r\n  public static readonly FONT_SIZE: number = 20;\r\n  public static readonly HEIGHT: number = 50;\r\n  public static readonly WIDTH: number = 150;\r\n  private address: number | undefined;\r\n  public readonly key: string;\r\n  private type: string | undefined;\r\n  private name: string;\r\n  private pos: Vector = new Vector(-1, -1);\r\n  private value: any;\r\n  private depth = 0;\r\n  private width: number = BlockCell.WIDTH;\r\n  private height: number = BlockCell.HEIGHT;\r\n  constructor(name: string, parentKey: string, value: any) {\r\n    this.name = name;\r\n    this.key = parentKey;\r\n    this.key = this.key.replace(/[&|\\\\*:^%$@()[\\].]/g, '_');\r\n    this.value = value;\r\n    this.depth = this.name.split('[').length - 1;\r\n  }\r\n\r\n  public setAddress(address: number) {\r\n    this.address = address;\r\n  }\r\n\r\n  public setType(type: string) {\r\n    this.type = type;\r\n  }\r\n\r\n  public setPos(x: number, y: number) {\r\n    this.pos.setAxes(x, y);\r\n  }\r\n\r\n  public setWidth(width: number) {\r\n    this.width = width;\r\n  }\r\n\r\n  public setHeight(height: number) {\r\n    this.height = height;\r\n  }\r\n\r\n  public getAddress() {\r\n    return this.address;\r\n  }\r\n\r\n  public getType() {\r\n    return this.type;\r\n  }\r\n\r\n  public getName() {\r\n    return this.name;\r\n  }\r\n\r\n  public x() {\r\n    return this.pos.getX();\r\n  }\r\n\r\n  public y() {\r\n    return this.pos.getY();\r\n  }\r\n\r\n  public getValue() {\r\n    if (this.type!.split('[').length > 1) {\r\n      return arrayToString(this.value, this.type!.split('[')[0]);\r\n    }\r\n\r\n    return this.value.toString();\r\n  }\r\n\r\n  public getDepth() {\r\n    return this.depth;\r\n  }\r\n\r\n  public getWidth() {\r\n    return this.width;\r\n  }\r\n\r\n  public getHeight() {\r\n    return this.height;\r\n  }\r\n}\r\n","import * as React from 'react';\r\nimport { BlockStack, BlockCell } from '../blockDrawer/BlockDrawer';\r\nimport * as d3 from 'd3';\r\n\r\ninterface Props {\r\n  blockStack: BlockStack;\r\n}\r\n\r\n// eslint-disable-next-line @typescript-eslint/no-empty-interface\r\ninterface State {}\r\n\r\nexport function wrapWord(\r\n  text: d3.Selection<d3.BaseType, unknown, HTMLElement, any>,\r\n  width: number,\r\n  className:\r\n    | string\r\n    | number\r\n    | boolean\r\n    | d3.ValueFn<SVGTSpanElement, unknown, string | number | boolean | null>\r\n    | null\r\n) {\r\n  text.each(function () {\r\n    const text = d3.select(this),\r\n      words = text.text().split('').reverse();\r\n    let word;\r\n    const line = [],\r\n      x = text.attr('x'),\r\n      y = text.attr('y'),\r\n      tspan = text\r\n        .text(null)\r\n        .append('tspan')\r\n        .attr('class', className)\r\n        .attr('x', x)\r\n        .attr('y', y);\r\n    while ((word = words.pop())) {\r\n      line.push(word);\r\n      tspan.text(line.join(''));\r\n      if (tspan.node()!.getComputedTextLength() > width) {\r\n        line.pop();\r\n        line.splice(line.length - 2, 3, '.', '.', '.');\r\n        tspan.text(line.join(''));\r\n        break;\r\n      }\r\n    }\r\n  });\r\n}\r\n\r\nexport default class Block extends React.Component<Props, State> {\r\n  componentDidUpdate() {\r\n    wrapWord(d3.selectAll('.value'), BlockCell.WIDTH - 10, 'value');\r\n  }\r\n\r\n  renderBlockBackground() {\r\n    const { blockStack } = this.props;\r\n    return (\r\n      <React.Fragment>\r\n        <rect\r\n          x={blockStack.x()}\r\n          y={blockStack.y()}\r\n          width={blockStack.getWidth()}\r\n          height={blockStack.getHeight()}\r\n          rx={10}\r\n          ry={10}\r\n          fill=\"white\"\r\n          style={{ stroke: '#979797', strokeWidth: '1.5px' }}\r\n        ></rect>\r\n        <g className=\"block-left\"></g>\r\n        {/* <path\r\n          d={\r\n            'M ' +\r\n            blockStack.x() +\r\n            ' ' +\r\n            (blockStack.y() + 10) +\r\n            ' L ' +\r\n            blockStack.x() +\r\n            ' ' +\r\n            (blockStack.y() + blockStack.getHeight() - 10) +\r\n            ' A 10 10 0 0 0 ' +\r\n            (blockStack.x() + 10) +\r\n            ' ' +\r\n            (blockStack.y() + blockStack.getHeight()) +\r\n            ' L ' +\r\n            (blockStack.x() + 10) +\r\n            ' ' +\r\n            blockStack.y() +\r\n            ' A 10 10 0 0 0 ' +\r\n            blockStack.x() +\r\n            ' ' +\r\n            (blockStack.y() + 10)\r\n          }\r\n          fill=\"black\"\r\n          stroke=\"black\"\r\n          strokeWidth={2}\r\n        /> */}\r\n        <text\r\n          x={blockStack.x() + 15}\r\n          y={blockStack.y() + BlockCell.FONT_SIZE + 7}\r\n          fontSize={BlockCell.FONT_SIZE + 2}\r\n          fill={blockStack.getColor()}\r\n          className=\"function-name\"\r\n        >\r\n          {blockStack.key.split('.')[0]}\r\n        </text>\r\n      </React.Fragment>\r\n    );\r\n  }\r\n\r\n  renderBlockContent() {\r\n    const { blockStack } = this.props;\r\n    const list: JSX.Element[] = [];\r\n    const blockTable = blockStack.getBlockTable();\r\n    blockTable.forEach((blockCellContainer) => {\r\n      for (let i = 0; i < 1; i++) {\r\n        if (i >= 3) break;\r\n        const blockCell = blockCellContainer[i];\r\n        list.push(\r\n          <g\r\n            className={`block-${\r\n              blockStack.key.split('.')[0]\r\n            }-${blockCell.getName()}`}\r\n            id={`block-${blockStack.key.replace(\r\n              '.',\r\n              '_'\r\n            )}-${blockCell.getName()}`}\r\n            key={`block-${blockStack.key.replace(\r\n              '.',\r\n              '_'\r\n            )}-${blockCell.getName()}`}\r\n            transform=\"matrix(1,0,0,1,0,0)\"\r\n          >\r\n            <text\r\n              x={blockCell.x() + 5}\r\n              y={blockCell.y() - 5}\r\n              fontSize={BlockCell.FONT_SIZE}\r\n              fontWeight=\"blod\"\r\n              fill={blockStack.getColor()}\r\n              className=\"variable-name\"\r\n            >\r\n              {blockCell.getName()}\r\n            </text>\r\n            <rect\r\n              x={blockCell.x()}\r\n              y={blockCell.y()}\r\n              width={blockCell.getWidth()}\r\n              height={blockCell.getHeight()}\r\n              fill=\"white\"\r\n              style={{ stroke: blockStack.getColor(), strokeWidth: '1.5px' }}\r\n            />\r\n            <text\r\n              className=\"value variable-value\"\r\n              x={blockCell.x() + 10}\r\n              y={blockCell.y() + BlockCell.FONT_SIZE + 10}\r\n              fontSize={BlockCell.FONT_SIZE}\r\n              fill={blockStack.getColor()}\r\n            >\r\n              {blockCell.getValue()}\r\n            </text>\r\n          </g>\r\n        );\r\n      }\r\n    });\r\n    return list;\r\n  }\r\n\r\n  render() {\r\n    const backgroud = this.renderBlockBackground();\r\n    const content = this.renderBlockContent();\r\n    return (\r\n      <g\r\n        className=\"block\"\r\n        transform=\"matrix(1,0,0,1,0,0)\"\r\n        id={`block_${this.props.blockStack.getName()}`}\r\n      >\r\n        {backgroud}\r\n        {content}\r\n      </g>\r\n    );\r\n  }\r\n}\r\n","import * as React from 'react';\r\nimport { BlockDrawer, BlockStack } from './/blockDrawer/BlockDrawer';\r\nimport Block from './block/Block';\r\nimport * as d3 from 'd3';\r\nimport { inArray } from 'jquery';\r\nimport { select, Selection } from 'd3-selection';\r\nimport 'd3-clone';\r\n\r\ninterface Props {\r\n  blockDrawer: BlockDrawer;\r\n}\r\n\r\ninterface State {\r\n  blockStacks: BlockStack[];\r\n}\r\n\r\n// function dragged(d: any) {\r\n//   const temp = d3.select(this).attr('id').split('_');\r\n//   temp.shift();\r\n//   const stackName = temp.join('_');\r\n//   d3.select(this).attr('transform', function () {\r\n//     let source = this.attributes.transform.value.replace(')', '');\r\n//     source = source.split(',');\r\n//     const tx = d.dx + Number(source[4]);\r\n//     const ty = d.dy + Number(source[5]);\r\n//     return 'matrix(1,0,0,1,' + tx + ',' + ty + ')';\r\n//   });\r\n//   d3.select('#svg').select(`#arrow_${stackName}`).remove();\r\n//   renderArrow(stackName, stackName);\r\n// }\r\n\r\nexport function renderArrow(sourceStackName: string, targetStackName: string) {\r\n  d3.select('#svg').select(`#arrow_${sourceStackName}`).remove();\r\n  const source = d3\r\n    .select('#svg')\r\n    .select(`#stack_${sourceStackName}`)\r\n    .select('rect');\r\n  let target = d3.select('#svg').select(`#block_${targetStackName}`);\r\n  if (target.empty()) {\r\n    return;\r\n  }\r\n  const sourceX =\r\n    Number(source.attr('x')) +\r\n    Number(source.attr('width')) -\r\n    0.36 * 0.2 * Number(source.attr('height'));\r\n  const sourceY =\r\n    Number(source.attr('y')) + 0.2 * Number(source.attr('height'));\r\n  const transform = target.attr('transform').replace(')', '').split(',');\r\n  target = target.select('rect');\r\n  const targetX = Number(target.attr('x')) + Number(transform[4]);\r\n  const height = d3\r\n    .select(target as any)\r\n    .node()\r\n    .node()\r\n    .getBBox().height;\r\n  const targetY = Number(target.attr('y')) + Number(transform[5]) + height / 2;\r\n  let temp = sourceX - targetX;\r\n  temp = Math.max(temp, -temp);\r\n  d3.select('#svg')\r\n    .select('#path')\r\n    .append('path')\r\n    .attr('style', 'stroke:#858585; fill:none; stroke-width:2;')\r\n    .attr('id', `arrow_${sourceStackName}`)\r\n    .attr(\r\n      'd',\r\n      'M' +\r\n        sourceX +\r\n        ',' +\r\n        sourceY +\r\n        ' C' +\r\n        (targetX - temp / 3) +\r\n        ',' +\r\n        sourceY +\r\n        ' ' +\r\n        (sourceX + temp / 3) +\r\n        ',' +\r\n        targetY +\r\n        ' ' +\r\n        targetX +\r\n        ',' +\r\n        targetY\r\n    )\r\n    .attr('marker-end', 'url(#end)')\r\n    .attr('marker-start', 'url(#start)');\r\n}\r\n\r\nexport default class CallStack extends React.Component<Props, State> {\r\n  constructor(props: Props) {\r\n    super(props);\r\n    this.state = {\r\n      blockStacks: props.blockDrawer.getBlockStacks(),\r\n    };\r\n    const arrowListJson = sessionStorage.getItem('arrowList');\r\n    let arrowList = JSON.parse(arrowListJson!);\r\n    props.blockDrawer.getBlockArrows().forEach((name: string | number) => {\r\n      if (!arrowList) {\r\n        arrowList = {};\r\n      }\r\n      if (name) {\r\n        arrowList[name] = '';\r\n      }\r\n    });\r\n    sessionStorage.setItem('arrowList', JSON.stringify(arrowList));\r\n  }\r\n\r\n  componentWillUpdate(nextProps: {\r\n    blockDrawer: { getBlockStacks: () => any; getBlockArrows: () => any[] };\r\n  }) {\r\n    d3.select('#stack__cloned').remove();\r\n    d3.select('#block__cloned').remove();\r\n    d3.select('#arrow__cloned').remove();\r\n    const blockStacks = this.props.blockDrawer.getBlockStacks();\r\n    const nextBlockStacks = nextProps.blockDrawer.getBlockStacks();\r\n\r\n    if (sessionStorage.getItem('exec') !== 'step') {\r\n      const blockStacksLen = blockStacks.length;\r\n      const nextBlockStacksLen = nextBlockStacks.length;\r\n      if (blockStacksLen > nextBlockStacksLen) {\r\n        for (let i = nextBlockStacksLen; i < blockStacksLen; i++) {\r\n          const clonedStack = (\r\n            d3.select('#svg').select('#clone') as any\r\n          ).appendClone(\r\n            d3.select('#stack_' + blockStacks[i].key.replace('.', '_'))\r\n          );\r\n          clonedStack.attr('id', 'stack__cloned');\r\n          const clonedBlock = (\r\n            d3.select('#svg').select('#clone') as any\r\n          ).appendClone(\r\n            d3.select('#block_' + blockStacks[i].key.replace('.', '_'))\r\n          );\r\n          clonedBlock.select('rect').style('stroke', '#979797');\r\n          clonedBlock.select('text').style('fill', '#979797');\r\n          let offsetY = 0;\r\n          if (i > 1) {\r\n            offsetY = blockStacks[i].getHeight() + 40;\r\n          }\r\n          clonedBlock.selectAll('rect').attr('y', function (this: any) {\r\n            return Number(d3.select(this).attr('y')) + offsetY;\r\n          });\r\n          clonedBlock.selectAll('text').attr('y', function (this: any) {\r\n            return Number(d3.select(this).attr('y')) + offsetY;\r\n          });\r\n          clonedBlock.selectAll('tspan').attr('y', function (this: any) {\r\n            return Number(d3.select(this).attr('y')) + offsetY;\r\n          });\r\n          const block = d3.select(\r\n            '#block_' + blockStacks[i].key.replace('.', '_')\r\n          );\r\n          clonedBlock.attr('id', 'block__cloned');\r\n          const list: string[] = [];\r\n          block.selectAll('g').attr('copy', function () {\r\n            return list.push(d3.select(this).attr('id'));\r\n          });\r\n          clonedBlock.selectAll('g').attr('id', function (d: any, i: number) {\r\n            return 'cloned-' + list[i];\r\n          });\r\n        }\r\n      } else if (nextBlockStacksLen > blockStacksLen && blockStacksLen >= 2) {\r\n        const clonedBlock = (\r\n          d3.select('#svg').select('#clone') as any\r\n        ).appendClone(\r\n          d3.select(\r\n            '#block_' + blockStacks[blockStacksLen - 2].key.replace('.', '_')\r\n          )\r\n        );\r\n        clonedBlock.attr('id', 'block__cloned');\r\n      }\r\n    }\r\n    const arrowListJson = sessionStorage.getItem('arrowList');\r\n    let arrowList = JSON.parse(arrowListJson!);\r\n    if (!arrowList) {\r\n      arrowList = {};\r\n    }\r\n    nextProps.blockDrawer.getBlockArrows().forEach((name) => {\r\n      if (inArray(name, Object.keys(arrowList)) >= 0) {\r\n        delete arrowList[name];\r\n        d3.select('#svg')\r\n          .select(`#block_${name}`)\r\n          .attr('transform', 'matrix(1,0,0,1,0,0)');\r\n      }\r\n    });\r\n    sessionStorage.setItem('arrowList', JSON.stringify(arrowList));\r\n  }\r\n\r\n  componentDidUpdate() {\r\n    d3.select('#svg').selectAll('.block-left').selectAll('path').remove();\r\n    d3.select('#svg')\r\n      .selectAll('.block-left')\r\n      .append('path')\r\n      .attr('d', function (this: any) {\r\n        const block_node = d3\r\n          .select(this.parentNode.parentNode)\r\n          .node()\r\n          .getBBox();\r\n        const x = block_node.x;\r\n        const y = block_node.y;\r\n        const height = block_node.height;\r\n        return (\r\n          'M ' +\r\n          x +\r\n          ' ' +\r\n          (y + 10) +\r\n          ' L ' +\r\n          x +\r\n          ' ' +\r\n          (y + height - 10) +\r\n          ' A 10 10 0 0 0 ' +\r\n          (x + 10) +\r\n          ' ' +\r\n          (y + height) +\r\n          ' L ' +\r\n          (x + 10) +\r\n          ' ' +\r\n          y +\r\n          ' A 10 10 0 0 0 ' +\r\n          x +\r\n          ' ' +\r\n          (y + 10)\r\n        );\r\n      });\r\n    // d3.select('#svg').selectAll('.block').call(d3.drag().on('drag', dragged));\r\n    d3.select('#svg').select('#path').selectAll('path').remove();\r\n\r\n    const { blockDrawer } = this.props;\r\n    const blockArrows = blockDrawer.getBlockArrows();\r\n    blockArrows.forEach((stackName: string) => {\r\n      if (!d3.select('#svg').select(`#block_${stackName}`).empty()) {\r\n        renderArrow(stackName, stackName);\r\n      }\r\n    });\r\n    const arrowListJson = sessionStorage.getItem('arrowList');\r\n    let arrowList = JSON.parse(arrowListJson!);\r\n    if (!arrowList) {\r\n      arrowList = {};\r\n    }\r\n    Object.keys(arrowList).forEach((stackName) => {\r\n      if (!d3.select('#svg').select(`#block_${stackName}`).empty()) {\r\n        renderArrow(stackName, stackName);\r\n      }\r\n    });\r\n    // const variablesMapJson = sessionStorage.getItem('variablesMap');\r\n    // let variablesMap = JSON.parse(variablesMapJson!);\r\n    // if (!variablesMap) {\r\n    //   variablesMap = {};\r\n    // }\r\n    // Object.keys(variablesMap).forEach((key) => {\r\n    //   if (variablesMap[key]['visible']) {\r\n    //     const stackName = key.split('_')[0];\r\n    //     const name = key.split('_')[1];\r\n    //     const cells = d3\r\n    //       .select('#svg')\r\n    //       .selectAll(`.block-${stackName}-${name}`);\r\n    //     cells.select('rect').style('stroke', variablesMap[key]['color']);\r\n    //     cells.selectAll('text').attr('fill', variablesMap[key]['color']);\r\n    //   }\r\n    // });\r\n    const activeStack = sessionStorage.getItem('activeStack');\r\n    const blocks = d3.select('#svg').selectAll('.block');\r\n    blocks.select('rect').style('stroke', '#979797');\r\n    blocks.select('text').style('fill', '#979797');\r\n    // const block = d3.select('#svg').select('#block_' + activeStack);\r\n    // block.select('rect').style('stroke', '#0074D9');\r\n    // block.select('text').style('fill', '#0074D9');\r\n  }\r\n\r\n  renderBlocks() {\r\n    const { blockDrawer } = this.props;\r\n    const blockStacks = blockDrawer.getBlockStacks();\r\n    const blockArrows = blockDrawer.getBlockArrows();\r\n    const arrowListJson = sessionStorage.getItem('arrowList');\r\n    let arrowList = JSON.parse(arrowListJson!);\r\n    if (!arrowList) {\r\n      arrowList = {};\r\n    }\r\n    const list: JSX.Element[] = [];\r\n    blockStacks.forEach((blockStack) => {\r\n      if (\r\n        inArray(blockStack.getName(), blockArrows) >= 0 ||\r\n        inArray(blockStack.getName(), Object.keys(arrowList)) >= 0\r\n      ) {\r\n        list.push(\r\n          <g key={blockStack.key}>\r\n            <Block blockStack={blockStack} />\r\n          </g>\r\n        );\r\n      }\r\n    });\r\n    // list 顺序 main 为什么在第一个\r\n    return list;\r\n  }\r\n\r\n  drawOrRemoveBlock(name: string) {\r\n    const arrowListJson = sessionStorage.getItem('arrowList');\r\n    let arrowList = JSON.parse(arrowListJson!);\r\n    if (!arrowList) {\r\n      arrowList = {};\r\n    }\r\n    if (inArray(name, Object.keys(arrowList)) < 0) {\r\n      arrowList[name] = '';\r\n    } else {\r\n      delete arrowList[name];\r\n    }\r\n    sessionStorage.setItem('arrowList', JSON.stringify(arrowList));\r\n    this.setState({});\r\n  }\r\n\r\n  renderStackView() {\r\n    const arrowListJson = sessionStorage.getItem('arrowList');\r\n    let arrowList = JSON.parse(arrowListJson!);\r\n    if (!arrowList) {\r\n      arrowList = {};\r\n    }\r\n    const { blockDrawer } = this.props;\r\n    const blockStacks = blockDrawer.getBlockStacks();\r\n    const blockArrows = blockDrawer.getBlockArrows();\r\n    const list: JSX.Element[] = [];\r\n    const x = 60;\r\n    let y = 50;\r\n    const offsetY = 60;\r\n    const width = 192;\r\n    const height = 108;\r\n    blockStacks.forEach((blockStack, i) => {\r\n      const transform = `matrix(1,0,-0.36,1,0,0)`;\r\n      list.push(\r\n        <g\r\n          key={`stack_${blockStack.getName()}`}\r\n          id={`stack_${blockStack.getName()}`}\r\n          onClick={() => {\r\n            const res = inArray(blockStack.getName(), blockArrows);\r\n            if (res < 0) {\r\n              this.drawOrRemoveBlock(blockStack.getName());\r\n            }\r\n          }}\r\n        >\r\n          <rect\r\n            x={x}\r\n            y={y}\r\n            width={width}\r\n            height={height}\r\n            transform={transform}\r\n            fill=\"white\"\r\n            stroke=\"#979797\"\r\n            strokeWidth={2}\r\n            transform-origin={x + ' ' + y}\r\n          ></rect>\r\n          <text\r\n            x={x + 10}\r\n            y={y + 20}\r\n            fontSize=\"15\"\r\n            className=\"function-name\"\r\n            fill={'rgb(139, 139, 139)' }\r\n          >\r\n            {blockStack.getName().split('_')[0]}\r\n          </text>\r\n        </g>\r\n      );\r\n      y = y + offsetY;\r\n    });\r\n    return list;\r\n  }\r\n\r\n  render() {\r\n    const stacks = this.renderStackView();\r\n    const blocks = this.renderBlocks();\r\n    const { blockDrawer } = this.props;\r\n    const blockArrows = blockDrawer.getBlockArrows();\r\n    blockArrows.forEach((stackName: string) => {\r\n      if (stackName) {\r\n        sessionStorage.setItem('activeStack', stackName);\r\n      }\r\n    });\r\n    return (\r\n      <React.Fragment>\r\n        {stacks}\r\n        {blocks}\r\n      </React.Fragment>\r\n    );\r\n  }\r\n}\r\n","import { ExecState } from 'unicoen.ts/dist/interpreter/Engine/ExecState';\r\nimport { Stack } from 'unicoen.ts/dist/interpreter/Engine/Stack';\r\nimport { UniVariableDef } from 'unicoen.ts/dist/node/UniVariableDef';\r\nimport { arrayToString } from '../blockDrawer/BlockDrawer';\r\nimport { inArray } from 'jquery';\r\n\r\nexport class AnimationDrawer {\r\n  private execState: ExecState | undefined = undefined;\r\n  private lastState: ExecState | undefined = undefined;\r\n  private state!: string;\r\n  private variableKeys!: string[];\r\n  private variableTypes!: string[];\r\n  private variableValues!: any[];\r\n  private postArgs!: any[];\r\n  private stack: Stack | undefined = undefined;\r\n  constructor(execState?: ExecState, lastState?: ExecState) {\r\n    if (typeof execState === 'undefined') return;\r\n    this.execState = execState;\r\n    if (typeof lastState === 'undefined') return;\r\n    this.lastState = lastState;\r\n    this.reset();\r\n    this.getCurrentStack();\r\n    this.parseExe();\r\n  }\r\n\r\n  public reset() {\r\n    this.state = '';\r\n    this.stack = undefined;\r\n    this.postArgs = [];\r\n    this.variableKeys = [];\r\n    this.variableTypes = [];\r\n    this.variableValues = [];\r\n  }\r\n\r\n  private parseExe() {\r\n    const currentExpr = this.execState!.getCurrentExpr();\r\n    const currentClassName = currentExpr.constructor.name;\r\n    let lastClassName = '';\r\n    let lastExpr = undefined;\r\n    let flag = true;\r\n    if (this.lastState) {\r\n      if (\r\n        this.execState!.getStacks().length < this.lastState.getStacks().length\r\n      ) {\r\n        // flag = false;\r\n      }\r\n      lastExpr = this.lastState.getNextExpr();\r\n      lastClassName = lastExpr.constructor.name;\r\n    }\r\n    if (flag) {\r\n      switch (currentClassName) {\r\n        case 'UniProgram':\r\n          this.state = 'programInit';\r\n          break;\r\n        case 'UniVariableDec':\r\n          this.state = 'variablesInit';\r\n          this.variableDec(currentExpr);\r\n          break;\r\n        case 'UniMethodCall':\r\n          this.methodCall(currentExpr);\r\n          break;\r\n        case 'UniBinOp':\r\n          this.binOp(currentExpr);\r\n          break;\r\n      }\r\n      switch (lastClassName) {\r\n        case 'UniBinOp':\r\n          this.binOp(lastExpr);\r\n          break;\r\n        case 'UniReturn':\r\n          this.state = 'uniReturn';\r\n          this.uniReturn(lastExpr);\r\n          break;\r\n        case 'UniVariableDec':\r\n          this.variableKeys = [];\r\n          this.variableTypes = [];\r\n          this.variableValues = [];\r\n          this.state = 'variablesInit';\r\n          this.variableDec(lastExpr);\r\n          break;\r\n      }\r\n    }\r\n    console.log(this);\r\n  }\r\n\r\n  public binOp(uniBinOp: any) {\r\n    const operator = uniBinOp.operator;\r\n    const right = uniBinOp.right;\r\n    const rightClassName = right.constructor.name;\r\n    switch (rightClassName) {\r\n      case 'UniMethodCall':\r\n        this.methodCall(right);\r\n        break;\r\n      case 'UniBinOp':\r\n        this.binOp(right);\r\n        break;\r\n    }\r\n    if (operator !== '=') {\r\n      const left = uniBinOp.left;\r\n      const leftClassName = left.constructor.name;\r\n      switch (leftClassName) {\r\n        case 'UniMethodCall':\r\n          this.methodCall(left);\r\n          break;\r\n        case 'UniBinOp':\r\n          this.binOp(left);\r\n          break;\r\n      }\r\n    }\r\n  }\r\n\r\n  public methodCall(uniMethodCall: any) {\r\n    const methodName = uniMethodCall.methodName.name;\r\n    this.execState!.getStacks().forEach((stack) => {\r\n      if (methodName === stack.name) {\r\n        this.state = 'methodCall';\r\n        this.postArgs = [];\r\n        this.getMethodArgs(uniMethodCall);\r\n        return;\r\n      }\r\n    });\r\n    this.lastState!.getStacks().forEach((stack) => {\r\n      if (methodName === stack.name) {\r\n        this.state = 'methodCall';\r\n        this.postArgs = [];\r\n        this.getMethodArgs(uniMethodCall);\r\n        return;\r\n      }\r\n    });\r\n  }\r\n\r\n  public variableDec(uniVariableDec: any) {\r\n    const variables = uniVariableDec.variables;\r\n    if (variables) {\r\n      variables.forEach((variable: UniVariableDef) => {\r\n        this.variableDef(variable);\r\n      });\r\n    }\r\n  }\r\n\r\n  public variableDef(uniVariableDef: UniVariableDef) {\r\n    let key = this.stack!.name + '-' + uniVariableDef.name;\r\n    key = key.replace(/[&\\|\\\\\\*:^%$@()\\[\\].]/g, '_');\r\n    const variableValue = uniVariableDef.value;\r\n    if (!variableValue) return;\r\n    const valueClass = variableValue.constructor.name;\r\n    switch (valueClass) {\r\n      case 'UniMethodCall':\r\n        this.methodCall(variableValue);\r\n        break;\r\n      case 'UniBinOp':\r\n        this.binOp(variableValue);\r\n        break;\r\n    }\r\n    const variables = this.stack!.getVariables();\r\n    for (let i = 0; i < variables.length; i++) {\r\n      if (variables[i].getName() === uniVariableDef.name) {\r\n        const type = variables[i].type;\r\n        const value = variables[i].getValue();\r\n        this.variableKeys.push(key);\r\n        this.variableTypes.push(type);\r\n        if (type.split('[').length > 1) {\r\n          this.variableValues.push(arrayToString(value, type.split('[')[0]));\r\n        } else {\r\n          if (inArray(type.split('[')[0], ['char', 'unsignedchar']) < 0) {\r\n            this.variableValues.push(value);\r\n          } else {\r\n            this.variableValues.push(String.fromCharCode(value));\r\n          }\r\n        }\r\n        break;\r\n      }\r\n    }\r\n  }\r\n\r\n  public uniReturn(uniReturn: any) {\r\n    const currentExpr = this.execState!.getCurrentExpr();\r\n    const currentClassName = currentExpr.constructor.name;\r\n    // if (currentClassName !== 'UniVariableDec') {\r\n    //   return;\r\n    // }\r\n    const returnValue = uniReturn.value;\r\n    if (!returnValue) {\r\n      return;\r\n    }\r\n    this.postArgs = [];\r\n    this.travelValue(returnValue);\r\n    // this.variableDec(currentExpr);\r\n  }\r\n\r\n  private travelValue(returnValue: any) {\r\n    let returnValueClass = returnValue.constructor.name;\r\n    if (returnValueClass === 'UniIdent') {\r\n      this.postArgs.push(\r\n        (\r\n          this.lastState!.getStacks()[this.lastState!.getStacks().length - 1]\r\n            .name +\r\n          '-' +\r\n          returnValue.name\r\n        ).replace(/[&\\|\\\\\\*:^%$@()\\[\\].]/g, '_')\r\n      );\r\n      return;\r\n    } else if (returnValueClass === 'UniBinOp') {\r\n      this.travelValue(returnValue.left);\r\n      this.travelValue(returnValue.right);\r\n    }\r\n  }\r\n\r\n  private travelArg(arg: any, idx: number) {\r\n    let returnValueClass = arg.constructor.name;\r\n    if (this.postArgs.length === idx) {\r\n      this.postArgs.push(undefined);\r\n    }\r\n    if (returnValueClass === 'UniIdent') {\r\n      if (this.postArgs[idx] === undefined) {\r\n        this.postArgs[idx] = (\r\n          this.lastState!.getStacks()[this.lastState!.getStacks().length - 1]\r\n            .name +\r\n          '-' +\r\n          arg.name\r\n        ).replace(/[&\\|\\\\\\*:^%$@()\\[\\].]/g, '_');\r\n      }\r\n      return;\r\n    } else if (returnValueClass === 'UniBinOp') {\r\n      this.travelArg(arg.left, idx);\r\n      this.travelArg(arg.right, idx);\r\n    }\r\n  }\r\n\r\n  public getMethodArgs(uniMethodCall: any) {\r\n    const args = uniMethodCall.args;\r\n    const variables = this.stack!.getVariables();\r\n    args.forEach((arg: any, idx: number) => {\r\n      this.travelArg(arg, idx);\r\n      const type = variables[idx].type;\r\n      const value = variables[idx].getValue();\r\n      this.variableKeys.push(\r\n        (this.stack!.name + '-' + variables[idx].name).replace(\r\n          /[&\\|\\\\\\*:^%$@()\\[\\].]/g,\r\n          '_'\r\n        )\r\n      );\r\n      this.variableTypes.push(type);\r\n      if (type.split('[').length > 1) {\r\n        this.variableValues.push(arrayToString(value, type.split('[')[0]));\r\n      } else {\r\n        if (inArray(type.split('[')[0], ['char', 'unsignedchar']) < 0) {\r\n          this.variableValues.push(value);\r\n        } else {\r\n          this.variableValues.push(String.fromCharCode(value));\r\n        }\r\n      }\r\n    });\r\n  }\r\n\r\n  public getCurrentStack() {\r\n    const stacks = this.execState!.getStacks();\r\n    const stack = stacks[stacks.length - 1];\r\n    this.stack = stack;\r\n    return stack;\r\n  }\r\n\r\n  public getState() {\r\n    return this.state;\r\n  }\r\n\r\n  public getVariableKeys() {\r\n    return this.variableKeys;\r\n  }\r\n\r\n  public getVariableTypes() {\r\n    return this.variableTypes;\r\n  }\r\n\r\n  public getVariableValues() {\r\n    return this.variableValues;\r\n  }\r\n\r\n  public getStackName() {\r\n    if (this.stack) {\r\n      let res = this.stack.name.replace(/[&\\|\\\\\\*:^%$@()\\[\\].]/g, '_');\r\n      return res;\r\n    }\r\n    return '';\r\n  }\r\n\r\n  public getStacks() {\r\n    if (this.execState) {\r\n      return this.execState.getStacks();\r\n    }\r\n    return [];\r\n  }\r\n\r\n  public getPostArgs() {\r\n    return this.postArgs;\r\n  }\r\n}\r\n","import React from 'react';\r\nimport PanelHeader from '../../components/panelHeader/PanelHeader';\r\nimport CallStack from '../../components/callStack/CallStack';\r\nimport Animation from '../../components/callStack/animation/Animation';\r\nimport { AnimationDrawer } from '../../components/callStack/animation/AnimationDrawer';\r\nimport { slot, remove } from '../../components/emitter';\r\nimport { ExecState } from 'unicoen.ts/dist/interpreter/Engine/ExecState';\r\nimport { BlockDrawer } from '../../components/callStack/blockDrawer/BlockDrawer';\r\n\r\nimport './style.scss';\r\nimport { VariableWithSteps } from '../timelinePanel/TimelinePanel';\r\nimport { Variable } from 'unicoen.ts/dist/interpreter/Engine/Variable';\r\nimport * as d3 from 'd3';\r\n\r\ninterface Props {\r\n  height: number;\r\n  width: number;\r\n  execState?: ExecState;\r\n  lastState?: ExecState;\r\n  variableShowUps: VariableWithSteps[] | undefined;\r\n}\r\ninterface State {}\r\n\r\nclass CallStackPanel extends React.Component<Props, State> {\r\n  componentDidUpdate() {\r\n    const variableShowUps = this.props.variableShowUps;\r\n    const execState = this.props.execState;\r\n    const lastState = this.props.lastState;\r\n    if (lastState && execState && variableShowUps) {\r\n      variableShowUps.forEach((variableWithSteps) => {\r\n        if (variableWithSteps.name.indexOf(':') > 0) return;\r\n        if (variableChanged(variableWithSteps, lastState, execState)) {\r\n          // console.log(\r\n          //   'CHANGE|' +\r\n          //     variableWithSteps.funcName +\r\n          //     ': ' +\r\n          //     variableWithSteps.name\r\n          // );\r\n          highlightChangedVariable(\r\n            variableWithSteps.funcName,\r\n            variableWithSteps.name\r\n          );\r\n        } else {\r\n          resetVariableColor(\r\n            variableWithSteps.funcName,\r\n            variableWithSteps.name\r\n          );\r\n        }\r\n      });\r\n    }\r\n  }\r\n\r\n  render() {\r\n    // console.log('render1');\r\n    const blockDrawer = new BlockDrawer(this.props.execState);\r\n    const animationDrawer = new AnimationDrawer(\r\n      this.props.execState,\r\n      this.props.lastState\r\n    );\r\n    // console.log('render2');\r\n    return (\r\n      <div id=\"CallStackPanel\" className=\"panel\">\r\n        <PanelHeader title=\"Call Stack\" />\r\n        <div className=\"callStack-area\">\r\n          {/* {console.log('DEBUG|'+this.props.execState)} */}\r\n          <svg\r\n            id=\"svg\"\r\n            width={this.props.width - 20}\r\n            height={this.props.height * 0.75 - 28 - 39.2}\r\n          >\r\n            <marker\r\n              id=\"end\"\r\n              viewBox=\"-10 -10 20 20\"\r\n              refX=\"0\"\r\n              refY=\"0\"\r\n              markerWidth=\"8\"\r\n              markerHeight=\"8\"\r\n              orient=\"auto\"\r\n            >\r\n              <circle\r\n                cx={0}\r\n                cy={0}\r\n                style={{ stroke: '#483647', strokeWidth: 2, fill: 'white' }}\r\n                r={8}\r\n              ></circle>\r\n            </marker>\r\n            <marker\r\n              id=\"start\"\r\n              viewBox=\"-10 -10 20 20\"\r\n              refX=\"0\"\r\n              refY=\"0\"\r\n              markerWidth=\"8\"\r\n              markerHeight=\"8\"\r\n              orient=\"auto\"\r\n            >\r\n              <circle\r\n                cx={0}\r\n                cy={0}\r\n                style={{ stroke: '#979797', strokeWidth: 2, fill: 'white' }}\r\n                r={8}\r\n              ></circle>\r\n            </marker>\r\n            <CallStack blockDrawer={blockDrawer}></CallStack>\r\n            <g id=\"clone\"></g>\r\n            <g id=\"path\"></g>\r\n          </svg>\r\n          {/* <Animation\r\n            animationDrawer={\r\n              new AnimationDrawer(this.props.execState, this.props.lastState)\r\n            }\r\n          ></Animation> */}\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default CallStackPanel;\r\n\r\nconst variableChanged = (\r\n  variableWithSteps: VariableWithSteps,\r\n  lastState: ExecState,\r\n  execState: ExecState\r\n) => {\r\n  const stackName = variableWithSteps.funcName;\r\n  const variable = variableWithSteps.variable;\r\n  const lastStacks = lastState.getStacks();\r\n  const execStacks = execState.getStacks();\r\n  let lastValue: any = undefined;\r\n  let curValue: any = undefined;\r\n  lastStacks.forEach((stack) => {\r\n    if (stackName !== stack.name) return;\r\n    // console.log('FIND');\r\n    // console.log(variable);\r\n    // console.log(stack.getVariables());\r\n    lastValue = getValueFromStack(variable, stack.getVariables());\r\n    // console.log('GOT');\r\n    // console.log(lastValue);\r\n    if (lastValue !== undefined) return;\r\n  });\r\n  execStacks.forEach((stack) => {\r\n    if (stackName !== stack.name) return;\r\n    curValue = getValueFromStack(variable, stack.getVariables());\r\n    if (curValue !== undefined) return;\r\n  });\r\n  // console.log('last| ' + lastStacks);\r\n  // console.log('exec| ' + execStacks);\r\n  // console.log(\r\n  //   'VC| find ' +\r\n  //     stackName +\r\n  //     ' | ' +\r\n  //     variableWithSteps.name +\r\n  //     ' last: ' +\r\n  //     lastValue +\r\n  //     ' cur: ' +\r\n  //     curValue\r\n  // );\r\n  // console.log(lastValue, curValue);\r\n  // console.log(\r\n  //   lastValue !== undefined,\r\n  //   curValue !== undefined,\r\n  //   lastValue === curValue,\r\n  //   lastValue !== curValue,\r\n  // );\r\n  return (\r\n    lastValue !== undefined &&\r\n    curValue !== undefined &&\r\n    lastValue.toString() !== curValue.toString()\r\n  );\r\n};\r\n\r\nconst getValueFromStack = (targetVariable: Variable, variables: Variable[]) => {\r\n  let ret = undefined;\r\n  variables.forEach((variable) => {\r\n    const value = variable.getValue();\r\n    if (value instanceof Array) {\r\n      const v = getValueFromStack(targetVariable, value);\r\n      if (v !== undefined) {\r\n        return v;\r\n      }\r\n    } else {\r\n      // console.log('CMP');\r\n      // console.log(targetVariable.address);\r\n      // console.log(variable.address);\r\n      if (targetVariable.address === variable.address) {\r\n        ret = value;\r\n        return;\r\n      }\r\n    }\r\n  });\r\n  return ret;\r\n};\r\n\r\nconst highlightChangedVariable = (funcName: string, varName: string) => {\r\n  const blockElement = d3.select('#block-' + funcName + '-' + varName);\r\n  const highlightColor = 'rgb(74, 140, 227)';\r\n\r\n  blockElement.select('.variable-name').attr('fill', highlightColor);\r\n  blockElement.select('.variable-value').attr('fill', highlightColor);\r\n  blockElement.select('rect').attr('style', 'stroke: ' + highlightColor);\r\n};\r\n\r\nconst resetVariableColor = (funcName: string, varName: string) => {\r\n  const defaultColor = 'rgb(139, 139, 139)';\r\n  const blockElement = d3.select('#block-' + funcName + '-' + varName);\r\n\r\n  blockElement.select('.variable-name').attr('fill', defaultColor);\r\n  blockElement.select('.variable-value').attr('fill', defaultColor);\r\n  blockElement.select('rect').attr('style', 'stroke: ' + defaultColor);\r\n};\r\n","import classNames from 'classnames';\r\nimport React from 'react';\r\nimport { Variable } from 'unicoen.ts/dist/interpreter/Engine/Variable';\r\nimport './style.scss';\r\n\r\nexport interface MemoryCellProps {\r\n  variable: Variable;\r\n  selectedVar: Variable | undefined;\r\n  handleClick: (variable: Variable) => void;\r\n}\r\n\r\nfunction MemoryCell({ variable, selectedVar, handleClick }: MemoryCellProps) {\r\n  const varName = variable.name;\r\n  const dataType = variable.type;\r\n  const address = variable.address;\r\n\r\n  const getValue = () => {\r\n    const value = variable.getValue();\r\n    if (dataType === 'char') {\r\n      return \"'\" + String.fromCharCode(value) + \"'\";\r\n    }\r\n    if (value instanceof Array) {\r\n      const fv = firstVarInArr(value);\r\n      return '0x' + fv.address.toString(16);\r\n    }\r\n    return value.toString();\r\n  };\r\n\r\n  return dataType[-1] !== ']' ? (\r\n    <div\r\n      className={classNames('memory-cell', {\r\n        active: selectedVar?.address === address,\r\n        'in-heap': varName === '',\r\n      })}\r\n      onClick={() => {\r\n        handleClick(variable);\r\n      }}\r\n    >\r\n      <div className=\"col-name variable-name\">{varName}</div>\r\n      <div className=\"col-value\">\r\n        <div className=\"col-1\">{dataType}</div>\r\n        <div className=\"col-2\">{getValue()}</div>\r\n      </div>\r\n    </div>\r\n  ) : (\r\n    <div></div>\r\n  );\r\n}\r\n\r\nexport default MemoryCell;\r\n\r\nfunction firstVarInArr(arr: Array<Variable>) {\r\n  while (arr[0].getValue() instanceof Array) {\r\n    arr = arr[0].getValue();\r\n  }\r\n  return arr[0];\r\n}\r\n","import React from 'react';\r\nimport { Variable } from 'unicoen.ts/dist/interpreter/Engine/Variable';\r\nimport MemoryCell from './MemoryCell';\r\nimport './style.scss';\r\n\r\ninterface MemoryBlockProps {\r\n  funcName: string;\r\n  variables: Variable[];\r\n  selectedVar: Variable | undefined;\r\n  handleClick: (variable: Variable) => void;\r\n  // memoryCells: {varName: string; dataType: string; value: string}[];\r\n}\r\n\r\nfunction MemoryBlock({\r\n  funcName,\r\n  variables,\r\n  selectedVar,\r\n  handleClick,\r\n}: MemoryBlockProps) {\r\n  return (\r\n    <div className=\"memory-block\">\r\n      <div className=\"highlight-bar\"></div>\r\n      <div className=\"main-content\">\r\n        <div className=\"function-name\">{funcName}</div>\r\n        <div className=\"cells\">\r\n          {variables.map((variable) => {\r\n            const value = variable.getValue();\r\n\r\n            return value instanceof Array ? (\r\n              <MemoryCell\r\n                key={variable.name}\r\n                variable={Object.assign(variable, { parentName: funcName })}\r\n                selectedVar={selectedVar}\r\n                handleClick={handleClick}\r\n              />\r\n            ) : (\r\n              <MemoryCell\r\n                key={variable.name}\r\n                variable={Object.assign(variable, { parentName: funcName })}\r\n                selectedVar={selectedVar}\r\n                handleClick={handleClick}\r\n              />\r\n            );\r\n          })}\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default MemoryBlock;\r\n","import { type } from 'os';\r\nimport React, { useEffect, useState } from 'react';\r\nimport { ExecState } from 'unicoen.ts/dist/interpreter/Engine/ExecState';\r\nimport { Stack } from 'unicoen.ts/dist/interpreter/Engine/Stack';\r\nimport { Variable } from 'unicoen.ts/dist/interpreter/Engine/Variable';\r\nimport MemoryBlock from './memoryBlock/MemoryBlock';\r\nimport MemoryCell, { MemoryCellProps } from './memoryBlock/MemoryCell';\r\n\r\nimport './style.scss';\r\n\r\ninterface LogicalViewProps {\r\n  execState: ExecState | undefined;\r\n  selectedVar: Variable | undefined;\r\n  handleClick: (variable: Variable) => void;\r\n}\r\n\r\nconst example_var0 = new Variable('int', '', -1, 10008, 2);\r\nconst example_var1 = new Variable('int', '', 2100000000, 10000, 2);\r\nconst example_var2 = new Variable('int', 'a', -2, 10004, 2);\r\nconst example_var3 = new Variable('int', 'b', 10, 10006, 2);\r\nconst example_var4 = new Variable('char', 'c', 'c', 10010, 2);\r\n\r\nfunction LogicalView({\r\n  execState,\r\n  selectedVar,\r\n  handleClick,\r\n}: LogicalViewProps) {\r\n  const [allStacks, setAllStacks] = useState<Stack[]>([]);\r\n  const [heap, setHeap] = useState<Variable[]>([]);\r\n  const [global, setGlobal] = useState<Variable[]>([]);\r\n\r\n  useEffect(() => {\r\n    if (execState !== undefined) {\r\n      const stacks = execState.getStacks();\r\n      const curStacks: Stack[] = [];\r\n      const curHeap: Variable[] = [];\r\n      const curGlobal: Variable[] = [];\r\n\r\n      // console.log('DEBUG| Stacks: ' + stacks);\r\n\r\n      stacks.forEach((stack) => {\r\n        if (stack.name !== 'GLOBAL') {\r\n          curStacks.push(stack);\r\n        } else {\r\n          const variables = stack.getVariables();\r\n          variables.forEach((variable) => {\r\n            if (variable.address >= 50000) {\r\n              curGlobal.push(variable);\r\n            } else if (variable.address >= 20000) {\r\n              curHeap.push(variable);\r\n            }\r\n          });\r\n        }\r\n      });\r\n\r\n      setAllStacks(curStacks);\r\n      setHeap(curHeap);\r\n      setGlobal(curGlobal);\r\n    }\r\n  }, [execState]);\r\n\r\n  return (\r\n    <div id=\"LogicalView\">\r\n      <div className=\"left-content\">\r\n        <div id=\"StackView\" className=\"content-view\">\r\n          <div className=\"title\"> Stack</div>\r\n          <>\r\n            <div className=\"content\">\r\n              {allStacks.map((stack) => {\r\n                const p = stack.name.indexOf('.');\r\n                const stackName =\r\n                  p > 0 ? stack.name.substring(0, p) : stack.name;\r\n                return (\r\n                  <MemoryBlock\r\n                    key={stack.name}\r\n                    funcName={stackName}\r\n                    variables={stack.getVariables()}\r\n                    selectedVar={selectedVar}\r\n                    handleClick={handleClick}\r\n                  />\r\n                );\r\n              })}\r\n              {/* <MemoryBlock funcName=\"functionX\" memoryCells={memoryCells} /> */}\r\n            </div>\r\n          </>\r\n        </div>\r\n      </div>\r\n      <div className=\"right-content\">\r\n        <div id=\"HeapView\" className=\"content-view\">\r\n          <div className=\"title\">Heap</div>\r\n          <div className=\"content\">\r\n            {heap.map((variable: Variable) => {\r\n              return (\r\n                <MemoryCell\r\n                  variable={formatHeapVariable(variable)}\r\n                  selectedVar={selectedVar}\r\n                  handleClick={handleClick}\r\n                />\r\n              );\r\n            })}\r\n          </div>\r\n        </div>\r\n        <div id=\"GlobalStaticView\" className=\"content-view\">\r\n          <div className=\"title\">Global / Static</div>\r\n          <>\r\n            <div className=\"content\">\r\n              {global.map((v: Variable) => {\r\n                return (\r\n                  <MemoryCell\r\n                    variable={formatGSVariable(v)}\r\n                    selectedVar={selectedVar}\r\n                    handleClick={handleClick}\r\n                  />\r\n                );\r\n              })}\r\n            </div>\r\n          </>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default LogicalView;\r\n\r\nconst formatHeapVariable = (variable: Variable) => {\r\n  return Object.assign(variable, { name: '', parentName: '\"Heap\"' });\r\n};\r\n\r\nconst formatGSVariable = (variable: Variable) => {\r\n  return Object.assign(variable, { parentName: '\"Global / Static\"' });\r\n};\r\n","export default __webpack_public_path__ + \"static/media/intLegend1.836ad3c4.svg\";","export default __webpack_public_path__ + \"static/media/intLegend2.7a6d9041.svg\";","export default __webpack_public_path__ + \"static/media/intLegend3.36d91a6d.svg\";","export default __webpack_public_path__ + \"static/media/intLegend4.160d8537.svg\";","export default __webpack_public_path__ + \"static/media/intMark1.e715f7c2.svg\";","export default __webpack_public_path__ + \"static/media/intMark2.f963dd7f.svg\";","import React from 'react';\r\nimport { Variable } from 'unicoen.ts/dist/interpreter/Engine/Variable';\r\nimport './style.scss';\r\nimport intLegend1 from '../../../assets/icon/binaryCode/intLegend1.svg';\r\nimport intLegend2 from '../../../assets/icon/binaryCode/intLegend2.svg';\r\nimport intLegend3 from '../../../assets/icon/binaryCode/intLegend3.svg';\r\nimport intLegend4 from '../../../assets/icon/binaryCode/intLegend4.svg';\r\nimport intMark1 from '../../../assets/icon/binaryCode/intMark1.svg';\r\nimport intMark2 from '../../../assets/icon/binaryCode/intMark2.svg';\r\nimport classNames from 'classnames';\r\n\r\ninterface IntegerBinaryCodeProps {\r\n  variable: Variable;\r\n}\r\n\r\nconst IntegerBinaryCode = ({ variable }: IntegerBinaryCodeProps) => {\r\n  const binaryCode0 = signMagn(variable);\r\n  const binaryCode1 = oneComp(variable);\r\n  const binaryCode2 = twoComp(variable);\r\n  const sign = binaryCode0[0] === '1';\r\n  return (\r\n    <svg id=\"IntegerBinaryCode\" height=\"100%\" width=\"100%\" fill=\"#8b8b8b\">\r\n      <text y={16}>Binary Code</text>\r\n      <g id=\"legend\" transform=\"translate(110 5)\">\r\n        <image xlinkHref={intLegend1} />\r\n        <image x={80} xlinkHref={intLegend2} />\r\n        <image x={165} y={2} xlinkHref={intLegend3} />\r\n        <image x={205} y={2} xlinkHref={intLegend4} />\r\n      </g>\r\n      <g id=\"bianryCode0\" className=\"value-text\" transform=\"translate(0 45)\">\r\n        <text>Sign-Magnitude</text>\r\n        <text\r\n          className={classNames(\r\n            'variable-value',\r\n            sign ? 'sign-bit-neg' : 'sign-bit-pos'\r\n          )}\r\n          y={20}\r\n        >\r\n          {binaryCode0.substring(0, 1)}\r\n        </text>\r\n        <text className=\"variable-value\" x={8} y={20}>\r\n          {binaryCode0.substring(1)}\r\n        </text>\r\n      </g>\r\n\r\n      <g id=\"bianryCode1\" className=\"value-text\" transform=\"translate(0 90)\">\r\n        <text>One's Complement</text>\r\n        <text\r\n          className={classNames(\r\n            'variable-value',\r\n            sign ? 'sign-bit-neg' : 'sign-bit-pos'\r\n          )}\r\n          y={20}\r\n        >\r\n          {binaryCode1.substring(0, 1)}\r\n        </text>\r\n        <text className=\"variable-value\" x={8} y={20}>\r\n          {binaryCode1.substring(1)}\r\n        </text>\r\n      </g>\r\n\r\n      <g id=\"bianryCode2\" className=\"value-text\" transform=\"translate(0 135)\">\r\n        <text>Two's Complement</text>\r\n        <text\r\n          className={classNames(\r\n            'variable-value',\r\n            sign ? 'sign-bit-neg' : 'sign-bit-pos'\r\n          )}\r\n          y={20}\r\n        >\r\n          {binaryCode2.substring(0, 1)}\r\n        </text>\r\n        <text className=\"variable-value\" x={8} y={20}>\r\n          {binaryCode2.substring(1)}\r\n        </text>\r\n      </g>\r\n\r\n      <defs>\r\n        <marker\r\n          id=\"arrow-tip\"\r\n          refX=\"8\"\r\n          refY=\"6\"\r\n          viewBox=\"0 0 16 16\"\r\n          markerWidth=\"8\"\r\n          markerHeight=\"8\"\r\n          markerUnits=\"userSpaceOnUse\"\r\n          orient=\"auto\"\r\n        >\r\n          <path d=\"M 0 0 12 6 0 12 3 6 Z\" />\r\n        </marker>\r\n      </defs>\r\n      {sign ? (\r\n        <g>\r\n          <g id=\"underline\">\r\n            <line x1={9} y1={69} x2={250} y2={69}></line>\r\n            <line x1={9} y1={114} x2={250} y2={114}></line>\r\n            <line x1={1} y1={120} x2={250} y2={120}></line>\r\n            <line x1={9} y1={159} x2={250} y2={159}></line>\r\n          </g>\r\n          <g id=\"arrows\">\r\n            <polyline\r\n              points=\"260,69 280,69 280,114 260,114\"\r\n              markerEnd=\"url(#arrow-tip)\"\r\n              fill=\"none\"\r\n            />\r\n            <polyline\r\n              points=\"260,120 280,120 280,159 260,159\"\r\n              markerEnd=\"url(#arrow-tip)\"\r\n              fill=\"none\"\r\n            />\r\n          </g>\r\n\r\n          <g id=\"mark\">\r\n            <image x={290} y={85} xlinkHref={intMark1} />\r\n            <image x={290} y={132} xlinkHref={intMark2} />\r\n          </g>\r\n        </g>\r\n      ) : (\r\n        <g></g>\r\n      )}\r\n    </svg>\r\n  );\r\n};\r\n\r\nexport default IntegerBinaryCode;\r\n\r\nfunction twoComp(variable: Variable) {\r\n  if (variable.type === 'int') {\r\n    const num = variable.getValue();\r\n    if (num >= 0) return signMagn(variable);\r\n    const oneC = oneComp(variable);\r\n    const twoC = '1' + d2b(parseInt(oneC, 2) + 1, 31);\r\n    return twoC;\r\n  }\r\n  return 'X';\r\n}\r\n\r\nfunction d2b(num: number, width: number) {\r\n  return (Array(width).join('0') + num.toString(2))\r\n    .slice(-width)\r\n    .replace('-', '0');\r\n}\r\n\r\nfunction signMagn(variable: Variable) {\r\n  if (variable.type === 'int') {\r\n    const num = variable.getValue();\r\n    const binary = d2b(num, 31);\r\n    return (num >= 0 ? '0' : '1') + binary;\r\n  }\r\n  return 'X';\r\n}\r\n\r\nfunction oneComp(variable: Variable) {\r\n  if (variable.type === 'int') {\r\n    const num = variable.getValue();\r\n\r\n    if (num >= 0) {\r\n      return signMagn(variable);\r\n    }\r\n\r\n    const binary = d2b(num, 31);\r\n    const reg = /1|0/g;\r\n    const oneC = binary.replace(reg, (x: string) => {\r\n      return x === '0' ? '1' : '0';\r\n    });\r\n    return '1' + oneC;\r\n  }\r\n  return 'X';\r\n}\r\n","import classNames from 'classnames';\r\nimport React from 'react';\r\nimport { Variable } from 'unicoen.ts/dist/interpreter/Engine/Variable';\r\nimport './style.scss';\r\ninterface FloatBinaryCodeProps {\r\n  variable: Variable;\r\n}\r\n\r\nconst FloatBinaryCode = ({ variable }: FloatBinaryCodeProps) => {\r\n  const { sign, exponent, mantissa } = float2binary(variable);\r\n\r\n  return (\r\n    <svg id=\"FloatBinaryCode\" height=\"100%\" width=\"100%\" fill=\"#8b8b8b\">\r\n      <text y={16}>Binary Code</text>\r\n      <g transform=\"translate(20, 0)\">\r\n        <text\r\n          y={60}\r\n          className={classNames(\r\n            'variable-value',\r\n            sign === '1' ? 'sign-bit-neg' : 'sign-bit-pos'\r\n          )}\r\n        >\r\n          {sign}\r\n        </text>\r\n        <text x={12} y={60} className=\"variable-value\">\r\n          {exponent}\r\n        </text>\r\n        <text x={80} y={60} className=\"variable-value\">\r\n          {mantissa}\r\n        </text>\r\n        <g id=\"underline\">\r\n          <line x1={0} y1={64} x2={8} y2={64}></line>\r\n          <line x1={12} y1={64} x2={74} y2={64}></line>\r\n          <line x1={80} y1={64} x2={258} y2={64}></line>\r\n        </g>\r\n      </g>\r\n      <g id=\"arrows\">\r\n        <polyline points=\"24,69 12,84\" fill=\"none\" />\r\n        <polyline points=\"63,69 63,84\" fill=\"none\" />\r\n        <polyline points=\"183,69 183,84\" fill=\"none\" />\r\n        <text x={0} y={100}>\r\n          sign\r\n        </text>\r\n        <text x={33} y={100}>\r\n          exponent\r\n        </text>\r\n        <text x={155} y={100}>\r\n          mantissa\r\n        </text>\r\n      </g>\r\n    </svg>\r\n  );\r\n};\r\n\r\nexport default FloatBinaryCode;\r\n\r\nconst float2binary = (variable: Variable) => {\r\n  const value = variable.getValue();\r\n  let binary: string = value.toString(2);\r\n  const sign = binary[0] === '-' ? '1' : '0';\r\n  binary = binary.replace('-', '');\r\n  const pointPos = binary.indexOf('.');\r\n  const firstOne = binary.indexOf('1');\r\n  const exponent = (\r\n    Array(8).join('0') + (pointPos - firstOne - 1 + 127).toString(2)\r\n  ).slice(-8);\r\n  const mantissa = (\r\n    binary.substring(firstOne + 1).replace('.', '') + Array(24).join('0')\r\n  ).slice(0, 23);\r\n  return { sign, exponent, mantissa };\r\n};\r\n","import React from 'react';\r\nimport { Variable } from 'unicoen.ts/dist/interpreter/Engine/Variable';\r\nimport './style.scss';\r\nimport classNames from 'classnames';\r\nimport IntegerBinaryCode from './IntegerBinaryCode';\r\nimport FloatBinaryCode from './FloatBinaryCode';\r\n\r\ninterface BinaryCodeSvgProps {\r\n  variable: Variable;\r\n}\r\n\r\n\r\n\r\nconst DefaultBinayCode = () => {\r\n  return (\r\n    <svg id=\"DefaultBinayCode\" height=\"100%\" width=\"100%\">\r\n      <text y={16} fill=\"#8b8b8b\">\r\n        Binary Code\r\n      </text>\r\n      {/* <g id=\"legend\" transform=\"translate(110 5)\">\r\n        <image xlinkHref={intLegend1} />\r\n        <image x={80} xlinkHref={intLegend2} />\r\n        <image x={165} y={2} xlinkHref={intLegend3} />\r\n        <image x={205} y={2} xlinkHref={intLegend4} />\r\n      </g> */}\r\n    </svg>\r\n  );\r\n};\r\n\r\nconst getBinaryCodeSvg = (variable: Variable) => {\r\n  switch (variable.type) {\r\n    case 'int':\r\n      return <IntegerBinaryCode variable={variable} />;\r\n    case 'float':\r\n      return <FloatBinaryCode variable={variable} />;\r\n    default:\r\n      return <DefaultBinayCode />;\r\n  }\r\n};\r\n\r\nfunction BinaryCodeSvg({ variable }: BinaryCodeSvgProps) {\r\n  return getBinaryCodeSvg(variable);\r\n}\r\n\r\nexport default BinaryCodeSvg;\r\n\r\n","import React, { useEffect } from 'react';\r\nimport { Variable } from 'unicoen.ts/dist/interpreter/Engine/Variable';\r\nimport BinaryCodeSvg from './binaryCodeSvg/BinaryCodeSvg';\r\nimport './style.scss';\r\n\r\nexport interface MemoryInfo {\r\n  funcName: string;\r\n  varName: string;\r\n  address: string;\r\n  type: string;\r\n  value: string;\r\n}\r\n\r\nconst defaultMemoryInfo: MemoryInfo = {\r\n  funcName: 'X',\r\n  varName: 'X',\r\n  address: 'X',\r\n  type: 'X',\r\n  value: 'X',\r\n};\r\n\r\ninterface MemoryDetailProps {\r\n  variable: Variable;\r\n}\r\n\r\nfunction MemoryDetail({ variable }: MemoryDetailProps) {\r\n  const memoryInfo: MemoryInfo =\r\n    variable.address > 0\r\n      ? {\r\n          funcName: variable.parentName ? variable.parentName : '',\r\n          varName: variable.name ? variable.name : '-',\r\n          address: '0x' + variable.address.toString(16),\r\n          type: variable.type,\r\n          value: variable.getValue().toString(),\r\n        }\r\n      : defaultMemoryInfo;\r\n  // console.log('DEBUG|'+variable.address);\r\n  return (\r\n    <div id=\"MemoryDetail\">\r\n      <div>\r\n        <div className=\"detail-item\"></div>\r\n        <div className=\"detail-item\">\r\n          <div className=\"item-name\">Function Name</div>\r\n          <div className=\"item-value\">{memoryInfo.funcName}</div>\r\n        </div>\r\n        <div className=\"detail-item\">\r\n          <div className=\"item-name\">Variable Name</div>\r\n          <div className=\"item-value variable-name\">{memoryInfo.varName}</div>\r\n        </div>\r\n        <div className=\"detail-item\">\r\n          <div className=\"item-name\">Address</div>\r\n          <div className=\"item-value\">{memoryInfo.address}</div>\r\n        </div>\r\n        <div className=\"type-value-detail\">\r\n          <div className=\"detail-item dashed-border-right\">\r\n            <div className=\"item-name\">Type</div>\r\n            <div className=\"item-value\">{memoryInfo.type}</div>\r\n          </div>\r\n          <div className=\"detail-item\">\r\n            <div className=\"item-name\">Value</div>\r\n            <div className=\"item-value\">{memoryInfo.value}</div>\r\n          </div>\r\n        </div>\r\n        <div id=\"BinaryCodeSvg\">\r\n          <BinaryCodeSvg variable={variable} />\r\n        </div>\r\n        {/* <div className=\"detail-item binary-item\">\r\n          <div className=\"item-name\">Sign-Magnitude</div>\r\n          <div className=\"item-value binary-code\">{memoryInfo.binaryCode0}</div>\r\n        </div>\r\n        <div className=\"detail-item binary-item\">\r\n          <div className=\"item-name\">One's Complement</div>\r\n          <div className=\"item-value binary-code\">{memoryInfo.binaryCode1}</div>\r\n        </div>\r\n        <div className=\"detail-item binary-item\">\r\n          <div className=\"item-name\">Two's Complement</div>\r\n          <div className=\"item-value binary-code\">{memoryInfo.binaryCode2}</div>\r\n        </div> */}\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default MemoryDetail;\r\n","import React from 'react';\r\nimport { ExecState } from 'unicoen.ts/dist/interpreter/Engine/ExecState';\r\nimport { Variable } from 'unicoen.ts/dist/interpreter/Engine/Variable';\r\nimport './style.scss';\r\n\r\ninterface PhysicalViewProps {\r\n  execState: ExecState | undefined;\r\n  selectedVar: Variable | undefined;\r\n  handleClick: (variable: Variable) => void;\r\n}\r\n\r\nfunction PhysicalView({\r\n  execState,\r\n  selectedVar,\r\n  handleClick,\r\n}: PhysicalViewProps) {\r\n  // const a = allVariables ;\r\n  return <div id=\"PhysicalView\">Coming Soon...</div>;\r\n}\r\n\r\nexport default PhysicalView;\r\n","import React from 'react';\r\nimport classNames from 'classnames';\r\nimport './style.scss';\r\ninterface SubtitleBlockProps {\r\n  title: string;\r\n  isActive: boolean;\r\n  handleClick: () => void;\r\n}\r\n\r\nfunction SubtitleBlock({title, isActive, handleClick}: SubtitleBlockProps) {\r\n  return (\r\n    <div\r\n      className={classNames('subtitle-block', {'subtitle-active': isActive})}\r\n      onClick={handleClick}\r\n    >\r\n      {title}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default SubtitleBlock;\r\n","import classNames from 'classnames';\r\nimport React, { useEffect, useState } from 'react';\r\nimport { ExecState } from 'unicoen.ts/dist/interpreter/Engine/ExecState';\r\nimport { Variable } from 'unicoen.ts/dist/interpreter/Engine/Variable';\r\nimport LogicalView from '../../components/memory/LogicalView';\r\nimport MemoryDetail, { MemoryInfo } from '../../components/memory/MemoryDetail';\r\nimport PhysicalView from '../../components/memory/PhysicalView';\r\nimport PanelHeader from '../../components/panelHeader/PanelHeader';\r\nimport SubtitleBlock from '../../components/subtitleBlock/SubtitleBlock';\r\nimport './style.scss';\r\n\r\n// const example_memory: MemoryInfo = {\r\n//   funcName: 'recursiveToThree',\r\n//   varName: 'n',\r\n//   address: '0xc35f',\r\n//   type: 'int',\r\n//   value: '-1',\r\n//   binaryCode0: '1000 0001',\r\n//   binaryCode1: '1000 0001',\r\n//   binaryCode2: '1000 0001',\r\n//   // binaryCode0: '1000 0000 0000 0000 0000 0000 0000 0001',\r\n//   // binaryCode1: '1111 1111 1111 1111 1111 1111 1111 1110',\r\n//   // binaryCode2: '1111 1111 1111 1111 1111 1111 1111 1111',\r\n// };\r\n\r\nconst defaultVar: Variable = new Variable('', '', '', -1, -1);\r\n\r\ninterface MemoryPanelProps {\r\n  execState: ExecState | undefined;\r\n}\r\n\r\nfunction MemoryPanel({ execState }: MemoryPanelProps) {\r\n  const [viewMode, setViewMode] = useState('logical');\r\n  const [selectedVar, setSelectedVar] = useState<Variable>();\r\n  const [lastVar, setLastVar] = useState<Variable>(defaultVar);\r\n\r\n  const handleModeChange = (mode: 'logical' | 'physical') => {\r\n    setViewMode(mode);\r\n  };\r\n\r\n  const handleSelectMemory = (newSelectedVar: Variable) => {\r\n    if (newSelectedVar.address === selectedVar?.address) {\r\n      hideDetail();\r\n    } else {\r\n      setLastVar(selectedVar ? selectedVar : defaultVar);\r\n      setSelectedVar(newSelectedVar);\r\n    }\r\n  };\r\n\r\n  const hideDetail = () => {\r\n    setLastVar(selectedVar ? selectedVar : defaultVar);\r\n    setSelectedVar(undefined);\r\n  };\r\n\r\n  return (\r\n    <div\r\n      id=\"MemoryPanel\"\r\n      className={classNames('panel', {\r\n        'show-detail': selectedVar !== undefined,\r\n        'hide-detail': selectedVar === undefined,\r\n      })}\r\n    >\r\n      <PanelHeader title=\"Memory\" />\r\n      <div className=\"subtitle-1\">\r\n        <div className=\"subtitle-area\">\r\n          <SubtitleBlock\r\n            title=\"Logical View\"\r\n            isActive={viewMode === 'logical'}\r\n            handleClick={() => handleModeChange('logical')}\r\n          />\r\n        </div>\r\n        <div className=\"subtitle-area\">\r\n          <SubtitleBlock\r\n            title=\"Physical View\"\r\n            isActive={viewMode === 'physical'}\r\n            handleClick={() => handleModeChange('physical')}\r\n          />\r\n        </div>\r\n      </div>\r\n      <div className=\"main-area\">\r\n        {viewMode === 'logical' ? (\r\n          <LogicalView\r\n            execState={execState}\r\n            selectedVar={selectedVar}\r\n            handleClick={handleSelectMemory}\r\n          />\r\n        ) : (\r\n          <PhysicalView\r\n            execState={execState}\r\n            selectedVar={selectedVar}\r\n            handleClick={handleSelectMemory}\r\n          />\r\n        )}\r\n      </div>\r\n      <div className=\"subtitle-area\">\r\n        <SubtitleBlock\r\n          title=\"Memory Detail\"\r\n          isActive={selectedVar !== undefined}\r\n          handleClick={() => {\r\n            if (selectedVar !== undefined) {\r\n              hideDetail();\r\n            } else {\r\n              if (lastVar !== undefined) {\r\n                setSelectedVar(lastVar);\r\n              } else {\r\n                setSelectedVar(defaultVar);\r\n                // alert('Click a memory cell to start');\r\n              }\r\n            }\r\n          }}\r\n        />\r\n      </div>\r\n      <div className=\"detail-area\">\r\n        <MemoryDetail variable={selectedVar ? selectedVar : lastVar} />\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default MemoryPanel;\r\n","export default __webpack_public_path__ + \"static/media/logo.afd13c96.svg\";","export default __webpack_public_path__ + \"static/media/info.418cedcd.svg\";","export default __webpack_public_path__ + \"static/media/icon2.c3c63206.svg\";","import React from 'react';\r\nimport { Popover } from 'antd';\r\nimport logo from '../../assets/icon/logo.svg';\r\nimport menuIcon1 from '../../assets/icon/info.svg';\r\nimport menuIcon2 from '../../assets/icon/icon2.svg';\r\nimport './style.scss';\r\n\r\nconst title = '提示';\r\nconst content =  () => {\r\n  return (\r\n    <>\r\n      <p>Source Editor 编辑器面板：源代码输入，点击左侧行号高亮相应语句</p>\r\n      <p> Console 代码输出框：程序输出结果</p>\r\n      <p>Timeline 时间线面板：点击按钮或时间轴控制流程，显示高亮语句位置</p>\r\n      <p>Call Stack 调用栈面板：展示程序执行过程与变量变化</p>\r\n      <p>Memory 内存面板：展示内存的逻辑视图、内存细节信息、以及int与float类型的二进制表达</p>\r\n      <p>快捷键：开始/重新开始 \"Ctrl + Enter\" | 上一步 \"←\" | 下一步 \"→\" </p>\r\n      <hr />\r\n      <p>！当前版本暂不支持输入功能，例如 scanf，getchar</p>\r\n      <p>！负数浮点数声明需要在负号前加 0，例如\"float a= 0 - 1.0\"</p>\r\n      <p>！本工具仅提供可视化功能，编译器能力较弱，请在本地IDE中确认编译通过后再使用本工具执行。</p>\r\n      <p>* 推荐在 Chrome/Edge 浏览器至少 1920×1080 分辨率下使用 （内容显示不全可在浏览器使用 'Ctrl' + '+'/'-' 调节缩放）</p>\r\n    </>\r\n  )\r\n}\r\n\r\nfunction AppHeader() {\r\n  return (\r\n    <div id=\"AppHeader\">\r\n      <div className=\"logo\">\r\n        <svg width={400} height={64}>\r\n          <image xlinkHref={logo} height=\"64\" width=\"400\" />\r\n        </svg>\r\n      </div>\r\n      <div className=\"menu\">\r\n          <div></div>\r\n        <div className=\"menu-item\">\r\n          <Popover placement=\"bottom\" title={title} content={content} trigger=\"click\" \r\n         overlayClassName=\"info-popover\">\r\n            <svg width={22} height={22}>\r\n              <image xlinkHref={menuIcon1} height=\"22\" width=\"22\" />\r\n            </svg>\r\n          </Popover>\r\n        </div>\r\n        <div className=\"menu-item\">\r\n          <svg width={20} height={20}>\r\n            <image xlinkHref={menuIcon2} height=\"20\" width=\"20\" />\r\n          </svg>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default AppHeader;\r\n","import React, { useEffect, useRef, useState } from 'react';\r\nimport './App.scss';\r\nimport EditorPanel from './panels/editorPanel/EditorPanel';\r\nimport ConsolePanel from './panels/consolePanel/ConsolePanel';\r\nimport TimelinePanel, {\r\n  VariableWithSteps,\r\n} from './panels/timelinePanel/TimelinePanel';\r\nimport CallStackPanel from './panels/callStackPanel/CallStackPanel';\r\nimport MemoryPanel from './panels/memoryPanel/MemoryPanel';\r\nimport ContainerDimensions from 'react-container-dimensions';\r\nimport AppHeader from './components/appHeader/AppHeader';\r\nimport { ExecState } from 'unicoen.ts/dist/interpreter/Engine/ExecState';\r\nimport { remove, slot, showEvents, signal } from './components/emitter';\r\nimport { unstable_batchedUpdates } from 'react-dom';\r\n\r\nimport * as d3 from 'd3';\r\n\r\nfunction App() {\r\n  const [execState, setExecState] = useState<ExecState | undefined>();\r\n  const [lastState, setLastState] = useState<ExecState | undefined>();\r\n  const [variableShowUps, setVariableShowUps] = useState<VariableWithSteps[]>(\r\n    []\r\n  );\r\n  const app = React.createRef<HTMLDivElement>();\r\n\r\n  useEffect(() => {\r\n    slot(\r\n      'draw',\r\n      (execState: ExecState | undefined, lastState: ExecState | undefined) => {\r\n        unstable_batchedUpdates(() => {\r\n          setExecState(execState);\r\n          setLastState(lastState);\r\n        });\r\n      }\r\n    );\r\n    return () => {\r\n      remove('draw');\r\n    };\r\n  }, []);\r\n\r\n  const updVariableShowUps = (variableShowUps: VariableWithSteps[]) => {\r\n    setVariableShowUps(variableShowUps);\r\n  };\r\n\r\n  const handleKeyDown = (e: React.KeyboardEvent) => {\r\n    console.log('Key: ' + e.key);\r\n    switch (e.key) {\r\n      case 'ArrowRight': {\r\n        e.preventDefault();\r\n        signal('debug', 'Step');\r\n        break;\r\n      }\r\n      case 'ArrowLeft': {\r\n        e.preventDefault();\r\n        signal('debug', 'StepBack');\r\n        break;\r\n      }\r\n    }\r\n    if (e.ctrlKey && e.key === 'Enter') {\r\n      app.current?.focus();\r\n      signal('debug', 'Start');\r\n      const arrowListJson = sessionStorage.getItem('arrowList');\r\n      let arrowList = arrowListJson === null ? {} : JSON.parse(arrowListJson);\r\n      if (!arrowList) {\r\n        arrowList = {};\r\n      }\r\n      Object.keys(arrowList).forEach((name) => {\r\n        d3.select('#svg')\r\n          .select(`#block_${name}`)\r\n          .attr('transform', 'matrix(1,0,0,1,0,0)');\r\n      });\r\n      const sourceCode = sessionStorage.getItem('sourceCode');\r\n      sessionStorage.clear();\r\n      if (sourceCode) sessionStorage.setItem('sourceCode', sourceCode);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"App\" ref={app} onKeyDown={handleKeyDown} tabIndex={-1}>\r\n      <div className=\"Row-1\">\r\n        <AppHeader />\r\n      </div>\r\n      <div className=\"Row-2\">\r\n        <div className=\"Col-1\">\r\n          <EditorPanel />\r\n          <ConsolePanel />\r\n        </div>\r\n        <div className=\"Col-2\">\r\n          <ContainerDimensions>\r\n            {({ width, height }: { width: number; height: number }) => (\r\n              <React.Fragment>\r\n                <TimelinePanel\r\n                  variableShowUps={variableShowUps}\r\n                  updVariableShowUps={updVariableShowUps}\r\n                />\r\n                <CallStackPanel\r\n                  width={width}\r\n                  height={height}\r\n                  execState={execState}\r\n                  lastState={lastState}\r\n                  variableShowUps={variableShowUps}\r\n                />\r\n              </React.Fragment>\r\n            )}\r\n          </ContainerDimensions>\r\n        </div>\r\n        <div className=\"Col-3\">\r\n          <MemoryPanel execState={execState} />\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.scss';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\nimport { createStore} from 'redux';\r\nimport { Provider } from 'react-redux';\r\nimport reducer from './store';\r\nconst store = createStore(reducer as any);\r\n\r\nReactDOM.render(\r\n  <Provider store={store}>\r\n    <React.StrictMode>\r\n      <App />\r\n    </React.StrictMode>\r\n  </Provider>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n","import {EventEmitter} from 'events';\nexport const emitter = new EventEmitter();\nemitter.setMaxListeners(20);\nexport type event =\n  | 'debug'\n  | 'changeTheme'\n  | 'changeLang'\n  | 'changeProgLang'\n  | 'changeState'\n  | 'changeOutput'\n  | 'zoom'\n  | 'draw'\n  | 'redraw'\n  | 'EOF'\n  | 'stdin'\n  | 'Breakpoint'\n  | 'files'\n  | 'changeStep'\n  | 'jumpTo'\n  | 'init'\n  | 'statementHighlight'\n  | 'cancelStatementHighlight';\nexport const slot = (\n  event: event,\n  listener: (...args: any[]) => void\n): EventEmitter => {\n  return emitter.on(event, listener);\n};\nexport const signal = (event: event, ...args: any[]): boolean => {\n  // console.log('Log | signal: ' + event + ' ' + args);\n  return emitter.emit(event, ...args);\n};\nexport const remove = (event: event) => {\n  emitter.removeAllListeners(event);\n};\n\nexport const showEvents = () => {\n  const eventNames = emitter.eventNames();\n  console.log('Eventnames: ' + eventNames);\n};\n"],"sourceRoot":""}