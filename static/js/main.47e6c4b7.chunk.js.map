{"version":3,"sources":["components/server.ts","components/panelHeader/PanelHeader.tsx","locales/ja.ts","locales/en.ts","locales/translate.ts","components/editor/Editor.tsx","panels/editorPanel/EditorPanel.tsx","components/console/Console.tsx","panels/consolePanel/ConsolePanel.tsx","components/timeline/StatementHighlightContent.tsx","components/timeline/VariableHighlightContent.tsx","components/timeline/Slider.tsx","assets/icon/stepLight.svg","assets/icon/stepDark.svg","assets/icon/stepAllLight.svg","assets/icon/stepAllDark.svg","assets/icon/restartLight.svg","assets/icon/restartDark.svg","assets/icon/stepBackLight.svg","assets/icon/stepBackDark.svg","assets/icon/backAllLight.svg","assets/icon/backAllDark.svg","assets/icon/kaishi2.svg","assets/icon/kaishi1.svg","components/timeline/ControButton.tsx","components/timeline/ControlButtonGroup.tsx","panels/timelinePanel/TimelinePanel.tsx","components/callStack/blockDrawer/BlockDrawer.tsx","components/callStack/block/Block.tsx","components/callStack/CallStack.tsx","components/callStack/animation/Animation.tsx","components/callStack/animation/AnimationDrawer.tsx","panels/callStackPanel/CallStackPanel.tsx","components/memory/memoryBlock/MemoryCell.tsx","components/memory/memoryBlock/MemoryBlock.tsx","components/memory/LogicalView.tsx","components/memory/MemoryDetail.tsx","components/memory/PhysicalView.tsx","components/subtitleBlock/SubtitleBlock.tsx","panels/memoryPanel/MemoryPanel.tsx","assets/icon/logo.svg","assets/icon/icon1.svg","assets/icon/icon2.svg","components/appHeader/AppHeader.tsx","App.tsx","reportWebVitals.ts","index.tsx","components/emitter.tsx"],"names":["server","timer","isExecuting","files","Map","count","interpreter","stateHistory","outputsHistory","progLang","Error","module","this","CPP14Interpreter","Java8Interpreter","Python3Interpreter","dynamicLoadInterpreter","setFileList","file","reader","FileReader","Promise","resolve","reject","onerror","abort","DOMException","onload","result","ArrayBuffer","set","name","readAsArrayBuffer","all","Array","from","map","addFile","filename","delete","request","controlEvent","sourcecode","stdinText","lineNumOfBreakpoint","step","Start","Stop","BackAll","StepBack","Step","StepAll","JumpTo","Exec","SyntaxCheck","reset","lineCount","split","length","state","startStepExecution","execState","recordExecState","stdout","getStdout","output","recordOutputText","linesShowUp","allVariables","variableShowUp","i","push","lineNumber","steps","color","depth","visible","ret","debugState","errors","currentExpr","getCurrentExpr","nextExpr","getNextExpr","stacks","getStacks","functionName","Number","nCodeRange","codeRange","begin","y","forEach","stack","stackName","getVariables","variable","inArray","Object","keys","function","currentClassName","constructor","UniBinOp","res","binOp","variableName","lastExpr","nextClassName","uniReturn","returnBinOp","stepCount","uniBinOp","operator","right","UniMethodCall","methodName","left","UniIdent","UniUnaryOp","expr","variables","clearTimeout","undefined","lastState","getIsWaitingForStdin","stdin","stepExecute","isStepExecutionRunning","getLastHistory","currentCount","loop","includes","signal","global","setTimeout","bind","code","checkSyntaxError","PanelHeader","title","className","howToUse","close","debugStart","debugStop","debugBackAll","debugStepBack","debugStep","debugStepAll","changeThemedark","changeThemelight","zoomOut","zoomIn","zoomReset","howToText","uploadFile","warning","editInDebug","continueDebug","restart","rememberCommand","sourceCodeCcpp","String","raw","sourceCodeJava","sourceCodePython","translate","lang","key","ja","en","Editor","props","sentSourcecode","preventedCommand","ace","editorRef","React","isDebugging","checkbox","noAlert","highlightIds","sourceCodeKey","prog","replace","char","toUpperCase","fontSize","showAlert","theme","hideAlert","setHighlightOnCode","slot","send","sessionStorage","setItem","then","response","recieve","catch","e","alert","command","setState","Math","max","a","editor","current","on","acequire","Range","target","domEvent","currentTarget","indexOf","isFocused","clientX","getBoundingClientRect","row","getDocumentPosition","session","getSession","clearBreakpoint","filter","n","setBreakpoint","stop","d3","attr","d","remove","setSyntaxError","AceRange","range","x","end","resize","scrollToLine","getSelection","setSelectionRange","annotations","error","line","column","charPositionInLine","text","getMsg","type","setAnnotations","highlightId","removeMarker","annotation","highlightLines","id","renderAlert","renderEditor","mode","ref","value","tabSize","editorProps","$blockScrolling","Infinity","setOptions","enableBasicAutocompletion","enableLiveAutocompletion","showLineNumbers","readOnly","style","height","width","onChange","onBeforeLoad","Dialog","aria-labelledby","tabIndex","role","Header","closeButton","Title","bsStyle","Footer","onClick","checked","validationState","inputRef","EditorPanel","Console","isReadOnly","endsWith","sendText","slice","showGutter","marginTop","ConsolePanel","StatementHighlightContent","VariableHighlightContent","Slider","dragStart","stopPropagation","dragging","dragEnd","dragFromSVG","scale","invert","nativeEvent","offsetX","min","round","mouseMove","window","addEventListener","removeEventListener","contentWidth","activeWidth","console","log","display","zIndex","overflow","onMouseDown","onMouseMove","rx","ry","ControlButton","iconHrefLight","iconHrefDark","disabled","classNames","xlinkHref","cursor","ControlButtonGroup","useState","start","setStart","setStop","backAll","setBackAll","stepBack","setStepBack","setStep","stepAll","setStepAll","useEffect","backAllLight","backAllDark","stepBackLight","stepBackDark","restartLight","restartDark","arrowListJson","getItem","arrowList","JSON","parse","select","clear","stepLight","startLight","stepDark","startDark","showEvents","stepAllLight","stepAllDark","TimelinePanel","setMax","setVariableHighlights","statementHighlights","setStatementHighlights","setLinesShowUp","setVariableShowUp","setDebugStatus","setDebugState","timelineArea","createRef","timelineWidth","setTimelineWidth","statement","floor","random","formatRgb","splice","options","funcName","temp","label","children","varName","unstable_batchedUpdates","debugStatus","clientWidth","linear","domain","arrayToString","array","isArray","fromCharCode","v","startsWith","join","valueToArray","toString","BlockDrawer","blockStacks","blockArrows","update","calcPos","blockStack","BlockStack","setColor","index","getName","calcStackPos","setPos","originX","originY","getBlockTable","blockCellContainer","_x","BlockCell","WIDTH","_y","HEIGHT","calcVariablePos","setHeight","offsetY","setWidth","pos","Vector","blockTable","makeBlockTable","setAxes","getValue","cellss","BlockArrayVariable","BlockVariable","getBlockCellContainer","getX","getY","init","address","cell","pushCell","setType","setAddress","table","concat","parentKey","FONT_SIZE","Block","selectAll","append","block_node","parentNode","node","getBBox","each","word","words","reverse","tspan","pop","getComputedTextLength","getWidth","getHeight","fill","stroke","strokeWidth","getColor","list","blockCell","transform","fontWeight","backgroud","renderBlockBackground","content","renderBlockContent","renderArrow","sourceStackName","targetStackName","source","empty","sourceX","sourceY","targetX","targetY","CallStack","blockDrawer","getBlockStacks","getBlockArrows","stringify","nextProps","nextBlockStacks","blockStacksLen","nextBlockStacksLen","appendClone","clonedBlock","block","blocks","drawOrRemoveBlock","transform-origin","renderStackView","renderBlocks","Animation","animationDrawer","getState","programInit","methodCall","variablesInit","showUp","getVariableKeys","getVariableTypes","getVariableValues","getStackName","postArgs","getPostArgs","block1","block2","svgblock1","svgblock2","transition","duration","tween","t","cloned","arrow","delay","arg","idx","targetTransform","svg","rect","transformOriginX","transformOriginY","len","prevProps","newProps","newStacks","destroyList","addList","stacksLen","newStacksLen","AnimationDrawer","variableKeys","variableTypes","variableValues","getCurrentStack","parseExe","lastClassName","variableDec","uniMethodCall","getMethodArgs","uniVariableDec","variableDef","uniVariableDef","variableValue","returnValue","travelValue","returnValueClass","travelArg","args","CallStackPanel","viewBox","refX","refY","markerWidth","markerHeight","orient","cx","cy","r","Component","MemoryCell","selectedVar","handleClick","dataType","active","arr","firstVarInArr","MemoryBlock","Variable","LogicalView","allStacks","setAllStacks","setHeap","setGlobal","curStacks","curHeap","curGlobal","p","substring","defaultMemoryInfo","binaryCode0","binaryCode1","binaryCode2","MemoryDetail","memoryInfo","signMagn","oneComp","twoComp","oneC","d2b","parseInt","num","PhysicalView","SubtitleBlock","isActive","defaultVar","MemoryPanel","viewMode","setViewMode","setSelectedVar","lastVar","setLastVar","handleModeChange","handleSelectMemory","newSelectedVar","hideDetail","AppHeader","logo","menuIcon1","menuIcon2","App","setExecState","setLastState","Fragment","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById","emitter","EventEmitter","setMaxListeners","event","listener","emit","removeAllListeners","eventNames"],"mappings":"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","file":"static/js/main.47e6c4b7.chunk.js","sourcesContent":["import {SyntaxErrorData} from 'unicoen.ts/dist/interpreter/mapper/SyntaxErrorData';\r\nimport {ExecState} from 'unicoen.ts/dist/interpreter/Engine/ExecState';\r\nimport {signal} from './emitter';\r\nimport {Interpreter} from 'unicoen.ts/dist/interpreter/Interpreter';\r\nimport {inArray} from 'jquery';\r\nimport {UniBinOp} from 'unicoen.ts/dist/node/UniBinOp';\r\nimport {UniExpr, UniMethodCall, UniIdent, UniUnaryOp} from 'unicoen.ts';\r\n\r\nexport type CONTROL_EVENT =\r\n  | 'Exec'\r\n  | 'Start'\r\n  | 'Stop'\r\n  | 'BackAll'\r\n  | 'StepBack'\r\n  | 'Step'\r\n  | 'StepAll'\r\n  | 'SyntaxCheck'\r\n  | 'JumpTo';\r\nexport type DEBUG_STATE =\r\n  | 'First'\r\n  | 'Debugging'\r\n  | 'stdin'\r\n  | 'EOF'\r\n  | 'Stop'\r\n  | 'Executing';\r\nexport class Request {\r\n  constructor(\r\n    public controlEvent: CONTROL_EVENT,\r\n    public sourcecode: string,\r\n    public stdinText?: string,\r\n    public lineNumOfBreakpoint?: number[],\r\n    public progLang?: string,\r\n    public step?: number\r\n  ) {}\r\n}\r\n\r\nexport class Response {\r\n  constructor(\r\n    public output: string,\r\n    public sourcecode: string,\r\n    public debugState: DEBUG_STATE,\r\n    public step: number,\r\n    public errors: SyntaxErrorData[],\r\n    public files: Map<string, ArrayBuffer>,\r\n    public execState?: ExecState,\r\n    public lastState?: ExecState,\r\n    public stepCount?: number,\r\n    public linesShowUp?: any,\r\n    public allVariables?: any,\r\n    public variableShowUp?: any\r\n  ) {}\r\n}\r\n\r\nclass Server {\r\n  private timer: NodeJS.Timeout | null = null;\r\n  private isExecuting = false;\r\n  private files: Map<string, ArrayBuffer> = new Map();\r\n  private count = 0;\r\n  private interpreter: Interpreter | null = null;\r\n  private stateHistory: ExecState[] = [];\r\n  private outputsHistory: string[] = [];\r\n\r\n  private async dynamicLoadInterpreter(progLang?: string) {\r\n    if (typeof progLang === 'undefined') {\r\n      throw new Error('Selected programming language is invalid.');\r\n    } else if (progLang === 'c_cpp') {\r\n      // prettier-ignore\r\n      const module = await import(/* webpackChunkName: \"CPP14\" */ 'unicoen.ts/dist/interpreter/CPP14/CPP14Interpreter');\r\n      this.interpreter = new module.CPP14Interpreter();\r\n    } else if (progLang === 'java') {\r\n      // prettier-ignore\r\n      const module = await import(/* webpackChunkName: \"Java8\" */ 'unicoen.ts/dist/interpreter/Java8/Java8Interpreter');\r\n      this.interpreter = new module.Java8Interpreter();\r\n    } else if (progLang === 'python') {\r\n      // prettier-ignore\r\n      const module = await import(/* webpackChunkName: \"Python3\" */ 'unicoen.ts/dist/interpreter/Python3/Python3Interpreter');\r\n      this.interpreter = new module.Python3Interpreter();\r\n    }\r\n  }\r\n  private async reset(progLang?: string) {\r\n    this.count = 0;\r\n    await this.dynamicLoadInterpreter(progLang);\r\n    if (this.interpreter === null) {\r\n      throw new Error('Interpreter is not found');\r\n    }\r\n    this.interpreter.setFileList(this.files);\r\n    this.stateHistory = [];\r\n    this.outputsHistory = [];\r\n  }\r\n\r\n  private addFile(file: File) {\r\n    const reader = new FileReader();\r\n    return new Promise((resolve, reject) => {\r\n      reader.onerror = () => {\r\n        reader.abort();\r\n        reject(new DOMException('Problem parsing input file.'));\r\n      };\r\n\r\n      reader.onload = () => {\r\n        if (reader.result instanceof ArrayBuffer) {\r\n          this.files.set(file.name, reader.result);\r\n          resolve(reader.result);\r\n        } else {\r\n          reject(new DOMException('Problem loading input file.'));\r\n        }\r\n      };\r\n\r\n      reader.readAsArrayBuffer(file);\r\n    });\r\n  }\r\n\r\n  public async upload(files: FileList) {\r\n    await Promise.all(Array.from(files).map((file) => this.addFile(file)));\r\n    return this.files;\r\n  }\r\n\r\n  public delete(filename: string) {\r\n    this.files.delete(filename);\r\n    return this.files;\r\n  }\r\n\r\n  public async send(request: Request): Promise<Response> {\r\n    const {\r\n      controlEvent,\r\n      sourcecode,\r\n      stdinText,\r\n      lineNumOfBreakpoint,\r\n      progLang,\r\n      step = 0,\r\n    } = request;\r\n\r\n    switch (controlEvent) {\r\n      case 'Start': {\r\n        return this.Start(sourcecode, progLang);\r\n      }\r\n      case 'Stop': {\r\n        return this.Stop(sourcecode);\r\n      }\r\n      case 'BackAll': {\r\n        return this.BackAll(sourcecode);\r\n      }\r\n      case 'StepBack': {\r\n        return this.StepBack(sourcecode);\r\n      }\r\n      case 'Step': {\r\n        return this.Step(sourcecode, stdinText);\r\n      }\r\n      case 'StepAll': {\r\n        return this.StepAll(sourcecode, lineNumOfBreakpoint);\r\n      }\r\n      case 'JumpTo': {\r\n        return this.JumpTo(sourcecode, step);\r\n      }\r\n      case 'Exec': {\r\n        return this.Exec(sourcecode, progLang, lineNumOfBreakpoint);\r\n      }\r\n      case 'SyntaxCheck': {\r\n        return this.SyntaxCheck(sourcecode, progLang);\r\n      }\r\n    }\r\n  }\r\n\r\n  private async Start(sourcecode: string, progLang?: string) {\r\n    await this.reset(progLang);\r\n    if (this.interpreter === null) {\r\n      throw new Error('interpreter is not found');\r\n    }\r\n    const lineCount = sourcecode.split(/\\r\\n|\\r|\\n/).length;\r\n    const state = this.interpreter.startStepExecution(sourcecode);\r\n    const execState = this.recordExecState(state);\r\n    const stdout = this.interpreter.getStdout();\r\n    const output = this.recordOutputText(stdout);\r\n    const linesShowUp: {\r\n      lineNumber: number;\r\n      steps: number[];\r\n      color: string;\r\n      depth: number[];\r\n      visible: boolean;\r\n    }[] = [];\r\n    const allVariables: {[key: string]: any} = {};\r\n    const variableShowUp: {\r\n      function: string;\r\n      name: string;\r\n      steps: number[];\r\n      color: string;\r\n      visible: boolean;\r\n    }[] = [];\r\n    for (let i = 1; i <= lineCount; i++) {\r\n      linesShowUp.push({\r\n        lineNumber: i,\r\n        steps: [],\r\n        color: '',\r\n        depth: [],\r\n        visible: true,\r\n      });\r\n    }\r\n    let ret: Response = {\r\n      execState,\r\n      output,\r\n      sourcecode,\r\n      debugState: 'First',\r\n      step: this.count,\r\n      errors: [],\r\n      files: this.files,\r\n    };\r\n    this.isExecuting = true;\r\n    while (ret.debugState !== 'EOF' && ret.debugState !== 'stdin') {\r\n      const currentExpr = this.stateHistory[this.count].getCurrentExpr();\r\n      const nextExpr = this.stateHistory[this.count].getNextExpr();\r\n      const stacks = this.stateHistory[this.count].getStacks();\r\n      const functionName = stacks[stacks.length - 1].name;\r\n      let depth = 1;\r\n      if (functionName.split('.').length > 1) {\r\n        depth = Number(functionName.split('.')[1]);\r\n      }\r\n      const nCodeRange = nextExpr.codeRange;\r\n      linesShowUp[nCodeRange.begin.y - 1]['steps'].push(this.count + 1);\r\n      linesShowUp[nCodeRange.begin.y - 1]['depth'].push(depth);\r\n\r\n      stacks.forEach((stack) => {\r\n        const stackName = stack.name.split('.')[0];\r\n        if (!(stackName in allVariables)) {\r\n          allVariables[stackName] = {};\r\n        }\r\n        stack.getVariables().forEach((variable) => {\r\n          if (\r\n            inArray(variable.name, Object.keys(allVariables[stackName])) < 0\r\n          ) {\r\n            allVariables[stackName][variable.name] = variableShowUp.length;\r\n            variableShowUp.push({\r\n              function: stackName,\r\n              name: variable.name,\r\n              steps: [this.count],\r\n              color: '',\r\n              visible: true,\r\n            });\r\n          }\r\n        });\r\n      });\r\n      const currentClassName = currentExpr.constructor.name;\r\n      if (currentExpr instanceof UniBinOp) {\r\n        const res = this.binOp(currentExpr);\r\n        if (res) {\r\n          const stack = stacks[stacks.length - 1];\r\n          const variableName = res;\r\n          variableShowUp[allVariables[stack.name.split('.')[0]][variableName]][\r\n            'steps'\r\n          ].push(this.count);\r\n        }\r\n      }\r\n      let lastExpr = null;\r\n      if (this.count > 0) {\r\n        lastExpr = this.stateHistory[this.count - 1].getNextExpr();\r\n        const nextClassName = lastExpr.constructor.name;\r\n        if ((lastExpr instanceof UniBinOp) && currentClassName !== 'UniBinOp') {\r\n          const res = this.binOp(lastExpr);\r\n          if (res) {\r\n            const stack = stacks[stacks.length - 1];\r\n            const variableName = res;\r\n            variableShowUp[\r\n              allVariables[stack.name.split('.')[0]][variableName]\r\n            ]['steps'].push(this.count + 1);\r\n          }\r\n        } else if (\r\n          nextClassName === 'UniReturn' &&\r\n          currentClassName === 'UniVariableDec'\r\n        ) {\r\n          const stack = stacks[stacks.length - 1];\r\n          variableShowUp[\r\n            allVariables[stack.name.split('.')[0]][this.uniReturn(currentExpr)]\r\n          ]['steps'].push(this.count);\r\n        } else if (\r\n          nextClassName === 'UniReturn' &&\r\n          (currentExpr instanceof UniBinOp)\r\n        ) {\r\n          const res = this.returnBinOp(currentExpr);\r\n          if (res) {\r\n            const stack = stacks[stacks.length - 1];\r\n            const variableName = res;\r\n            variableShowUp[\r\n              allVariables[stack.name.split('.')[0]][variableName]\r\n            ]['steps'].push(this.count);\r\n          }\r\n        }\r\n      }\r\n\r\n      ret = this.Step(sourcecode);\r\n    }\r\n\r\n    // console.log(this.stateHistory);\r\n\r\n    const step = this.count + 1;\r\n    this.isExecuting = true;\r\n    const res = this.BackAll(sourcecode);\r\n    res.stepCount = step;\r\n    res.linesShowUp = linesShowUp;\r\n    res.allVariables = allVariables;\r\n    res.variableShowUp = variableShowUp;\r\n    return res;\r\n  }\r\n\r\n  private binOp(uniBinOp: UniBinOp) :string|false {\r\n    const operator = uniBinOp.operator;\r\n    const right: UniBinOp | UniExpr | UniMethodCall = uniBinOp.right;\r\n    if (right instanceof UniMethodCall) {\r\n      if (right.methodName.name !== 'malloc') {\r\n        return false;\r\n      }\r\n    }\r\n    else if (right instanceof UniBinOp) {\r\n      return this.binOp(right);\r\n    }\r\n\r\n    if (operator !== '=') {\r\n      const left = uniBinOp.left;\r\n\r\n      if (left instanceof UniMethodCall) {\r\n        return false;\r\n      }\r\n      else if (left instanceof UniBinOp) {\r\n        return this.binOp(left);\r\n      }\r\n    }\r\n    let left = uniBinOp.left;\r\n    if (!left) {\r\n      return false;\r\n    }\r\n    while (!(left instanceof UniIdent)) {\r\n      if (left instanceof UniUnaryOp) {\r\n        left = left.expr;\r\n      } else if (left instanceof UniBinOp) {\r\n        left = left.left;\r\n      }\r\n    }\r\n    return left.name;\r\n  }\r\n\r\n  private uniReturn(expr: any) {\r\n    return expr.variables[0].name;\r\n  }\r\n  private returnBinOp(uniBinOp: UniBinOp) {\r\n    const operator = uniBinOp.operator;\r\n    if (operator === '=') {\r\n      const left: any = uniBinOp.left;\r\n      return left.name;\r\n    }\r\n    return false;\r\n  }\r\n\r\n  private Stop(sourcecode: string) {\r\n    if (this.timer !== null) {\r\n      clearTimeout(this.timer);\r\n    }\r\n    this.interpreter = null;\r\n    const ret: Response = {\r\n      sourcecode,\r\n      execState: undefined,\r\n      debugState: 'Stop',\r\n      output: '',\r\n      step: this.count,\r\n      errors: [],\r\n      files: this.files,\r\n    };\r\n    return ret;\r\n  }\r\n\r\n  private BackAll(sourcecode: string) {\r\n    this.count = 0;\r\n    const execState = this.stateHistory[this.count];\r\n    const output = this.outputsHistory[this.count];\r\n    const ret: Response = {\r\n      execState,\r\n      output,\r\n      sourcecode,\r\n      debugState: 'First',\r\n      step: this.count,\r\n      errors: [],\r\n      files: this.files,\r\n    };\r\n    return ret;\r\n  }\r\n\r\n  private StepBack(sourcecode: string) {\r\n    if (1 <= this.count) {\r\n      this.count -= 1;\r\n    }\r\n    const execState = this.stateHistory[this.count];\r\n    let lastState = undefined;\r\n    if (this.count > 0) {\r\n      lastState = this.stateHistory[this.count - 1];\r\n    }\r\n    const output = this.outputsHistory[this.count];\r\n    const ret: Response = {\r\n      execState,\r\n      lastState: lastState,\r\n      output,\r\n      sourcecode,\r\n      debugState: 'Debugging',\r\n      step: this.count,\r\n      errors: [],\r\n      files: this.files,\r\n    };\r\n    return ret;\r\n  }\r\n\r\n  private Step(sourcecode: string, stdinText?: string) {\r\n    ++this.count;\r\n    if (this.count < this.stateHistory.length) {\r\n      const execState = this.stateHistory[this.count];\r\n      let lastState = undefined;\r\n      if (this.count > 0) {\r\n        lastState = this.stateHistory[this.count - 1];\r\n      }\r\n      const output = this.outputsHistory[this.count];\r\n      const ret: Response = {\r\n        execState,\r\n        lastState: lastState,\r\n        output,\r\n        sourcecode,\r\n        debugState: 'Debugging',\r\n        step: this.count,\r\n        errors: [],\r\n        files: this.files,\r\n      };\r\n      return ret;\r\n    }\r\n    if (this.isExecuting) {\r\n      if (this.interpreter === null) {\r\n        throw new Error('engine is not found');\r\n      }\r\n      if (this.interpreter.getIsWaitingForStdin()) {\r\n        if (stdinText !== undefined) {\r\n          this.interpreter.stdin(stdinText);\r\n        }\r\n        //  console.log(`stdin:${stdinText}`);\r\n      }\r\n      const state = this.interpreter.stepExecute();\r\n      // let maxSkip = 10;\r\n      // while (state.getCurrentExpr().codeRange === null && 0 < --maxSkip) {\r\n      //   state = this.engine.stepExecute();\r\n      // }\r\n      const execState = this.recordExecState(state);\r\n      const stdout = this.interpreter.getStdout();\r\n      //  console.log(`stdout:${stdout}`);\r\n      const output = this.recordOutputText(stdout);\r\n      //  console.log(`output:${output}`);\r\n      // let stateText = `Step:${this.count} | Value:${execState.getCurrentValue()}`;\r\n      let debugState: DEBUG_STATE = 'Debugging';\r\n      if (this.interpreter.getIsWaitingForStdin()) {\r\n        debugState = 'stdin';\r\n      } else if (!this.interpreter.isStepExecutionRunning()) {\r\n        debugState = 'EOF';\r\n        this.isExecuting = false;\r\n      }\r\n      const ret: Response = {\r\n        execState,\r\n        lastState: this.stateHistory[this.stateHistory.length - 2],\r\n        output,\r\n        sourcecode,\r\n        debugState,\r\n        step: this.count,\r\n        errors: [],\r\n        files: this.files,\r\n      };\r\n      return ret;\r\n    }\r\n    this.count = this.stateHistory.length - 1;\r\n    const output = this.outputsHistory[this.count];\r\n    const ret: Response = {\r\n      output,\r\n      sourcecode,\r\n      execState: this.getLastHistory(),\r\n      debugState: 'EOF',\r\n      step: this.count,\r\n      errors: [],\r\n      files: this.files,\r\n    };\r\n    return ret;\r\n  }\r\n\r\n  private StepAll(sourcecode: string, lineNumOfBreakpoint?: number[]) {\r\n    const currentCount = this.count;\r\n    const loop = () => {\r\n      const ret: Response = this.Step(sourcecode);\r\n      if (ret.debugState === 'EOF') {\r\n        signal('EOF', ret);\r\n        return;\r\n      } else if (ret.debugState === 'stdin') {\r\n        signal('stdin', ret);\r\n        return;\r\n      } else if (typeof lineNumOfBreakpoint !== 'undefined') {\r\n        if (typeof ret.execState !== 'undefined') {\r\n          const nextExpr = ret.execState.getNextExpr();\r\n          const {codeRange} = nextExpr;\r\n          if (codeRange) {\r\n            if (lineNumOfBreakpoint.includes(codeRange.begin.y - 1)) {\r\n              signal('Breakpoint', ret);\r\n              return;\r\n            }\r\n          }\r\n        }\r\n      }\r\n      this.timer = global.setTimeout(loop.bind(this), 1);\r\n    };\r\n    loop();\r\n    const execState = this.stateHistory[currentCount];\r\n    const output = this.outputsHistory[currentCount];\r\n    const debugState: DEBUG_STATE = 'Executing';\r\n    return {\r\n      execState,\r\n      output,\r\n      sourcecode,\r\n      debugState,\r\n      step: currentCount,\r\n      errors: [],\r\n      files: this.files,\r\n    };\r\n  }\r\n\r\n  private JumpTo(sourcecode: string, step: number) {\r\n    this.count = step;\r\n    const execState = this.stateHistory[this.count];\r\n    let lastState = undefined;\r\n    if (this.count > 0) {\r\n      lastState = this.stateHistory[this.count - 1];\r\n    }\r\n    const output = this.outputsHistory[this.count];\r\n    const ret: Response = {\r\n      execState,\r\n      lastState: lastState,\r\n      output,\r\n      sourcecode,\r\n      debugState: 'Debugging',\r\n      step: this.count,\r\n      errors: [],\r\n      files: this.files,\r\n    };\r\n    return ret;\r\n  }\r\n\r\n  private async Exec(\r\n    sourcecode: string,\r\n    progLang?: string,\r\n    lineNumOfBreakpoint?: number[]\r\n  ) {\r\n    await this.Start(sourcecode, progLang);\r\n    return this.StepAll(sourcecode, lineNumOfBreakpoint);\r\n  }\r\n\r\n  private async SyntaxCheck(code: string, progLang?: string) {\r\n    await this.dynamicLoadInterpreter(progLang);\r\n    if (this.interpreter === null) {\r\n      throw new Error('Interpreter is not found');\r\n    }\r\n    const errors: SyntaxErrorData[] = this.interpreter.checkSyntaxError(code);\r\n    const ret: Response = {\r\n      errors,\r\n      sourcecode: code,\r\n      execState: undefined,\r\n      debugState: 'Stop',\r\n      output: '',\r\n      step: this.count,\r\n      files: this.files,\r\n    };\r\n    return ret;\r\n  }\r\n\r\n  private recordOutputText(output: string) {\r\n    this.outputsHistory.push(output);\r\n    return output;\r\n  }\r\n\r\n  private recordExecState(execState: ExecState) {\r\n    this.stateHistory.push(execState);\r\n    return execState;\r\n  }\r\n\r\n  private getLastHistory() {\r\n    return this.stateHistory[this.stateHistory.length - 1];\r\n  }\r\n}\r\n\r\nexport const server = new Server();\r\n","import React from 'react';\r\nimport './style.scss';\r\n\r\ninterface PanelHeaderProps {\r\n    title: string;\r\n}\r\n\r\nfunction PanelHeader({title}: PanelHeaderProps) {\r\n  return (\r\n      <div className='panel-header'>\r\n        <div className='text-title'>{title}</div>\r\n      </div>\r\n  );\r\n}\r\n\r\nexport default PanelHeader;\r\n","// tslint:disable:max-line-length\nexport default {\n  howToUse: '使い方',\n  close: '閉じる',\n  debugStart: '現在のプログラムで再ステップ実行',\n  debugStop: '実行終了',\n  debugBackAll: '実行中のプログラムを最初のステップに戻す',\n  debugStepBack: '実行中のプログラムを1ステップ戻す',\n  debugStep: 'プログラムを1ステップ実行する',\n  debugStepAll: 'プログラムを最後まで実行する',\n  changeThemedark: 'ダークテーマに切り替える',\n  changeThemelight: 'ライトテーマに切り替える',\n  zoomOut: 'エディタのフォントサイズを小さくする',\n  zoomIn: 'エディタのフォントサイズを大きくする',\n  zoomReset: 'エディタのフォントサイズをリセットする',\n  howToText: [\n    '下のエディタにプログラムを書き、上のボタンを押すことで可視化実行ができます。',\n    '(マウスカーソルを重ねるとで各ボタンの説明が表示されます。)',\n  ],\n  uploadFile: 'アップロードされたファイルはここに表示されます。',\n  warning: '警告!',\n  editInDebug: `実行中のソースコードが編集されました。\nプログラムの挙動には反映されませんが、\nコードのハイライトが等がずれる恐れがあります。`,\n  continueDebug: '続行',\n  restart: '再実行',\n  rememberCommand: 'この選択を記憶する',\n  sourceCodeCcpp: String.raw`#include<stdio.h>\nint recursiveToThree(int n){\n  printf(\"%d th\\n\", n + 1);\n  if(n < 3){\n    int r = recursiveToThree(n + 1);\n    n = r;\n  }\n  return n;\n}\nint main(){\n  int n = 0;//変数定義\n\n  n = recursiveToThree(0);//再帰関数呼出\n\n  int arr[5] = {1, 2, 3};//配列変数\n\n  int* ptr = &arr[2];//ポインタ変数\n  *ptr = 5;\n\n  //動的メモリ確保\n  int* d_arry = malloc(sizeof(int) * 3);\n\n  //二次元ポインタ配列の動的メモリ配列\n  int* pd_arr[2];\n  pd_arr[0] = malloc(sizeof(int) * 2);\n  pd_arr[1] = malloc(sizeof(int) * 2);\n\n  free(pd_arr[0]);//メモリの解放\n\n  printf(\"Hello,world!\\n\");//標準出力\n\n\n  return 0;\n}`,\n  sourceCodeJava: String.raw`import java.util.*;\npublic class Main {\n  public static void main(String[] args) {\n    Scanner sc = new Scanner(System.in);\n    while (true) {\n      int n = sc.nextInt();\n      int r = sc.nextInt();\n      if (n == 0) {\n        break;\n      }\n      int[] a = new int[n];\n      int[] b = new int[n];\n      for (int i = 0; i < n; i++) {\n        a[i] = n - i;\n      }\n      for (int i = 0; i < r; i++) {\n        int p = sc.nextInt();\n        int c = sc.nextInt();\n        p--;\n        for (int j = 0; j < c; j++) {\n          b[j] = a[p + j];\n        }\n        for (int j = 0; j < p; j++) {\n          b[c + j] = a[j];\n        }\n        for (int j = 0; j < p + c; j++) {\n          a[j] = b[j];\n        }\n      }\n      System.out.println(a[0]);\n    }\n  }\n}`,\n  sourceCodePython: String.raw`while True:\n  n, r = map(int, input().split())\n  if n == 0:\n    break\n  a = [0] * n\n  b = [0] * n\n  for i in range(n):\n    a[i] = b[i] = n - i\n  for i in range(r):\n    p, c = map(int, input().split())\n    p = p - 1\n    for j in range(c):\n      b[j] = a[p + j]\n    for j in range(p):\n      b[c + j] = a[j]\n    for j in range(p + c):\n      a[j] = b[j]\n  print(a[0])\n`,\n};\n","// tslint:disable:max-line-length\r\nexport default {\r\n  howToUse: 'How to use',\r\n  close: 'Close',\r\n  debugStart: 'restart step execution',\r\n  debugStop: 'stop execution',\r\n  debugBackAll: 'go backward for all steps',\r\n  debugStepBack: 'step backward',\r\n  debugStep: 'step forward',\r\n  debugStepAll: 'execute all step',\r\n  changeThemedark: 'change to dark theme',\r\n  changeThemelight: 'change to light theme',\r\n  zoomOut: 'change the font size to smaller.',\r\n  zoomIn: 'change the font size to larger.',\r\n  zoomReset: 'reset the font size',\r\n  howToText: [\r\n    'PVC.js has five GUI components:',\r\n    '(1) editor, (2) execution controller, buttons, (3) I/O window, (4) canvas for visualization, and (5) file upload form.',\r\n    'Users can write source code in the editor. Clicking on the execution control buttons initiates the step execution.',\r\n    'The I/O window shows the content of the standard output written by the program (e.g., printf) and accepts standard input (e.g., scanf).',\r\n    \"Canvas shows the program's execution status using tables and figures.\",\r\n    'PVC.js adaptively changes its layout to correspond with the size of the browser window.',\r\n  ],\r\n  uploadFile: 'The uploaded file will be displayed here.',\r\n  warning: 'Warning!',\r\n  editInDebug: `The source code being executed has been edited.\r\nProgram behavior is not affected by changing code. \r\nHowever, the highlight of the code may be out of place.`,\r\n  continueDebug: 'Continue',\r\n  restart: 'Restart',\r\n  rememberCommand: 'Remember this choice',\r\n//   sourceCodeCcpp: String.raw`#include<stdio.h>\r\n// int recursiveToThree(int n){\r\n//   printf(\"%d th\\n\", n + 1);\r\n//   if(n < 3){\r\n//       int r = recursiveToThree(n + 1);\r\n//       n = r;\r\n//   }\r\n//   return n;\r\n// }\r\n\r\n// static int a = 1;\r\n// int b = 2;\r\n\r\n// int main(){\r\n//   int n = 0;//variable declaration\r\n\r\n//   n = recursiveToThree(0);//recursive function\r\n\r\n//   int arr[5] = {1, 2, 3};//array variable\r\n\r\n//   int* ptr = &arr[2];//pointer variable\r\n//   *ptr = 5;\r\n\r\n//   //dynamic memory allocation\r\n//   int* d_arry = malloc(sizeof(int) * 3);\r\n\r\n//   //two-dimensional dynamic array\r\n//   int* pd_arr[2];\r\n//   pd_arr[0] = malloc(sizeof(int) * 2);\r\n//   pd_arr[1] = malloc(sizeof(int) * 2);\r\n\r\n//   printf(\"Hello,world!\\n\");//standard output\r\n\r\n//   free(pd_arr[0]);//memory leak\r\n\r\n//   return 0;\r\n// }`\r\nsourceCodeCcpp: String.raw`#include<stdio.h>\r\n\r\nint main() {\r\n  int fahr, celsius;\r\n  int lower, upper, step;\r\n  lower = 0;\r\n  upper = 300;\r\n  step = 20;\r\n  \r\n  fahr = lower;\r\n  while (fahr <= upper) {\r\n    celsius = 5 * (fahr-32) / 9;\r\n    printf(\"%d\\t%d\\n\", fahr, celsius);\r\n    fahr = fahr + step;\r\n  }\r\n}\r\n`\r\n,\r\n  sourceCodeJava: String.raw`import java.util.*;\r\npublic class Main {\r\n  public static void main(String[] args) {\r\n    Scanner sc = new Scanner(System.in);\r\n    while (true) {\r\n      int n = sc.nextInt();\r\n      int r = sc.nextInt();\r\n      if (n == 0) {\r\n        break;\r\n      }\r\n      int[] a = new int[n];\r\n      int[] b = new int[n];\r\n      for (int i = 0; i < n; i++) {\r\n        a[i] = n - i;\r\n      }\r\n      for (int i = 0; i < r; i++) {\r\n        int p = sc.nextInt();\r\n        int c = sc.nextInt();\r\n        p--;\r\n        for (int j = 0; j < c; j++) {\r\n          b[j] = a[p + j];\r\n        }\r\n        for (int j = 0; j < p; j++) {\r\n          b[c + j] = a[j];\r\n        }\r\n        for (int j = 0; j < p + c; j++) {\r\n          a[j] = b[j];\r\n        }\r\n      }\r\n      System.out.println(a[0]);\r\n    }\r\n  }\r\n}`,\r\n  sourceCodePython: String.raw`while True:\r\n  n, r = map(int, input().split())\r\n  if n == 0:\r\n    break\r\n  a = [0] * n\r\n  b = [0] * n\r\n  for i in range(n):\r\n    a[i] = b[i] = n - i\r\n  for i in range(r):\r\n    p, c = map(int, input().split())\r\n    p = p - 1\r\n    for j in range(c):\r\n      b[j] = a[p + j]\r\n    for j in range(p):\r\n      b[c + j] = a[j]\r\n    for j in range(p + c):\r\n      a[j] = b[j]\r\n  print(a[0])\r\n`,\r\n};\r\n","import ja from './ja';\nimport en from './en';\nconst translate = (lang: string, key: string) => {\n  if (lang === 'ja') {\n    return (ja as any)[key];\n  }\n  return (en as any)[key];\n};\nexport default translate;\n","import * as React from 'react';\r\nimport Alert from 'react-bootstrap/lib/Alert';\r\nimport Button from 'react-bootstrap/lib/Button';\r\nimport Modal from 'react-bootstrap/lib/Modal';\r\nimport Checkbox from 'react-bootstrap/lib/Checkbox';\r\n// tslint:disable-next-line:import-name\r\nimport AceEditor from 'react-ace';\r\n\r\nimport 'ace-builds/src-min-noconflict/mode-c_cpp';\r\nimport 'ace-builds/src-min-noconflict/snippets/c_cpp';\r\nimport 'ace-builds/src-min-noconflict/theme-textmate';\r\nimport 'ace-builds/src-min-noconflict/theme-monokai';\r\nimport 'ace-builds/src-min-noconflict/ext-language_tools';\r\nimport * as d3 from 'd3';\r\n\r\nimport './editor.scss';\r\nimport { signal, slot, remove } from '../emitter';\r\nimport {\r\n  Request,\r\n  CONTROL_EVENT,\r\n  server,\r\n  Response,\r\n  DEBUG_STATE,\r\n} from '../server';\r\nimport translate from '../../locales/translate';\r\nimport { ExecState } from 'unicoen.ts/dist/interpreter/Engine/ExecState';\r\nimport { LangProps, ProgLangProps, Theme } from '../Props';\r\nimport { SyntaxErrorData } from 'unicoen.ts/dist/interpreter/mapper/SyntaxErrorData';\r\n\r\ntype Props = LangProps & ProgLangProps;\r\ninterface State {\r\n  fontSize: number;\r\n  showAlert: boolean;\r\n  theme: Theme;\r\n}\r\n\r\ninterface TextRectangle {\r\n  left: number;\r\n  top: number;\r\n  width: number;\r\n  height: number;\r\n}\r\n\r\ninterface GutterMousedownEventTarget\r\n  extends React.BaseHTMLAttributes<HTMLElement> {\r\n  getBoundingClientRect: () => TextRectangle;\r\n}\r\ninterface GutterMousedownEvent extends React.MouseEvent {\r\n  domEvent: React.MouseEvent<GutterMousedownEventTarget>;\r\n  editor: AceAjax.Editor;\r\n  getDocumentPosition: () => AceAjax.Position;\r\n  stop: () => void;\r\n}\r\n\r\nexport default class Editor extends React.Component<Props, State> {\r\n  private sentSourcecode: string;\r\n  private preventedCommand: CONTROL_EVENT = 'Stop';\r\n  private controlEvent: CONTROL_EVENT = 'Stop';\r\n  private sourcecode: string;\r\n  private ace: any = null;\r\n  private editorRef = React.createRef<any>();\r\n  private lineNumOfBreakpoint: number[] = [];\r\n  private isDebugging = false;\r\n  private checkbox: HTMLInputElement | null = null;\r\n  private noAlert = false;\r\n  private highlightIds: number[] = [];\r\n  constructor(props: Props) {\r\n    super(props);\r\n    this.state = {\r\n      fontSize: 14,\r\n      showAlert: false,\r\n      theme: 'light',\r\n    };\r\n    const { lang, progLang } = props;\r\n    this.sourcecode = translate(lang, this.sourceCodeKey(progLang));\r\n    this.sentSourcecode = '';\r\n\r\n    this.hideAlert = this.hideAlert.bind(this);\r\n    this.setHighlightOnCode = this.setHighlightOnCode.bind(this);\r\n  }\r\n\r\n  componentDidMount() {\r\n    const progLang = this.props.progLang;\r\n    slot('debug', (controlEvent: CONTROL_EVENT, stdinText?: string) => {\r\n      this.send(controlEvent, stdinText);\r\n      if (controlEvent === 'StepBack' || controlEvent === 'BackAll') {\r\n        sessionStorage.setItem('exec', 'step');\r\n      } else {\r\n        sessionStorage.setItem('exec', 'debug');\r\n      }\r\n    });\r\n    slot('jumpTo', (step: number) => {\r\n      const request: Request = {\r\n        sourcecode: this.sourcecode,\r\n        controlEvent: 'JumpTo',\r\n        progLang,\r\n        step: step,\r\n      };\r\n      server\r\n        .send(request)\r\n        .then((response: Response) => {\r\n          this.recieve(response);\r\n        })\r\n        .catch((e) => {\r\n          alert('constructor: ' + e);\r\n        });\r\n      sessionStorage.setItem('exec', 'step');\r\n    });\r\n    slot('EOF', (response: Response) => {\r\n      this.recieve(response);\r\n    });\r\n    slot('stdin', (response: Response) => {\r\n      this.recieve(response);\r\n    });\r\n    slot('Breakpoint', (response: Response) => {\r\n      this.recieve(response);\r\n    });\r\n    slot('zoom', (command: string) => {\r\n      if (command === 'In') {\r\n        this.setState({ fontSize: this.state.fontSize + 1 });\r\n      } else if (command === 'Out') {\r\n        this.setState({ fontSize: Math.max(this.state.fontSize - 1, 10) });\r\n      } else if (command === 'Reset') {\r\n        this.setState({ fontSize: 14 });\r\n      }\r\n    });\r\n    slot('changeTheme', async (theme: Theme) => {\r\n      this.setState({ theme });\r\n    });\r\n\r\n    // Enable breakpoint\r\n    const editor: AceAjax.Editor = this.editorRef.current.editor;\r\n    editor.on('keydown', (e: any) => {\r\n      // console.log(e);\r\n    });\r\n    editor.on('guttermousedown', (e: GutterMousedownEvent) => {\r\n      const AceRange = this.ace.acequire('ace/range').Range;\r\n      const target: GutterMousedownEventTarget = e.domEvent.currentTarget;\r\n      if (\r\n        typeof target.className !== 'undefined' &&\r\n        target.className.indexOf('ace_gutter') === -1\r\n      ) {\r\n        return;\r\n      }\r\n      if (!editor.isFocused()) {\r\n        return;\r\n      }\r\n      if (e.clientX > 25 + target.getBoundingClientRect().left) return;\r\n\r\n      const row: number = e.getDocumentPosition().row;\r\n\r\n      const session: AceAjax.IEditSession = e.editor.getSession();\r\n      if (this.lineNumOfBreakpoint.includes(row)) {\r\n        session.clearBreakpoint(row);\r\n        //signal('cancelStatementHighlight', row);\r\n        //const line = d3.selectAll('.ace_line').filter((d, i) => i === row);\r\n        //line.classed('highlight' + row, false);\r\n        this.lineNumOfBreakpoint = this.lineNumOfBreakpoint.filter(\r\n          (n) => n !== row\r\n        );\r\n      } else {\r\n        session.setBreakpoint(row, 'ace_breakpoint');\r\n        this.lineNumOfBreakpoint.push(row);\r\n        //const line = d3.selectAll('.ace_line').filter((d, i) => i === row);\r\n        //line.classed('highlight' + row, true);\r\n        //signal('statementHighlight', row);\r\n      }\r\n      e.stop();\r\n    });\r\n  }\r\n\r\n  componentDidUpdate() {\r\n    d3.selectAll('.ace_line')\r\n      // .filter((d, i) => inArray(i, this.lineNumOfBreakpoint) >= 0)\r\n      .attr('class', (d, i) => {\r\n        return `ace_line highlight${i}`;\r\n      });\r\n  }\r\n\r\n  componentWillUnmount() {\r\n    remove('debug');\r\n    remove('jumpTo');\r\n    remove('EOF');\r\n    remove('stdin');\r\n    remove('Breakpoint');\r\n    remove('zoom');\r\n    remove('changeTheme');\r\n  }\r\n\r\n  sourceCodeKey = (prog: string) =>\r\n    'sourceCode' +\r\n    prog.replace(/_/g, '').replace(/^[a-z]/g, (char) => char.toUpperCase());\r\n\r\n  // UNSAFE_componentWillReceiveProps(nextProps: Props) {\r\n  //   const { lang, progLang } = this.props;\r\n  //   const nextLang = nextProps.lang;\r\n  //   const nextProgLang = nextProps.progLang;\r\n\r\n  //   if (nextLang !== lang) {\r\n  //     if (this.sourcecode === translate(lang, this.sourceCodeKey(progLang))) {\r\n  //       this.sourcecode = translate(nextLang, this.sourceCodeKey(nextProgLang));\r\n  //     }\r\n  //   } else if (nextProgLang !== progLang) {\r\n  //     this.sourcecode = translate(nextLang, this.sourceCodeKey(nextProgLang));\r\n  //   }\r\n  // }\r\n\r\n  send(controlEvent: CONTROL_EVENT, stdinText?: string) {\r\n    const sourcecode = this.sourcecode;\r\n    const lineNumOfBreakpoint = this.lineNumOfBreakpoint;\r\n    const progLang = this.props.progLang;\r\n    const request: Request = {\r\n      sourcecode,\r\n      controlEvent,\r\n      stdinText,\r\n      lineNumOfBreakpoint,\r\n      progLang,\r\n    };\r\n    this.controlEvent = controlEvent;\r\n    if (controlEvent === 'SyntaxCheck') {\r\n      server\r\n        .send(request)\r\n        .then((response: Response) => {\r\n          const { errors } = response;\r\n          this.setSyntaxError(errors);\r\n        })\r\n        .catch((e) => {\r\n          alert('SyntaxCheck: ' + e);\r\n        });\r\n    } else if (\r\n      !this.noAlert &&\r\n      this.isDebugging &&\r\n      (controlEvent === 'BackAll' ||\r\n        controlEvent === 'StepBack' ||\r\n        controlEvent === 'Step' ||\r\n        controlEvent === 'StepAll') &&\r\n      sourcecode !== this.sentSourcecode\r\n    ) {\r\n      this.preventedCommand = controlEvent;\r\n      this.setState({ showAlert: true });\r\n    } else {\r\n      this.setState({ showAlert: false });\r\n      server\r\n        .send(request)\r\n        .then((response: Response) => {\r\n          this.recieve(response);\r\n        })\r\n        .catch((e) => {\r\n          alert('Other controlEvent' + e);\r\n        });\r\n    }\r\n  }\r\n\r\n  recieve(response: Response) {\r\n    try {\r\n      const {\r\n        debugState,\r\n        execState,\r\n        output,\r\n        step,\r\n        sourcecode,\r\n        files,\r\n        lastState,\r\n        stepCount,\r\n        linesShowUp,\r\n        allVariables,\r\n        variableShowUp,\r\n      } = response;\r\n      this.isDebugging = debugState !== 'Stop';\r\n      this.sentSourcecode = sourcecode;\r\n      if (debugState === 'Executing') {\r\n        return;\r\n      }\r\n      if (debugState === 'First') {\r\n        signal('init', stepCount, linesShowUp, allVariables, variableShowUp);\r\n      }\r\n      if (this.controlEvent !== 'JumpTo') {\r\n        signal('changeStep', step);\r\n      }\r\n      signal('changeState', debugState, step);\r\n      signal('changeOutput', output);\r\n      signal('draw', execState, lastState);\r\n      signal('files', files);\r\n      this.setHighlightOnCode(debugState, execState);\r\n    } catch (e) {\r\n      alert('recieve: ' + e);\r\n    }\r\n  }\r\n\r\n  setHighlightOnCode(debugState: DEBUG_STATE, execState?: ExecState) {\r\n    if (debugState === 'Stop') {\r\n      return;\r\n    }\r\n    if (typeof execState === 'undefined') {\r\n      return;\r\n    }\r\n    const codeRange = execState.getNextExpr().codeRange;\r\n    const AceRange = this.ace.acequire('ace/range').Range;\r\n    const editor: AceAjax.Editor = this.editorRef.current.editor;\r\n    if (codeRange) {\r\n      const range: AceAjax.Range = new AceRange(\r\n        codeRange.begin.y - 1,\r\n        codeRange.begin.x,\r\n        codeRange.end.y - 1,\r\n        codeRange.end.x\r\n      );\r\n      editor.resize(true);\r\n      // tslint:disable-next-line:no-empty\r\n      editor.scrollToLine(codeRange.begin.y, true, true, () => {});\r\n      if (debugState === 'EOF') {\r\n        editor.getSelection().setSelectionRange(new AceRange(-1, 0, -1, 1));\r\n      } else {\r\n        editor.getSelection().setSelectionRange(range);\r\n      }\r\n    }\r\n  }\r\n\r\n  setSyntaxError(errors: SyntaxErrorData[]) {\r\n    const editor: AceAjax.Editor = this.editorRef.current.editor;\r\n    const annotations = errors.map((error: SyntaxErrorData) => {\r\n      return {\r\n        row: error.line - 1,\r\n        column: error.charPositionInLine - 1,\r\n        text: error.getMsg(),\r\n        type: 'error',\r\n      };\r\n    });\r\n    const session: AceAjax.IEditSession = editor.getSession();\r\n    session.setAnnotations(annotations);\r\n    for (const highlightId of this.highlightIds) {\r\n      session.removeMarker(highlightId);\r\n    }\r\n    this.highlightIds = [];\r\n    for (const annotation of annotations) {\r\n      const range = (session as any).highlightLines(\r\n        annotation.row,\r\n        annotation.row,\r\n        'error_line'\r\n      );\r\n      this.highlightIds.push(range.id);\r\n    }\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <React.Fragment>\r\n        {this.state.showAlert ? this.renderAlert() : null} {this.renderEditor()}\r\n      </React.Fragment>\r\n    );\r\n  }\r\n\r\n  renderEditor() {\r\n    const mode = this.props.progLang;\r\n    const { fontSize, theme } = this.state;\r\n    return (\r\n      <AceEditor\r\n        ref={this.editorRef}\r\n        mode={mode}\r\n        theme=\"textmate\"\r\n        value={this.sourcecode}\r\n        name=\"sourcecode\"\r\n        fontSize={fontSize}\r\n        tabSize={2}\r\n        editorProps={{\r\n          $blockScrolling: Infinity,\r\n        }}\r\n        setOptions={{\r\n          enableBasicAutocompletion: true,\r\n          enableLiveAutocompletion: true,\r\n          showLineNumbers: true,\r\n          readOnly: false,\r\n        }}\r\n        style={{ height: '100%', width: '100%' }}\r\n        className=\"editorMain\"\r\n        onChange={(text: string) => {\r\n          this.sourcecode = text;\r\n          const delaySyntaxCheck = (code: string) => {\r\n            if (code === this.sourcecode) {\r\n              signal('debug', 'SyntaxCheck');\r\n            }\r\n          };\r\n          setTimeout(() => delaySyntaxCheck(text), 1000);\r\n        }}\r\n        onBeforeLoad={(ace) => (this.ace = ace)}\r\n      />\r\n    );\r\n  }\r\n\r\n  hideAlert() {\r\n    this.setState({ showAlert: false });\r\n  }\r\n\r\n  renderAlert() {\r\n    const { lang } = this.props;\r\n    const warning = translate(lang, 'warning');\r\n    const editInDebug = translate(lang, 'editInDebug');\r\n    const continueDebug = translate(lang, 'continueDebug');\r\n    const restart = translate(lang, 'restart');\r\n    const rememberCommand = translate(lang, 'rememberCommand');\r\n    return (\r\n      <Modal.Dialog\r\n        className=\"modal-container\"\r\n        aria-labelledby=\"ModalHeader\"\r\n        // animation={true}\r\n        tabIndex={-1}\r\n        role=\"dialog\"\r\n      >\r\n        <Modal.Header closeButton>\r\n          <Modal.Title>{warning}</Modal.Title>\r\n        </Modal.Header>\r\n        <Alert bsStyle=\"danger\">\r\n          <p>{editInDebug}</p>\r\n        </Alert>\r\n        <Modal.Footer>\r\n          <Button\r\n            bsStyle=\"danger\"\r\n            onClick={() => {\r\n              this.isDebugging = false;\r\n              if (this.checkbox !== null) {\r\n                this.noAlert = this.checkbox.checked;\r\n              }\r\n              signal('debug', this.preventedCommand);\r\n            }}\r\n          >\r\n            {continueDebug}\r\n          </Button>\r\n          <Button\r\n            onClick={() => {\r\n              this.isDebugging = false;\r\n              if (this.checkbox !== null) {\r\n                this.noAlert = this.checkbox.checked;\r\n              }\r\n              signal('debug', 'Start');\r\n            }}\r\n          >\r\n            {restart}\r\n          </Button>\r\n          <Checkbox\r\n            validationState=\"warning\"\r\n            inputRef={(ref) => (this.checkbox = ref)}\r\n          >\r\n            {rememberCommand}\r\n          </Checkbox>\r\n        </Modal.Footer>\r\n      </Modal.Dialog>\r\n    );\r\n  }\r\n}\r\n","import React from 'react';\r\nimport './style.scss';\r\nimport PanelHeader from '../../components/panelHeader/PanelHeader';\r\nimport Editor from '../../components/editor/Editor';\r\n\r\nfunction EditorPanel() {\r\n  return (\r\n    <div id='EditorPanel' className='panel'>\r\n      <PanelHeader title='Source Editor' />\r\n      <div className='editor-area'>\r\n        <Editor lang='en' progLang='c_cpp'/>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default EditorPanel;\r\n","import * as React from 'react';\r\n// tslint:disable-next-line:import-name\r\nimport AceEditor from 'react-ace';\r\n\r\nimport 'ace-builds/src-min-noconflict/mode-text';\r\nimport 'ace-builds/src-min-noconflict/theme-textmate';\r\nimport 'ace-builds/src-min-noconflict/theme-monokai';\r\n\r\nimport './console.scss';\r\nimport { slot, signal, remove } from '../emitter';\r\nimport { LangProps } from '../Props';\r\nimport { DEBUG_STATE } from '../server';\r\ntype Props = LangProps;\r\n\r\ninterface State {\r\n  output: string;\r\n  isReadOnly: boolean;\r\n}\r\n\r\nexport default class Console extends React.Component<Props, State> {\r\n  constructor(props: Props) {\r\n    super(props);\r\n    this.state = { output: '', isReadOnly: true };\r\n    this.onChange = this.onChange.bind(this);\r\n  }\r\n\r\n  componentDidMount() {\r\n    slot('changeOutput', (output: string) => {\r\n      this.setState({ output });\r\n    });\r\n    slot('changeState', async (debugState: DEBUG_STATE) => {\r\n      if (debugState === 'stdin') {\r\n        this.setState({ isReadOnly: false });\r\n      }\r\n    });\r\n  }\r\n\r\n  componentWillUnmount() {\r\n    remove('changeOutput');\r\n    remove('changeState');\r\n  }\r\n\r\n  onChange(text: string) {\r\n    if (text.endsWith('\\n')) {\r\n      const sendText = text.slice(0, -1).replace(this.state.output, '');\r\n      this.setState({ output: text, isReadOnly: true });\r\n      signal('debug', 'Step', sendText);\r\n    }\r\n  }\r\n  render() {\r\n    return (\r\n      <AceEditor\r\n        mode=\"text\"\r\n        theme=\"light\"\r\n        value={this.state.output}\r\n        onChange={this.onChange}\r\n        name=\"IO\"\r\n        fontSize={14}\r\n        editorProps={{ $blockScrolling: true }}\r\n        setOptions={{\r\n          enableBasicAutocompletion: false,\r\n          enableLiveAutocompletion: false,\r\n          showLineNumbers: false,\r\n          readOnly: this.state.isReadOnly,\r\n          showGutter: false,\r\n        }}\r\n        style={{ height: '100%', width: '100%', marginTop: '.25rem'}}\r\n        className=\"console\"\r\n      />\r\n    );\r\n  }\r\n}\r\n","import React from 'react';\r\nimport './style.scss';\r\nimport Console from '../../components/console/Console';\r\nimport PanelHeader from '../../components/panelHeader/PanelHeader';\r\n\r\nfunction ConsolePanel() {\r\n  return (\r\n    <div id=\"ConsolePanel\" className=\"panel\">\r\n      <PanelHeader title=\"Console\" />\r\n      <div className=\"console-area\">\r\n        <Console lang=\"en\" />\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default ConsolePanel;\r\n","import React from 'react';\r\nimport { StatementHighlight } from '../../panels/timelinePanel/TimelinePanel';\r\n\r\ninterface StatementHighlightContentProps {\r\n  // changeStatementColor: (lineNumber: number, color: string) => void;\r\n  // statementHighlights: StatementHighlight[];\r\n  // changeStatementVisible: (lineNumber: number) => void;\r\n}\r\n\r\nfunction StatementHighlightContent(props: StatementHighlightContentProps) {\r\n  return <div>\r\n    \r\n    <div id='StatementHighlightContent'>\r\n      <div className='title'>Hightlight Statements</div>\r\n      <div></div>\r\n    </div>\r\n    </div>;\r\n}\r\n\r\nexport default StatementHighlightContent;\r\n","import React from 'react';\r\nimport { VariableHighlight } from '../../panels/timelinePanel/TimelinePanel';\r\n\r\ninterface VariableHighlightContentProps {\r\n  // variableHighlights: VariableHighlight[];\r\n  // options: any;\r\n  // addVariableHighlight: (funcName: string, varName: string) => void;\r\n  // changeVariableColor: (funcName: string, varName: string, color: string) => void;\r\n  // changeVariableVisible: (funcName: string, varName: string) => void;\r\n  // removeVariableHighlight: (funcName: string, varName: string) => void;\r\n}\r\n\r\nfunction VariableHighlightContent(props: VariableHighlightContentProps) {\r\n  return (\r\n    <div id=\"VariableHighlightContent\">\r\n      <div className=\"title\">Hightlight Variables</div>\r\n      <div></div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default VariableHighlightContent;\r\n","import * as React from 'react';\r\nimport {\r\n  StatementHighlight,\r\n  VariableHighlight,\r\n} from '../../panels/timelinePanel/TimelinePanel';\r\nimport { signal } from '../emitter';\r\n\r\ninterface Props {\r\n  step: number;\r\n  max: number;\r\n  scale: any;\r\n  width: number;\r\n  height: number;\r\n  // variableHighlights: VariableHighlight[];\r\n  // statementHighlights: StatementHighlight[];\r\n}\r\ninterface State {\r\n  dragging: boolean;\r\n  dragIndex?: any;\r\n}\r\n\r\nexport default class Slider extends React.Component<Props, State> {\r\n  componentDidMount() {\r\n    window.addEventListener('mouseup', this.dragEnd, false);\r\n  }\r\n\r\n  componentWillUnmount() {\r\n    window.removeEventListener('mouseup', this.dragEnd, false);\r\n  }\r\n\r\n  constructor(props: Props) {\r\n    super(props);\r\n    this.state = {\r\n      dragging: false,\r\n    };\r\n  }\r\n\r\n  dragStart = (e: any) => {\r\n    e.stopPropagation();\r\n    if (!this.state.dragging) {\r\n      this.setState(\r\n        {\r\n          dragging: true,\r\n        },\r\n        () => {\r\n          this.setState({ dragging: true });\r\n        }\r\n      );\r\n    }\r\n  };\r\n\r\n  dragEnd = (e: any) => {\r\n    e.stopPropagation();\r\n    this.setState(\r\n      {\r\n        dragging: false,\r\n      },\r\n      () => {\r\n        this.setState({ dragging: false });\r\n      }\r\n    );\r\n  };\r\n\r\n  dragFromSVG = (e: React.MouseEvent) => {\r\n    if (this.props.max === 0) return;\r\n    if (!this.state.dragging) {\r\n      let step = this.props.scale.invert(e.nativeEvent.offsetX);\r\n      step = Math.min(step, this.props.max);\r\n      step = Math.max(step, 0);\r\n      step = Math.round(step);\r\n      signal('changeStep', step);\r\n      signal('jumpTo', step);\r\n      this.setState(\r\n        {\r\n          dragging: true,\r\n        },\r\n        () => {\r\n          this.setState({ dragging: true });\r\n        }\r\n      );\r\n    }\r\n  };\r\n\r\n  mouseMove = (e: React.MouseEvent) => {\r\n    if (this.props.max === 0) return;\r\n    if (this.state.dragging) {\r\n      let step = this.props.scale.invert(e.nativeEvent.offsetX);\r\n      step = Math.min(step, this.props.max);\r\n      step = Math.max(step, 0);\r\n      step = Math.round(step);\r\n      signal('changeStep', step);\r\n      signal('jumpTo', step);\r\n    }\r\n  };\r\n\r\n  render() {\r\n    const {\r\n      step,\r\n      max,\r\n      scale,\r\n      width,\r\n      height,\r\n      // variableHighlights,\r\n      // statementHighlights,\r\n    } = this.props;\r\n\r\n    // const contenWidth = width > 250 ? width - 60 : width;\r\n    const contentWidth = width;\r\n    const activeWidth = max ? (step / max) * contentWidth : 0;\r\n\r\n    console.log(contentWidth, activeWidth, step, max);\r\n\r\n    return (\r\n      <div>\r\n        <svg\r\n          style={{\r\n            display: 'block',\r\n            // paddingBottom: '8px',\r\n            zIndex: 6,\r\n            overflow: 'visible',\r\n          }}\r\n          height={height}\r\n          width={contentWidth}\r\n          onMouseDown={this.dragFromSVG}\r\n          onMouseMove={this.mouseMove}\r\n        >\r\n          <rect\r\n            className=\"timeline\"\r\n            height={8}\r\n            x={0}\r\n            y={height / 2 - 4}\r\n            width={contentWidth}\r\n            rx=\"4\"\r\n            ry=\"4\"\r\n          />\r\n          <rect\r\n            className=\"timeline active\"\r\n            height={8}\r\n            x={0}\r\n            y={height / 2 - 4}\r\n            width={activeWidth}\r\n            rx=\"4\"\r\n            ry=\"4\"\r\n          />\r\n\r\n          {/* <g>\r\n          {variableHighlights.map((m) => {\r\n            return (\r\n              <g key={m.funcName + '_' + m.name}>\r\n                {m['steps'].map((_step) => {\r\n                  if (m['visible']) {\r\n                    return (\r\n                      <rect\r\n                        height={30}\r\n                        x={scale(_step) - 1.5}\r\n                        y={18}\r\n                        width={3}\r\n                        fill={m['color']}\r\n                      />\r\n                    );\r\n                  }\r\n                })}\r\n              </g>\r\n            );\r\n          })}\r\n        </g>\r\n        <g>\r\n          {statementHighlights.map((m) => {\r\n            return (\r\n              <g key={m.lineNumber}>\r\n                {m['steps'].map((_step, i) => {\r\n                  if (m['visible']) {\r\n                    let h = 5;\r\n                    if (m['depth'][i] < 5) {\r\n                      h = m['depth'][i] * 7 + h;\r\n                    } else {\r\n                      h = 40;\r\n                    }\r\n                    return (\r\n                      <rect\r\n                        height={h}\r\n                        x={scale(_step) - 1.5}\r\n                        y={52}\r\n                        width={3}\r\n                        fill={m['color']}\r\n                      ></rect>\r\n                    );\r\n                  }\r\n                })}\r\n              </g>\r\n            );\r\n          })}\r\n        </g> */}\r\n          <g>\r\n            <text\r\n              className=\"timeline-legend\"\r\n              x={contentWidth}\r\n              y={height / 2 - 20}\r\n              fontSize=\"15\"\r\n            >\r\n              Variables\r\n            </text>\r\n            <text\r\n              className=\"timeline-legend\"\r\n              x={contentWidth}\r\n              y={height / 2 + 35}\r\n              fontSize=\"15\"\r\n            >\r\n              Statements\r\n            </text>\r\n          </g>\r\n        </svg>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","export default __webpack_public_path__ + \"static/media/stepLight.1342c687.svg\";","export default __webpack_public_path__ + \"static/media/stepDark.4b3318fe.svg\";","export default __webpack_public_path__ + \"static/media/stepAllLight.cdcc2be1.svg\";","export default __webpack_public_path__ + \"static/media/stepAllDark.195eaf6f.svg\";","export default __webpack_public_path__ + \"static/media/restartLight.8c265da1.svg\";","export default __webpack_public_path__ + \"static/media/restartDark.bc869dd8.svg\";","export default __webpack_public_path__ + \"static/media/stepBackLight.d6c0cb2a.svg\";","export default __webpack_public_path__ + \"static/media/stepBackDark.4ac60f09.svg\";","export default __webpack_public_path__ + \"static/media/backAllLight.0af11755.svg\";","export default __webpack_public_path__ + \"static/media/backAllDark.b40d3e39.svg\";","export default __webpack_public_path__ + \"static/media/kaishi2.c2674428.svg\";","export default __webpack_public_path__ + \"static/media/kaishi1.7a08fbf8.svg\";","import classNames from 'classnames';\r\nimport React from 'react';\r\nimport './style.scss';\r\n\r\ninterface ControlButtonProps {\r\n  iconHrefLight: string;\r\n  iconHrefDark: string;\r\n  onClick: () => void;\r\n  disabled: boolean;\r\n}\r\n\r\nfunction ControlButton({iconHrefLight, iconHrefDark, onClick, disabled}: ControlButtonProps) {\r\n  return (\r\n    <div\r\n      className={classNames('control-button', {disabled: disabled})}\r\n      onClick={onClick}\r\n    >\r\n      <svg width={40} height={40}>\r\n        <image xlinkHref={disabled ? iconHrefLight : iconHrefDark} height='40' width='40' cursor='pointer' />\r\n      </svg>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default ControlButton;\r\n","import React, { useEffect, useState } from 'react';\n\nimport { DEBUG_STATE } from '../server';\nimport { showEvents, signal } from '../emitter';\nimport * as d3 from 'd3';\n\nimport stepLight from '../../assets/icon/stepLight.svg';\nimport stepDark from '../../assets/icon/stepDark.svg';\nimport stepAllLight from '../../assets/icon/stepAllLight.svg';\nimport stepAllDark from '../../assets/icon/stepAllDark.svg';\nimport restartLight from '../../assets/icon/restartLight.svg';\nimport restartDark from '../../assets/icon/restartDark.svg';\n\nimport stepBackLight from '../../assets/icon/stepBackLight.svg';\nimport stepBackDark from '../../assets/icon/stepBackDark.svg';\nimport backAllLight from '../../assets/icon/backAllLight.svg';\nimport backAllDark from '../../assets/icon/backAllDark.svg';\n\nimport startLight from '../../assets/icon/kaishi2.svg';\nimport startDark from '../../assets/icon/kaishi1.svg';\nimport ControlButton from './ControButton';\n\nimport './style.scss';\n\nfunction ControlButtonGroup({ debugState }: { debugState: DEBUG_STATE }) {\n  const [start, setStart] = useState(false);\n  const [stop, setStop] = useState(false);\n  const [backAll, setBackAll] = useState(false);\n  const [stepBack, setStepBack] = useState(false);\n  const [step, setStep] = useState(true);\n  const [stepAll, setStepAll] = useState(false);\n\n  useEffect(() => {\n    switch (debugState) {\n      case 'Stop':\n        setStart(false);\n        setStop(false);\n        setBackAll(false);\n        setStepBack(false);\n        setStep(true);\n        setStepAll(false);\n        break;\n      case 'First':\n        setStart(true);\n        setStop(true);\n        setBackAll(false);\n        setStepBack(false);\n        setStep(true);\n        setStepAll(true);\n        break;\n      case 'stdin':\n        setBackAll(false);\n        setStepBack(false);\n        setStep(true);\n        setStepAll(true);\n        break;\n      case 'Debugging':\n        setBackAll(true);\n        setStepBack(true);\n        setStep(true);\n        setStepAll(true);\n        break;\n      case 'Executing':\n        setBackAll(false);\n        setStepBack(false);\n        setStep(false);\n        setStepAll(false);\n        break;\n      case 'EOF':\n        setStart(true);\n        setStop(true);\n        setBackAll(true);\n        setStepBack(true);\n        setStep(false);\n        setStepAll(false);\n        break;\n      default:\n        break;\n    }\n  }, [debugState]);\n\n  return (\n    <div className=\"control-btn-group\">\n      <ControlButton\n        iconHrefLight={backAllLight}\n        iconHrefDark={backAllDark}\n        // onClick={() => signal('debug', 'BackAll')}\n        onClick={() => {}}\n        disabled={!backAll}\n      />\n      <ControlButton\n        iconHrefLight={stepBackLight}\n        iconHrefDark={stepBackDark}\n        onClick={() => signal('debug', 'StepBack')}\n        disabled={!stepBack}\n      />\n      <ControlButton\n        iconHrefLight={restartLight}\n        iconHrefDark={restartDark}\n        onClick={() => {\n          signal('debug', 'Start');\n          const arrowListJson = sessionStorage.getItem('arrowList');\n          let arrowList =\n            arrowListJson === null ? {} : JSON.parse(arrowListJson);\n          if (!arrowList) {\n            arrowList = {};\n          }\n          Object.keys(arrowList).forEach((name) => {\n            d3.select('#svg')\n              .select(`#block_${name}`)\n              .attr('transform', 'matrix(1,0,0,1,0,0)');\n          });\n          sessionStorage.clear();\n        }}\n        disabled={!start}\n      />\n      <ControlButton\n        iconHrefLight={stop ? stepLight : startLight}\n        iconHrefDark={stop ? stepDark : startDark}\n        onClick={() => {\n          showEvents();\n          signal('debug', stop ? 'Step' : 'Start');\n        }}\n        disabled={!step}\n      />\n      <ControlButton\n        iconHrefLight={stepAllLight}\n        iconHrefDark={stepAllDark}\n        onClick={() => signal('debug', stop ? 'StepAll' : 'Exec')}\n        disabled={!stepAll}\n      />\n    </div>\n  );\n}\n\nexport default ControlButtonGroup;\n","import React, { useEffect, useState } from 'react';\r\nimport { scaleLinear as linear } from 'd3-scale';\r\nimport PanelHeader from '../../components/panelHeader/PanelHeader';\r\nimport StatementHighlightContent from '../../components/timeline/StatementHighlightContent';\r\nimport VariableHighlightContent from '../../components/timeline/VariableHighlightContent';\r\nimport './style.scss';\r\nimport '../../styles/colors.scss';\r\nimport * as d3 from 'd3';\r\nimport { inArray } from 'jquery';\r\nimport Slider from '../../components/timeline/Slider';\r\nimport ControlButtonGroup from '../../components/timeline/ControlButtonGroup';\r\nimport { DEBUG_STATE } from '../../components/server';\r\nimport { remove, slot } from '../../components/emitter';\r\nimport { unstable_batchedUpdates } from 'react-dom';\r\n\r\ninterface OptionItem {\r\n  value: string;\r\n  label: string;\r\n  children: { value: string; label: string }[];\r\n}\r\n\r\nexport interface StatementHighlight {\r\n  color: string;\r\n  lineNumber: number;\r\n  visible: boolean;\r\n  steps: number[];\r\n  depth: number[];\r\n}\r\n\r\nexport interface VariableHighlight {\r\n  color: string;\r\n  funcName: string;\r\n  name: string;\r\n  visible: boolean;\r\n  steps: number[];\r\n}\r\n\r\nfunction TimelinePanel() {\r\n  const [max, setMax] = useState(0);\r\n  const [marks, setMarks] = useState({});\r\n  const [step, setStep] = useState(0);\r\n  const [variableHighlights, setVariableHighlights] = useState<\r\n    VariableHighlight[]\r\n  >([]);\r\n  const [statementHighlights, setStatementHighlights] = useState<\r\n    StatementHighlight[]\r\n  >([]);\r\n  const [options, setOptions] = useState<OptionItem[]>([]);\r\n  const [linesShowUp, setLinesShowUp] = useState<StatementHighlight[]>([]);\r\n  const [variableShowUp, setVariableShowUp] = useState<VariableHighlight[]>([]);\r\n  const [debugStatus, setDebugStatus] = useState('');\r\n  const [debugState, setDebugState] = useState<DEBUG_STATE>('Stop');\r\n  const timelineArea = React.createRef<any>();\r\n  const [timelineWidth, setTimelineWidth] = useState(0);\r\n\r\n  useEffect(() => {\r\n    slot('changeStep', (step: number) => {\r\n      setStep(step);\r\n    });\r\n    slot('statementHighlight', (lineNumber: number) => {\r\n      const statement = linesShowUp[lineNumber];\r\n      const color = d3\r\n        .rgb(\r\n          Math.floor(Math.random() * 255),\r\n          Math.floor(Math.random() * 255),\r\n          Math.floor(Math.random() * 255)\r\n        )\r\n        .formatRgb();\r\n      alert(linesShowUp);\r\n      statement.color = color;\r\n      statementHighlights.push(statement);\r\n      setStatementHighlights(statementHighlights);\r\n      d3.selectAll(`.highlight${lineNumber}`).style('background-color', color);\r\n    });\r\n\r\n    slot('cancelStatementHighlight', (lineNumber: number) => {\r\n      for (let i = 0; i < statementHighlights.length; i++) {\r\n        if (statementHighlights[i]['lineNumber'] == lineNumber + 1) {\r\n          statementHighlights.splice(i, 1);\r\n          break;\r\n        }\r\n      }\r\n      d3.selectAll(`.highlight${lineNumber}`).style('background-color', '#fff');\r\n      setStatementHighlights(statementHighlights);\r\n    });\r\n    slot(\r\n      'init',\r\n      (\r\n        stepCount: number,\r\n        linesShowUp: any,\r\n        allVariables: any,\r\n        variableShowUp: any\r\n      ) => {\r\n        const options: OptionItem[] = [];\r\n        Object.keys(allVariables).forEach((funcName) => {\r\n          const temp: OptionItem = {\r\n            value: funcName,\r\n            label: funcName,\r\n            children: [],\r\n          };\r\n          Object.keys(allVariables[funcName]).forEach((varName) => {\r\n            temp.children.push({\r\n              value: varName,\r\n              label: varName,\r\n            });\r\n          });\r\n          options.push(temp);\r\n        });\r\n        // console.log(variableShowUp);\r\n        unstable_batchedUpdates(() => {\r\n          setMax(stepCount);\r\n          setVariableHighlights([]);\r\n          setStatementHighlights([]);\r\n          setLinesShowUp(linesShowUp);\r\n          setVariableShowUp(variableShowUp);\r\n          setOptions(options);\r\n        });\r\n      }\r\n    );\r\n    slot('changeState', (debugState: DEBUG_STATE, step: number) => {\r\n      let debugStatus = '';\r\n      if (debugState === 'Debugging') {\r\n        debugStatus = `Step ${step}`;\r\n      } else {\r\n        debugStatus = debugState;\r\n      }\r\n      unstable_batchedUpdates(() => {\r\n        setDebugStatus(debugStatus);\r\n        setDebugState(debugState);\r\n      });\r\n    });\r\n\r\n    return () => {\r\n      remove('changeStep');\r\n      remove('statementHighlight');\r\n      remove('cancelStatementHighlight');\r\n      remove('init');\r\n      remove('changeState');\r\n    };\r\n  });\r\n\r\n  const changeStatementColor = (lineNumber: number, color: string) => {\r\n    for (let i = 0; i < statementHighlights.length; i++) {\r\n      if (statementHighlights[i].lineNumber === lineNumber) {\r\n        statementHighlights[i].color = color;\r\n        break;\r\n      }\r\n    }\r\n    d3.selectAll(`.highlight${lineNumber - 1}`).style(\r\n      'background-color',\r\n      color\r\n    );\r\n    setStatementHighlights(statementHighlights);\r\n  };\r\n\r\n  const changeStatementVisible = (lineNumber: number) => {\r\n    const len = statementHighlights.length;\r\n    for (let i = 0; i < len; i++) {\r\n      if (statementHighlights[i].lineNumber === lineNumber) {\r\n        statementHighlights[i].visible = !statementHighlights[i].visible;\r\n        break;\r\n      }\r\n    }\r\n    setStatementHighlights(statementHighlights);\r\n  };\r\n\r\n  const addVariableHighlight = (funcName: string, varName: string) => {\r\n    const color = d3\r\n      .rgb(\r\n        Math.floor(Math.random() * 255),\r\n        Math.floor(Math.random() * 255),\r\n        Math.floor(Math.random() * 255)\r\n      )\r\n      .formatRgb();\r\n    // console.log('addVariableHighlight: ', color);\r\n    let temp = null;\r\n    for (let i = 0; i < variableShowUp.length; i++) {\r\n      if (\r\n        variableShowUp[i].funcName === funcName &&\r\n        variableShowUp[i].name === varName\r\n      ) {\r\n        variableShowUp[i].color = color;\r\n        temp = variableShowUp[i];\r\n        break;\r\n      }\r\n    }\r\n    if (temp === null) {\r\n      alert('Unexcepted Variable');\r\n      return;\r\n    }\r\n    if (inArray(temp, variableHighlights) < 0) {\r\n      variableHighlights.push(temp);\r\n      setVariableHighlights(variableHighlights);\r\n      setVariableShowUp(variableShowUp);\r\n    }\r\n    const memoryCells = d3\r\n      .select('#memory')\r\n      .selectAll(`.memory-${funcName}-${varName}`);\r\n    memoryCells.select('rect').style('stroke', color);\r\n    memoryCells.selectAll('text').attr('fill', color);\r\n    const blockCells = d3\r\n      .select('#svg')\r\n      .selectAll(`.block-${funcName}-${varName}`);\r\n    blockCells.select('rect').style('stroke', color);\r\n    blockCells.selectAll('text').attr('fill', color);\r\n  };\r\n\r\n  const removeVariableHighlight = (funcName: string, varName: string) => {\r\n    for (let i = 0; i < variableShowUp.length; i++) {\r\n      if (\r\n        variableShowUp[i].funcName === funcName &&\r\n        variableShowUp[i].name === varName\r\n      ) {\r\n        variableShowUp[i].visible = true;\r\n        break;\r\n      }\r\n    }\r\n    for (let i = 0; i < variableHighlights.length; i++) {\r\n      for (let j = 0; j < variableHighlights.length; j++) {\r\n        if (\r\n          variableHighlights[j].funcName === funcName &&\r\n          variableHighlights[j].funcName === varName\r\n        ) {\r\n          variableHighlights.splice(i, 1);\r\n          break;\r\n        }\r\n      }\r\n    }\r\n    const memoryCells = d3\r\n      .select('#memory')\r\n      .selectAll(`.memory-${funcName}-${varName}`);\r\n    memoryCells.select('rect').style('stroke', 'black');\r\n    memoryCells.selectAll('text').attr('fill', 'black');\r\n    const blockCells = d3\r\n      .select('#svg')\r\n      .selectAll(`.block-${funcName}-${varName}`);\r\n    blockCells.select('rect').style('stroke', 'black');\r\n    blockCells.selectAll('text').attr('fill', 'black');\r\n\r\n    setVariableHighlights(variableHighlights);\r\n    setVariableShowUp(variableShowUp);\r\n  };\r\n\r\n  const changeVariableColor = (\r\n    funcName: string,\r\n    varName: string,\r\n    color: string\r\n  ) => {\r\n    let i = 0;\r\n    for (; i < variableShowUp.length; i++) {\r\n      if (\r\n        variableShowUp[i].funcName === funcName &&\r\n        variableShowUp[i].name === varName\r\n      ) {\r\n        variableShowUp[i].color = color;\r\n        break;\r\n      }\r\n    }\r\n    for (let j = 0; j < variableHighlights.length; j++) {\r\n      if (\r\n        variableHighlights[j].funcName === funcName &&\r\n        variableHighlights[j].name === varName\r\n      ) {\r\n        variableHighlights[j].color = color;\r\n        break;\r\n      }\r\n    }\r\n    const memoryCells = d3\r\n      .select('#memory')\r\n      .selectAll(`.memory-${funcName}-${varName}`);\r\n    memoryCells.select('rect').style('stroke', color);\r\n    memoryCells.selectAll('text').attr('fill', color);\r\n    const blockCells = d3\r\n      .select('#svg')\r\n      .selectAll(`.block-${funcName}-${varName}`);\r\n    blockCells.select('rect').style('stroke', color);\r\n    blockCells.selectAll('text').attr('fill', color);\r\n\r\n    setVariableHighlights(variableHighlights);\r\n    setVariableShowUp(variableShowUp);\r\n  };\r\n\r\n  const changeVariableVisible = (funcName: string, varName: string) => {\r\n    for (let i = 0; i < variableShowUp.length; i++) {\r\n      if (\r\n        variableShowUp[i].funcName === funcName &&\r\n        variableShowUp[i]['name'] === varName\r\n      ) {\r\n        if (variableShowUp[i]['visible']) {\r\n          const memoryCells = d3\r\n            .select('#memory')\r\n            .selectAll(`.memory-${funcName}-${varName}`);\r\n          memoryCells.select('rect').style('stroke', 'black');\r\n          memoryCells.selectAll('text').attr('fill', 'black');\r\n          const blockCells = d3\r\n            .select('#svg')\r\n            .selectAll(`.block-${funcName}-${varName}`);\r\n          blockCells.select('rect').style('stroke', 'black');\r\n          blockCells.selectAll('text').attr('fill', 'black');\r\n        } else {\r\n          const memoryCells = d3\r\n            .select('#memory')\r\n            .selectAll(`.memory-${funcName}-${varName}`);\r\n          memoryCells\r\n            .select('rect')\r\n            .style('stroke', variableShowUp[i]['color']);\r\n          memoryCells\r\n            .selectAll('text')\r\n            .attr('fill', variableShowUp[i]['color']);\r\n          const blockCells = d3\r\n            .select('#svg')\r\n            .selectAll(`.block-${funcName}-${varName}`);\r\n          blockCells.select('rect').style('stroke', variableShowUp[i]['color']);\r\n          blockCells.selectAll('text').attr('fill', variableShowUp[i]['color']);\r\n        }\r\n        variableShowUp[i]['visible'] = !variableShowUp[i]['visible'];\r\n        break;\r\n      }\r\n    }\r\n\r\n    setVariableHighlights(variableHighlights);\r\n    setVariableShowUp(variableShowUp);\r\n  };\r\n\r\n  useEffect(() => {\r\n    setTimelineWidth(timelineArea.current.clientWidth - 60);\r\n  }, [timelineArea]);\r\n\r\n  return (\r\n    <div id=\"TimelinePanel\" className=\"panel\">\r\n      <PanelHeader title=\"Timeline\" />\r\n      <div className=\"main-content\">\r\n        <div className=\"col-1\">\r\n          <StatementHighlightContent\r\n          // changeStatementColor={changeStatementColor}\r\n          // statementHighlights={statementHighlights}\r\n          // changeStatementVisible={changeStatementVisible}\r\n          />\r\n        </div>\r\n        <div className=\"col-2\" ref={timelineArea}>\r\n          <div className=\"row-1\">\r\n            <Slider\r\n              step={step}\r\n              max={max}\r\n              scale={linear().domain([0, max]).range([0, timelineWidth])}\r\n              width={timelineWidth}\r\n              height={8}\r\n              // variableHighlights={variableHighlights}\r\n              // statementHighlights={statementHighlights}\r\n            />\r\n          </div>\r\n          <div className=\"row-2\">\r\n            <ControlButtonGroup debugState={debugState} />\r\n          </div>\r\n        </div>\r\n        <div className=\"col-3\">\r\n          <VariableHighlightContent\r\n          // variableHighlights={variableHighlights}\r\n          // options={options}\r\n          // addVariableHighlight={addVariableHighlight}\r\n          // changeVariableColor={changeVariableColor}\r\n          // changeVariableVisible={changeVariableVisible}\r\n          // removeVariableHighlight={removeVariableHighlight}\r\n          />\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default TimelinePanel;\r\n","import { ExecState } from 'unicoen.ts/dist/interpreter/Engine/ExecState';\r\nimport { Stack } from 'unicoen.ts/dist/interpreter/Engine/Stack';\r\nimport { Variable } from 'unicoen.ts/dist/interpreter/Engine/Variable';\r\nimport { Vector } from 'vector2d';\r\n\r\nexport type BlockCellContainer = BlockCell[];\r\nexport type BlockTable = BlockCellContainer[];\r\n\r\nexport function arrayToString(value: number | any[], type: string) {\r\n  const array = valueToArray(value, type);\r\n  if (Array.isArray(value)) {\r\n    if (\r\n      (type.startsWith('char') || type.startsWith('unsignedchar')) &&\r\n      type.split('[').length === 2\r\n    ) {\r\n      return '\"' + array.toString() + '\"';\r\n    }\r\n    return '[' + array.toString() + ']';\r\n  }\r\n  return array.toString();\r\n}\r\n\r\nexport function valueToArray(value: number | any[], type: string) {\r\n  const res: string[] = [];\r\n  if (Array.isArray(value)) {\r\n    value.forEach((v) => {\r\n      res.push(arrayToString(v.value, v.type));\r\n    });\r\n  } else {\r\n    if (type === 'char' || type === 'unsignedchar') {\r\n      return typeof value === undefined || value === 0\r\n        ? ''\r\n        : String.fromCharCode(value);\r\n    } else {\r\n      return value ? value : 0;\r\n    }\r\n  }\r\n  if (\r\n    (type.startsWith('char') || type.startsWith('unsignedchar')) &&\r\n    type.split('[').length === 2\r\n  ) {\r\n    return [res.join('')];\r\n  }\r\n  return res;\r\n}\r\n\r\nexport class BlockDrawer {\r\n  private blockStacks: BlockStack[] = [];\r\n  private blockArrows: any = [null, null];\r\n  private execState: ExecState | null = null;\r\n  constructor(execState?: ExecState) {\r\n    if (typeof execState === 'undefined') return;\r\n    this.execState = execState;\r\n    this.reset();\r\n    this.update();\r\n    this.calcPos();\r\n  }\r\n  private reset() {\r\n    this.blockStacks = [];\r\n  }\r\n\r\n  private update() {\r\n    if (this.execState === null) return;\r\n    const stacks = this.execState.getStacks();\r\n    stacks.forEach((stack, i) => {\r\n      if (stack.name !== 'GLOBAL') {\r\n        const blockStack = new BlockStack(stack);\r\n        blockStack.setColor('#979797');\r\n        this.blockStacks.push(blockStack);\r\n      }\r\n    });\r\n  }\r\n\r\n  private calcPos() {\r\n    const originX = 300;\r\n    const originY = 5;\r\n    const offsetX = 40;\r\n    const offsetY = 40;\r\n    const x = originX;\r\n    let y = originY;\r\n    this.blockStacks.slice(-2).forEach((blockStack, index) => {\r\n      this.blockArrows[index] = blockStack.getName();\r\n      const height = this.calcStackPos(x, y, blockStack);\r\n      y += height + offsetY;\r\n    });\r\n\r\n    this.blockStacks.slice(0, -2).forEach((blockStack, index) => {\r\n      this.calcStackPos(0, 0, blockStack);\r\n    });\r\n  }\r\n\r\n  private calcStackPos(x: number, y: number, blockStack: BlockStack) {\r\n    blockStack.setPos(x, y);\r\n    const offsetX = 20;\r\n    const offsetY = 40;\r\n    const originX = x + offsetX;\r\n    const originY = y + 20;\r\n    let row = 1;\r\n    let count = 0;\r\n    const blockTable = blockStack.getBlockTable();\r\n    blockTable.forEach((blockCellContainer) => {\r\n      const len = 1;\r\n      if (count + len > 2) {\r\n        row++;\r\n        count = 0;\r\n      }\r\n      const _x = originX + (offsetX + BlockCell.WIDTH) * count + offsetX;\r\n      const _y =\r\n        originY + (offsetY + BlockCell.HEIGHT) * row - BlockCell.HEIGHT;\r\n      this.calcVariablePos(_x, _y, blockCellContainer);\r\n      count += len;\r\n    });\r\n    blockStack.setHeight((BlockCell.HEIGHT + offsetY) * row + offsetY * 2);\r\n    blockStack.setWidth((BlockCell.WIDTH + offsetX) * 2 + offsetX * 3);\r\n\r\n    return (BlockCell.HEIGHT + offsetY) * row + offsetY * 2;\r\n  }\r\n\r\n  private calcVariablePos(\r\n    x: number,\r\n    y: number,\r\n    blockCellContainer: BlockCellContainer\r\n  ) {\r\n    const offsetX = 20 + BlockCell.WIDTH;\r\n    blockCellContainer[0].setPos(x, y);\r\n  }\r\n\r\n  // private calcVariablePos(\r\n  //   x: number,\r\n  //   y: number,\r\n  //   blockCellContainer: BlockCellContainer\r\n  // ) {\r\n  //   const offsetX = 20 + BlockCell.WIDTH;\r\n  //   if (blockCellContainer.length === 1) {\r\n  //     blockCellContainer[0].setPos(x, y);\r\n  //   } else {\r\n  //     blockCellContainer[0].setPos(x - 10, y - 10);\r\n  //     blockCellContainer[0].setWidth(\r\n  //       offsetX * Math.min(getCellsByDepth(blockCellContainer, 1).length, 3)\r\n  //     );\r\n  //     blockCellContainer[0].setHeight(BlockCell.HEIGHT + 20);\r\n  //     const depth = getDepth(blockCellContainer);\r\n  //     for (let i = 1; i <= depth; i++) {\r\n  //       const blockCells = getCellsByDepth(blockCellContainer, i);\r\n  //       blockCells.forEach((blockCell) => {});\r\n  //     }\r\n  //   }\r\n  // }\r\n\r\n  public getBlockStacks() {\r\n    return this.blockStacks;\r\n  }\r\n\r\n  public getBlockArrows() {\r\n    return this.blockArrows;\r\n  }\r\n\r\n  public addBlockStack(blockStack: BlockStack) {\r\n    this.blockStacks.push(blockStack);\r\n  }\r\n\r\n  public addArrow(stackName: any) {\r\n    this.blockArrows.push(stackName);\r\n  }\r\n}\r\n\r\nexport class BlockStack {\r\n  public readonly key: string;\r\n  private pos: Vector = new Vector(0, 0);\r\n  private blockTable: BlockTable;\r\n  private stack: Stack;\r\n  private width = 0;\r\n  private height = 0;\r\n  private color: string | undefined;\r\n\r\n  constructor(stack: Stack) {\r\n    this.stack = stack;\r\n    this.blockTable = this.makeBlockTable();\r\n    this.key = stack.name;\r\n  }\r\n\r\n  public setPos(x: number, y: number) {\r\n    this.pos.setAxes(x, y);\r\n  }\r\n\r\n  public setWidth(width: number) {\r\n    this.width = width;\r\n  }\r\n\r\n  public setHeight(height: number) {\r\n    this.height = height;\r\n  }\r\n\r\n  public setColor(color: string) {\r\n    this.color = color;\r\n  }\r\n\r\n  private makeBlockTable(): BlockTable {\r\n    const blockTable: BlockTable = [];\r\n    const variables = this.stack.getVariables();\r\n    const stackName = this.stack.name;\r\n    variables.forEach((variable) => {\r\n      const value = variable.getValue();\r\n      const isArrayVariable = Array.isArray(value);\r\n      const blockVariable = isArrayVariable\r\n        ? new BlockArrayVariable(variable, stackName)\r\n        : new BlockVariable(variable, stackName);\r\n      const cellss = blockVariable.getBlockCellContainer();\r\n      blockTable.push(cellss);\r\n    });\r\n    return blockTable;\r\n  }\r\n\r\n  public getBlockTable() {\r\n    return this.blockTable;\r\n  }\r\n\r\n  public x() {\r\n    return this.pos.getX();\r\n  }\r\n\r\n  public y() {\r\n    return this.pos.getY();\r\n  }\r\n\r\n  public getWidth() {\r\n    return this.width;\r\n  }\r\n\r\n  public getHeight() {\r\n    return this.height;\r\n  }\r\n\r\n  public getName() {\r\n    const res = this.key.replace(/[&|\\\\*:^%$@()[\\].]/g, '_');\r\n    return res;\r\n  }\r\n\r\n  public getColor() {\r\n    return this.color;\r\n  }\r\n}\r\n\r\nexport class BlockVariable {\r\n  public readonly key: string;\r\n  protected blockCellContainer: BlockCellContainer = [];\r\n  protected readonly variable: Variable;\r\n  protected readonly stackName: string;\r\n  constructor(variable: Variable, stackName: string) {\r\n    this.variable = variable;\r\n    this.stackName = stackName;\r\n    this.key = `${stackName}-${variable.name}`;\r\n    this.key = this.key.replace(/[&|\\\\*:^%$@()[\\].]/g, '_');\r\n    this.init();\r\n  }\r\n\r\n  protected init() {\r\n    const { type, name, address } = this.variable;\r\n    const cell = this.pushCell(name, this.variable.getValue());\r\n    cell.setType(type);\r\n    cell.setAddress(address);\r\n  }\r\n\r\n  protected pushCell(name: string, value: any): BlockCell {\r\n    const cell = new BlockCell(name, this.key, value);\r\n    this.blockCellContainer.push(cell);\r\n    return cell;\r\n  }\r\n\r\n  public getBlockCellContainer(): BlockCellContainer {\r\n    return this.blockCellContainer;\r\n  }\r\n}\r\n\r\nexport class BlockArrayVariable extends BlockVariable {\r\n  constructor(variable: Variable, stackName: string) {\r\n    super(variable, stackName);\r\n  }\r\n\r\n  public getBlockCellContainer(): BlockCellContainer {\r\n    const children: BlockCellContainer = [];\r\n    const value: Variable[] = this.variable.getValue();\r\n    for (const v of value) {\r\n      const blockVariable = Array.isArray(v.getValue())\r\n        ? new BlockArrayVariable(v, this.stackName)\r\n        : new BlockVariable(v, this.stackName);\r\n      const table = blockVariable.getBlockCellContainer();\r\n      children.push(...table);\r\n    }\r\n    return this.blockCellContainer.concat(children);\r\n  }\r\n}\r\n\r\nexport class BlockCell {\r\n  public static readonly FONT_SIZE: number = 20;\r\n  public static readonly HEIGHT: number = 50;\r\n  public static readonly WIDTH: number = 150;\r\n  private address: number | undefined;\r\n  public readonly key: string;\r\n  private type: string | undefined;\r\n  private name: string;\r\n  private pos: Vector = new Vector(-1, -1);\r\n  private value: any;\r\n  private depth = 0;\r\n  private width: number = BlockCell.WIDTH;\r\n  private height: number = BlockCell.HEIGHT;\r\n  constructor(name: string, parentKey: string, value: any) {\r\n    this.name = name;\r\n    this.key = parentKey;\r\n    this.key = this.key.replace(/[&|\\\\*:^%$@()[\\].]/g, '_');\r\n    this.value = value;\r\n    this.depth = this.name.split('[').length - 1;\r\n  }\r\n\r\n  public setAddress(address: number) {\r\n    this.address = address;\r\n  }\r\n\r\n  public setType(type: string) {\r\n    this.type = type;\r\n  }\r\n\r\n  public setPos(x: number, y: number) {\r\n    this.pos.setAxes(x, y);\r\n  }\r\n\r\n  public setWidth(width: number) {\r\n    this.width = width;\r\n  }\r\n\r\n  public setHeight(height: number) {\r\n    this.height = height;\r\n  }\r\n\r\n  public getAddress() {\r\n    return this.address;\r\n  }\r\n\r\n  public getType() {\r\n    return this.type;\r\n  }\r\n\r\n  public getName() {\r\n    return this.name;\r\n  }\r\n\r\n  public x() {\r\n    return this.pos.getX();\r\n  }\r\n\r\n  public y() {\r\n    return this.pos.getY();\r\n  }\r\n\r\n  public getValue() {\r\n    if (this.type!.split('[').length > 1) {\r\n      return arrayToString(this.value, this.type!.split('[')[0]);\r\n    }\r\n\r\n    return this.value.toString();\r\n  }\r\n\r\n  public getDepth() {\r\n    return this.depth;\r\n  }\r\n\r\n  public getWidth() {\r\n    return this.width;\r\n  }\r\n\r\n  public getHeight() {\r\n    return this.height;\r\n  }\r\n}\r\n","import * as React from 'react';\r\nimport { BlockStack, BlockCell } from '../blockDrawer/BlockDrawer';\r\nimport * as d3 from 'd3';\r\n\r\ninterface Props {\r\n  blockStack: BlockStack;\r\n}\r\n\r\n// eslint-disable-next-line @typescript-eslint/no-empty-interface\r\ninterface State {}\r\n\r\nexport function wrapWord(\r\n  text: d3.Selection<d3.BaseType, unknown, HTMLElement, any>,\r\n  width: number,\r\n  className:\r\n    | string\r\n    | number\r\n    | boolean\r\n    | d3.ValueFn<SVGTSpanElement, unknown, string | number | boolean | null>\r\n    | null\r\n) {\r\n  text.each(function () {\r\n    const text = d3.select(this),\r\n      words = text.text().split('').reverse();\r\n    let word;\r\n    const line = [],\r\n      x = text.attr('x'),\r\n      y = text.attr('y'),\r\n      tspan = text\r\n        .text(null)\r\n        .append('tspan')\r\n        .attr('class', className)\r\n        .attr('x', x)\r\n        .attr('y', y);\r\n    while ((word = words.pop())) {\r\n      line.push(word);\r\n      tspan.text(line.join(''));\r\n      if (tspan.node()!.getComputedTextLength() > width) {\r\n        line.pop();\r\n        line.splice(line.length - 2, 3, '.', '.', '.');\r\n        tspan.text(line.join(''));\r\n        break;\r\n      }\r\n    }\r\n  });\r\n}\r\n\r\nexport default class Block extends React.Component<Props, State> {\r\n  componentDidUpdate() {\r\n    d3.select('#svg').selectAll('.block-left').selectAll('path').remove();\r\n    d3.select('#svg')\r\n      .selectAll('.block-left')\r\n      .append('path')\r\n      .attr('d', function (this: any) {\r\n        const block_node = d3\r\n          .select(this.parentNode.parentNode)\r\n          .node()\r\n          .getBBox();\r\n        const x = block_node.x;\r\n        const y = block_node.y;\r\n        const height = block_node.height;\r\n        return (\r\n          'M ' +\r\n          x +\r\n          ' ' +\r\n          (y + 10) +\r\n          ' L ' +\r\n          x +\r\n          ' ' +\r\n          (y + height - 10) +\r\n          ' A 10 10 0 0 0 ' +\r\n          (x + 10) +\r\n          ' ' +\r\n          (y + height) +\r\n          ' L ' +\r\n          (x + 10) +\r\n          ' ' +\r\n          y +\r\n          ' A 10 10 0 0 0 ' +\r\n          x +\r\n          ' ' +\r\n          (y + 10)\r\n        );\r\n      });\r\n    wrapWord(d3.selectAll('.value'), BlockCell.WIDTH - 10, 'value');\r\n  }\r\n\r\n  renderBlockBackground() {\r\n    const { blockStack } = this.props;\r\n    return (\r\n      <React.Fragment>\r\n        <rect\r\n          x={blockStack.x()}\r\n          y={blockStack.y()}\r\n          width={blockStack.getWidth()}\r\n          height={blockStack.getHeight()}\r\n          rx={10}\r\n          ry={10}\r\n          fill=\"white\"\r\n          style={{ stroke: '#979797', strokeWidth: '1.5px' }}\r\n        ></rect>\r\n        <g className=\"block-left\"></g>\r\n        {/* <path\r\n          d={\r\n            'M ' +\r\n            blockStack.x() +\r\n            ' ' +\r\n            (blockStack.y() + 10) +\r\n            ' L ' +\r\n            blockStack.x() +\r\n            ' ' +\r\n            (blockStack.y() + blockStack.getHeight() - 10) +\r\n            ' A 10 10 0 0 0 ' +\r\n            (blockStack.x() + 10) +\r\n            ' ' +\r\n            (blockStack.y() + blockStack.getHeight()) +\r\n            ' L ' +\r\n            (blockStack.x() + 10) +\r\n            ' ' +\r\n            blockStack.y() +\r\n            ' A 10 10 0 0 0 ' +\r\n            blockStack.x() +\r\n            ' ' +\r\n            (blockStack.y() + 10)\r\n          }\r\n          fill=\"black\"\r\n          stroke=\"black\"\r\n          strokeWidth={2}\r\n        /> */}\r\n        <text\r\n          x={blockStack.x() + 15}\r\n          y={blockStack.y() + BlockCell.FONT_SIZE + 7}\r\n          fontSize={BlockCell.FONT_SIZE + 2}\r\n          fill={blockStack.getColor()}\r\n          className=\"function-name\"\r\n        >\r\n          {blockStack.key.split('.')[0]}\r\n        </text>\r\n      </React.Fragment>\r\n    );\r\n  }\r\n\r\n  renderBlockContent() {\r\n    const { blockStack } = this.props;\r\n    const list: JSX.Element[] = [];\r\n    const blockTable = blockStack.getBlockTable();\r\n    blockTable.forEach((blockCellContainer) => {\r\n      for (let i = 0; i < 1; i++) {\r\n        if (i >= 3) break;\r\n        const blockCell = blockCellContainer[i];\r\n        list.push(\r\n          <g\r\n            className={`block-${\r\n              blockStack.key.split('.')[0]\r\n            }-${blockCell.getName()}`}\r\n            id={`block-${blockStack.key.replace(\r\n              '.',\r\n              '_'\r\n            )}-${blockCell.getName()}`}\r\n            key={`block-${blockStack.key.replace(\r\n              '.',\r\n              '_'\r\n            )}-${blockCell.getName()}`}\r\n            transform=\"matrix(1,0,0,1,0,0)\"\r\n          >\r\n            <text\r\n              x={blockCell.x() + 5}\r\n              y={blockCell.y() - 5}\r\n              fontSize={BlockCell.FONT_SIZE}\r\n              fontWeight=\"blod\"\r\n              fill={blockStack.getColor()}\r\n              className=\"variable-name\"\r\n            >\r\n              {blockCell.getName()}\r\n            </text>\r\n            <rect\r\n              x={blockCell.x()}\r\n              y={blockCell.y()}\r\n              width={blockCell.getWidth()}\r\n              height={blockCell.getHeight()}\r\n              fill=\"white\"\r\n              style={{ stroke: blockStack.getColor(), strokeWidth: '1.5px' }}\r\n            />\r\n            <text\r\n              className=\"value variable-value\"\r\n              x={blockCell.x() + 10}\r\n              y={blockCell.y() + BlockCell.FONT_SIZE + 10}\r\n              fontSize={BlockCell.FONT_SIZE}\r\n              fill={blockStack.getColor()}\r\n            >\r\n              {blockCell.getValue()}\r\n            </text>\r\n          </g>\r\n        );\r\n      }\r\n    });\r\n    return list;\r\n  }\r\n\r\n  render() {\r\n    const backgroud = this.renderBlockBackground();\r\n    const content = this.renderBlockContent();\r\n    return (\r\n      <g\r\n        className=\"block\"\r\n        transform=\"matrix(1,0,0,1,0,0)\"\r\n        id={`block_${this.props.blockStack.getName()}`}\r\n      >\r\n        {backgroud}\r\n        {content}\r\n      </g>\r\n    );\r\n  }\r\n}\r\n","import * as React from 'react';\r\nimport { BlockDrawer, BlockStack } from './/blockDrawer/BlockDrawer';\r\nimport Block from './block/Block';\r\nimport * as d3 from 'd3';\r\nimport { inArray } from 'jquery';\r\nimport { select, Selection } from 'd3-selection';\r\nimport 'd3-clone';\r\n\r\ninterface Props {\r\n  blockDrawer: BlockDrawer;\r\n}\r\n\r\ninterface State {\r\n  blockStacks: BlockStack[];\r\n}\r\n\r\n// function dragged(d: any) {\r\n//   const temp = d3.select(this).attr('id').split('_');\r\n//   temp.shift();\r\n//   const stackName = temp.join('_');\r\n//   d3.select(this).attr('transform', function () {\r\n//     let source = this.attributes.transform.value.replace(')', '');\r\n//     source = source.split(',');\r\n//     const tx = d.dx + Number(source[4]);\r\n//     const ty = d.dy + Number(source[5]);\r\n//     return 'matrix(1,0,0,1,' + tx + ',' + ty + ')';\r\n//   });\r\n//   d3.select('#svg').select(`#arrow_${stackName}`).remove();\r\n//   renderArrow(stackName, stackName);\r\n// }\r\n\r\nexport function renderArrow(sourceStackName: string, targetStackName: string) {\r\n  d3.select('#svg').select(`#arrow_${sourceStackName}`).remove();\r\n  const source = d3\r\n    .select('#svg')\r\n    .select(`#stack_${sourceStackName}`)\r\n    .select('rect');\r\n  let target = d3.select('#svg').select(`#block_${targetStackName}`);\r\n  if (target.empty()) {\r\n    return;\r\n  }\r\n  const sourceX =\r\n    Number(source.attr('x')) +\r\n    Number(source.attr('width')) -\r\n    0.36 * 0.2 * Number(source.attr('height'));\r\n  const sourceY =\r\n    Number(source.attr('y')) + 0.2 * Number(source.attr('height'));\r\n  const transform = target.attr('transform').replace(')', '').split(',');\r\n  target = target.select('rect');\r\n  const targetX = Number(target.attr('x')) + Number(transform[4]);\r\n  const targetY = Number(target.attr('y')) + Number(transform[5]) + 30;\r\n  let temp = sourceX - targetX;\r\n  temp = Math.max(temp, -temp);\r\n  d3.select('#svg')\r\n    .select('#path')\r\n    .append('path')\r\n    .attr('style', 'stroke:#858585; fill:none; stroke-width:2;')\r\n    .attr('id', `arrow_${sourceStackName}`)\r\n    .attr(\r\n      'd',\r\n      'M' +\r\n        sourceX +\r\n        ',' +\r\n        sourceY +\r\n        ' C' +\r\n        (targetX - temp / 3) +\r\n        ',' +\r\n        sourceY +\r\n        ' ' +\r\n        (sourceX + temp / 3) +\r\n        ',' +\r\n        targetY +\r\n        ' ' +\r\n        targetX +\r\n        ',' +\r\n        targetY\r\n    )\r\n    .attr('marker-end', 'url(#end)')\r\n    .attr('marker-start', 'url(#start)');\r\n}\r\n\r\nexport default class CallStack extends React.Component<Props, State> {\r\n  constructor(props: Props) {\r\n    super(props);\r\n    this.state = {\r\n      blockStacks: props.blockDrawer.getBlockStacks(),\r\n    };\r\n    const arrowListJson = sessionStorage.getItem('arrowList');\r\n    let arrowList = JSON.parse(arrowListJson!);\r\n    props.blockDrawer.getBlockArrows().forEach((name: string | number) => {\r\n      if (!arrowList) {\r\n        arrowList = {};\r\n      }\r\n      if (name) {\r\n        arrowList[name] = '';\r\n      }\r\n    });\r\n    sessionStorage.setItem('arrowList', JSON.stringify(arrowList));\r\n  }\r\n\r\n  componentWillUpdate(nextProps: {\r\n    blockDrawer: { getBlockStacks: () => any; getBlockArrows: () => any[] };\r\n  }) {\r\n    d3.select('#stack__cloned').remove();\r\n    d3.select('#block__cloned').remove();\r\n    d3.select('#arrow__cloned').remove();\r\n    const blockStacks = this.props.blockDrawer.getBlockStacks();\r\n    const nextBlockStacks = nextProps.blockDrawer.getBlockStacks();\r\n\r\n    if (sessionStorage.getItem('exec') !== 'step') {\r\n      const blockStacksLen = blockStacks.length;\r\n      const nextBlockStacksLen = nextBlockStacks.length;\r\n      if (blockStacksLen > nextBlockStacksLen) {\r\n        for (let i = nextBlockStacksLen; i < blockStacksLen; i++) {\r\n          const clonedStack = (\r\n            d3.select('#svg').select('#clone') as any\r\n          ).appendClone(\r\n            d3.select('#stack_' + blockStacks[i].key.replace('.', '_'))\r\n          );\r\n          clonedStack.attr('id', 'stack__cloned');\r\n          const clonedBlock = (\r\n            d3.select('#svg').select('#clone') as any\r\n          ).appendClone(\r\n            d3.select('#block_' + blockStacks[i].key.replace('.', '_'))\r\n          );\r\n          clonedBlock.select('rect').style('stroke', '#979797');\r\n          clonedBlock.select('text').style('fill', '#979797');\r\n          let offsetY = 0;\r\n          if (i > 1) {\r\n            offsetY = blockStacks[i].getHeight() + 40;\r\n          }\r\n          clonedBlock.selectAll('rect').attr('y', function (this: any) {\r\n            return Number(d3.select(this).attr('y')) + offsetY;\r\n          });\r\n          clonedBlock.selectAll('text').attr('y', function (this: any) {\r\n            return Number(d3.select(this).attr('y')) + offsetY;\r\n          });\r\n          clonedBlock.selectAll('tspan').attr('y', function (this: any) {\r\n            return Number(d3.select(this).attr('y')) + offsetY;\r\n          });\r\n          const block = d3.select(\r\n            '#block_' + blockStacks[i].key.replace('.', '_')\r\n          );\r\n          clonedBlock.attr('id', 'block__cloned');\r\n          const list: string[] = [];\r\n          block.selectAll('g').attr('copy', function () {\r\n            return list.push(d3.select(this).attr('id'));\r\n          });\r\n          clonedBlock.selectAll('g').attr('id', function (d: any, i: number) {\r\n            return 'cloned-' + list[i];\r\n          });\r\n        }\r\n      } else if (nextBlockStacksLen > blockStacksLen && blockStacksLen >= 2) {\r\n        const clonedBlock = (\r\n          d3.select('#svg').select('#clone') as any\r\n        ).appendClone(\r\n          d3.select(\r\n            '#block_' + blockStacks[blockStacksLen - 2].key.replace('.', '_')\r\n          )\r\n        );\r\n        clonedBlock.attr('id', 'block__cloned');\r\n      }\r\n    }\r\n    const arrowListJson = sessionStorage.getItem('arrowList');\r\n    let arrowList = JSON.parse(arrowListJson!);\r\n    if (!arrowList) {\r\n      arrowList = {};\r\n    }\r\n    nextProps.blockDrawer.getBlockArrows().forEach((name) => {\r\n      if (inArray(name, Object.keys(arrowList)) >= 0) {\r\n        delete arrowList[name];\r\n        d3.select('#svg')\r\n          .select(`#block_${name}`)\r\n          .attr('transform', 'matrix(1,0,0,1,0,0)');\r\n      }\r\n    });\r\n    sessionStorage.setItem('arrowList', JSON.stringify(arrowList));\r\n  }\r\n\r\n  componentDidUpdate() {\r\n    // d3.select('#svg').selectAll('.block').call(d3.drag().on('drag', dragged));\r\n    d3.select('#svg').select('#path').selectAll('path').remove();\r\n\r\n    const { blockDrawer } = this.props;\r\n    const blockArrows = blockDrawer.getBlockArrows();\r\n    blockArrows.forEach((stackName: string) => {\r\n      if (!d3.select('#svg').select(`#block_${stackName}`).empty()) {\r\n        renderArrow(stackName, stackName);\r\n      }\r\n    });\r\n    const arrowListJson = sessionStorage.getItem('arrowList');\r\n    let arrowList = JSON.parse(arrowListJson!);\r\n    if (!arrowList) {\r\n      arrowList = {};\r\n    }\r\n    Object.keys(arrowList).forEach((stackName) => {\r\n      if (!d3.select('#svg').select(`#block_${stackName}`).empty()) {\r\n        renderArrow(stackName, stackName);\r\n      }\r\n    });\r\n    // const variablesMapJson = sessionStorage.getItem('variablesMap');\r\n    // let variablesMap = JSON.parse(variablesMapJson!);\r\n    // if (!variablesMap) {\r\n    //   variablesMap = {};\r\n    // }\r\n    // Object.keys(variablesMap).forEach((key) => {\r\n    //   if (variablesMap[key]['visible']) {\r\n    //     const stackName = key.split('_')[0];\r\n    //     const name = key.split('_')[1];\r\n    //     const cells = d3\r\n    //       .select('#svg')\r\n    //       .selectAll(`.block-${stackName}-${name}`);\r\n    //     cells.select('rect').style('stroke', variablesMap[key]['color']);\r\n    //     cells.selectAll('text').attr('fill', variablesMap[key]['color']);\r\n    //   }\r\n    // });\r\n    const activeStack = sessionStorage.getItem('activeStack');\r\n    const blocks = d3.select('#svg').selectAll('.block');\r\n    blocks.select('rect').style('stroke', '#979797');\r\n    blocks.select('text').style('fill', '#979797');\r\n    // const block = d3.select('#svg').select('#block_' + activeStack);\r\n    // block.select('rect').style('stroke', '#0074D9');\r\n    // block.select('text').style('fill', '#0074D9');\r\n  }\r\n\r\n  renderBlocks() {\r\n    const { blockDrawer } = this.props;\r\n    const blockStacks = blockDrawer.getBlockStacks();\r\n    const blockArrows = blockDrawer.getBlockArrows();\r\n    const arrowListJson = sessionStorage.getItem('arrowList');\r\n    let arrowList = JSON.parse(arrowListJson!);\r\n    if (!arrowList) {\r\n      arrowList = {};\r\n    }\r\n    const list: JSX.Element[] = [];\r\n    blockStacks.forEach((blockStack) => {\r\n      if (\r\n        inArray(blockStack.getName(), blockArrows) >= 0 ||\r\n        inArray(blockStack.getName(), Object.keys(arrowList)) >= 0\r\n      ) {\r\n        list.push(\r\n          <g key={blockStack.key}>\r\n            <Block blockStack={blockStack} />\r\n          </g>\r\n        );\r\n      }\r\n    });\r\n    // list 顺序 main 为什么在第一个\r\n    return list;\r\n  }\r\n\r\n  drawOrRemoveBlock(name: string) {\r\n    const arrowListJson = sessionStorage.getItem('arrowList');\r\n    let arrowList = JSON.parse(arrowListJson!);\r\n    if (!arrowList) {\r\n      arrowList = {};\r\n    }\r\n    if (inArray(name, Object.keys(arrowList)) < 0) {\r\n      arrowList[name] = '';\r\n    } else {\r\n      delete arrowList[name];\r\n    }\r\n    sessionStorage.setItem('arrowList', JSON.stringify(arrowList));\r\n    this.setState({});\r\n  }\r\n\r\n  renderStackView() {\r\n    const arrowListJson = sessionStorage.getItem('arrowList');\r\n    let arrowList = JSON.parse(arrowListJson!);\r\n    if (!arrowList) {\r\n      arrowList = {};\r\n    }\r\n    const { blockDrawer } = this.props;\r\n    const blockStacks = blockDrawer.getBlockStacks();\r\n    const blockArrows = blockDrawer.getBlockArrows();\r\n    const list: JSX.Element[] = [];\r\n    const x = 60;\r\n    let y = 50;\r\n    const offsetY = 60;\r\n    const width = 192;\r\n    const height = 108;\r\n    blockStacks.forEach((blockStack, i) => {\r\n      const transform = `matrix(1,0,-0.36,1,0,0)`;\r\n      list.push(\r\n        <g\r\n          key={`stack_${blockStack.getName()}`}\r\n          id={`stack_${blockStack.getName()}`}\r\n          onClick={() => {\r\n            const res = inArray(blockStack.getName(), blockArrows);\r\n            if (res < 0) {\r\n              this.drawOrRemoveBlock(blockStack.getName());\r\n            }\r\n          }}\r\n        >\r\n          <rect\r\n            x={x}\r\n            y={y}\r\n            width={width}\r\n            height={height}\r\n            transform={transform}\r\n            fill=\"white\"\r\n            stroke=\"#979797\"\r\n            strokeWidth={2}\r\n            transform-origin={x + ' ' + y}\r\n          ></rect>\r\n          <text\r\n            x={x + 10}\r\n            y={y + 20}\r\n            fontSize=\"15\"\r\n            className=\"function-name\"\r\n            fill={'rgb(139, 139, 139)' }\r\n          >\r\n            {blockStack.getName().split('_')[0]}\r\n          </text>\r\n        </g>\r\n      );\r\n      y = y + offsetY;\r\n    });\r\n    return list;\r\n  }\r\n\r\n  render() {\r\n    const stacks = this.renderStackView();\r\n    const blocks = this.renderBlocks();\r\n    const { blockDrawer } = this.props;\r\n    const blockArrows = blockDrawer.getBlockArrows();\r\n    blockArrows.forEach((stackName: string) => {\r\n      if (stackName) {\r\n        sessionStorage.setItem('activeStack', stackName);\r\n      }\r\n    });\r\n    return (\r\n      <React.Fragment>\r\n        {stacks}\r\n        {blocks}\r\n      </React.Fragment>\r\n    );\r\n  }\r\n}\r\n","import * as React from 'react';\r\nimport { AnimationDrawer } from './AnimationDrawer';\r\nimport * as d3 from 'd3';\r\nimport { renderArrow } from '../CallStack';\r\nimport { select, Selection } from 'd3-selection';\r\nimport 'd3-clone';\r\n\r\ninterface Props {\r\n  animationDrawer: AnimationDrawer;\r\n}\r\n\r\ninterface State {}\r\n\r\nexport default class Animation extends React.Component<Props, State> {\r\n  shouldComponentUpdate(nextProps: any) {\r\n    if (sessionStorage.getItem('exec') === 'step') {\r\n      return false;\r\n    }\r\n    return true;\r\n  }\r\n\r\n  componentDidUpdate() {\r\n    const { animationDrawer } = this.props;\r\n    const exeState = animationDrawer.getState();\r\n\r\n    switch (exeState) {\r\n      case 'programInit':\r\n        this.programInit();\r\n        break;\r\n      case 'uniReturn':\r\n        this.uniReturn();\r\n        break;\r\n      case 'methodCall':\r\n        this.methodCall();\r\n        break;\r\n      default:\r\n        this.variablesInit();\r\n    }\r\n  }\r\n\r\n  programInit() {\r\n    d3.select('#block_main')\r\n      .style('fill-opacity', 1)\r\n      .style('stroke-opacity', 1)\r\n      .style('display', 'inline');\r\n    this.showUp('block_main', 0);\r\n  }\r\n\r\n  variablesInit() {\r\n    const { animationDrawer } = this.props;\r\n    const keys = animationDrawer.getVariableKeys();\r\n    const types = animationDrawer.getVariableTypes();\r\n    const values = animationDrawer.getVariableValues();\r\n    if (keys === undefined) {\r\n      return;\r\n    }\r\n    for (let i = 0; i < keys.length; i++) {\r\n      const key = keys[i];\r\n      this.showUp('block-' + key, 0);\r\n      // this.variableChange(key, types[i], values[i], 0, 0);\r\n    }\r\n  }\r\n\r\n  methodCall() {\r\n    const { animationDrawer } = this.props;\r\n    const stackName = animationDrawer.getStackName();\r\n    const postArgs = animationDrawer.getPostArgs();\r\n    const keys = animationDrawer.getVariableKeys();\r\n    const stacks = animationDrawer.getStacks();\r\n    let height = 0;\r\n    const block1 = stacks[stacks.length - 2].name.replace(\r\n      /[&\\|\\\\\\*:^%$@()\\[\\].]/g,\r\n      '_'\r\n    );\r\n    const block2 = stacks[stacks.length - 1].name.replace(\r\n      /[&\\|\\\\\\*:^%$@()\\[\\].]/g,\r\n      '_'\r\n    );\r\n    const svgblock1 = d3.select('#block_' + block1);\r\n    const svgblock2 = d3.select('#block_' + block2);\r\n    if (stacks.length > 3) {\r\n      height =\r\n        (d3.select('#block__cloned').node() as any).getBBox().height + 40;\r\n    }\r\n    this.showUp('block_' + stackName, height);\r\n    const stack = d3.select('#stack_' + stackName);\r\n    stack.attr('tansform', 'matrix(1,0,0,1,0,300)');\r\n    stack\r\n      .transition()\r\n      .duration(1000)\r\n      .tween('number', function () {\r\n        let i = d3.interpolateNumber(300, 0);\r\n        return function (t) {\r\n          stack.attr('transform', `matrix(1,0,0,1,0,${i(t)})`);\r\n        };\r\n      });\r\n\r\n    if (stacks.length > 3) {\r\n      const cloned = stacks[stacks.length - 3].name.replace(\r\n        /[&\\|\\\\\\*:^%$@()\\[\\].]/g,\r\n        '_'\r\n      );\r\n      svgblock1.attr('transform', 'matrix(1,0,0,1,0,' + height + ')');\r\n      svgblock2.attr('transform', 'matrix(1,0,0,1,0,' + height + ')');\r\n      renderArrow(cloned, '_cloned');\r\n    }\r\n    renderArrow(block1, block1);\r\n    renderArrow(stackName, stackName);\r\n    const arrow = d3.select('#arrow_' + stackName);\r\n    arrow.style('opacity', 0);\r\n    arrow\r\n      .transition()\r\n      .duration(500)\r\n      .delay(500)\r\n      .tween('number', function () {\r\n        let i = d3.interpolateNumber(0, 1);\r\n        return function (t) {\r\n          arrow.style('opacity', i(t));\r\n        };\r\n      });\r\n    postArgs.forEach((arg, idx) => {\r\n      if (arg !== undefined) {\r\n        const cloned = (d3.select('#svg').select('#clone') as any).appendClone(\r\n          d3.select('#block-' + keys[idx])\r\n        );\r\n        cloned.select('text').remove();\r\n        const source = d3.select('#block-' + postArgs[idx]);\r\n        const transform = d3\r\n          .select('#block_' + postArgs[idx].split('-')[0])\r\n          .attr('transform')\r\n          .replace('matrix(', '')\r\n          .replace(')', '')\r\n          .split(',');\r\n        cloned\r\n          .select('rect')\r\n          .attr(\r\n            'x',\r\n            Number(transform[4]) + Number(source.select('rect').attr('x'))\r\n          );\r\n        cloned\r\n          .select('rect')\r\n          .attr(\r\n            'y',\r\n            Number(transform[5]) + Number(source.select('rect').attr('y'))\r\n          );\r\n        cloned\r\n          .selectAll('.value')\r\n          .attr(\r\n            'x',\r\n            Number(transform[4]) + Number(source.select('.value').attr('x'))\r\n          );\r\n        cloned\r\n          .selectAll('.value')\r\n          .attr(\r\n            'y',\r\n            Number(transform[5]) + Number(source.select('.value').attr('y'))\r\n          );\r\n        const target = d3.select('#block-' + keys[idx]);\r\n        const targetTransform = d3\r\n          .select('#block_' + keys[idx].split('-')[0])\r\n          .attr('transform')\r\n          .replace('matrix(', '')\r\n          .replace(')', '')\r\n          .split(',');\r\n        target\r\n          .select('rect')\r\n          .style('display', 'none')\r\n          .transition()\r\n          .delay(1000)\r\n          .style('display', 'inline');\r\n        target\r\n          .selectAll('.value')\r\n          .style('display', 'none')\r\n          .transition()\r\n          .delay(1000)\r\n          .style('display', 'inline');\r\n        cloned\r\n          .select('rect')\r\n          .transition()\r\n          .duration(1000)\r\n          .attr(\r\n            'x',\r\n            Number(target.select('rect').attr('x')) + Number(targetTransform[4])\r\n          )\r\n          .attr(\r\n            'y',\r\n            Number(target.select('rect').attr('y')) + Number(targetTransform[5])\r\n          );\r\n        cloned\r\n          .selectAll('.value')\r\n          .transition()\r\n          .duration(1000)\r\n          .attr(\r\n            'x',\r\n            Number(target.selectAll('.value').attr('x')) +\r\n              Number(targetTransform[4])\r\n          )\r\n          .attr(\r\n            'y',\r\n            Number(target.selectAll('.value').attr('y')) +\r\n              Number(targetTransform[5])\r\n          );\r\n        cloned.transition().delay(1000).remove();\r\n      }\r\n    });\r\n    if (stacks.length > 3) {\r\n      const cloned = stacks[stacks.length - 3].name.replace(\r\n        /[&\\|\\\\\\*:^%$@()\\[\\].]/g,\r\n        '_'\r\n      );\r\n      d3.select('#block__cloned')\r\n        .transition()\r\n        .delay(1000)\r\n        .duration(1000)\r\n        .tween('number', function () {\r\n          let i = d3.interpolateNumber(0, -height);\r\n          return function (t) {\r\n            d3.select('#block__cloned').attr(\r\n              'transform',\r\n              `matrix(1,0,0,1,0,${i(t)})`\r\n            );\r\n            renderArrow(cloned, '_cloned');\r\n          };\r\n        });\r\n      svgblock1\r\n        .transition()\r\n        .delay(1000)\r\n        .duration(1000)\r\n        .tween('number', function () {\r\n          let i = d3.interpolateNumber(height, 0);\r\n          return function (t) {\r\n            svgblock1.attr('transform', `matrix(1,0,0,1,0,${i(t)})`);\r\n            renderArrow(block1, block1);\r\n          };\r\n        });\r\n      svgblock2\r\n        .transition()\r\n        .delay(1000)\r\n        .duration(1000)\r\n        .tween('number', function () {\r\n          let i = d3.interpolateNumber(height, 0);\r\n          return function (t) {\r\n            svgblock2.attr('transform', `matrix(1,0,0,1,0,${i(t)})`);\r\n            renderArrow(block2, block2);\r\n          };\r\n        });\r\n      d3.select('#block__cloned').transition().delay(2000).remove();\r\n      // 删不掉 很奇怪\r\n      d3.select('#svg')\r\n        .select('#arrow_' + cloned)\r\n        .transition()\r\n        .delay(2000)\r\n        .remove();\r\n    }\r\n  }\r\n\r\n  showUp(id: string, offsetY: string | number) {\r\n    const block = d3.select('#svg').select('#' + id);\r\n    const svg = d3.select('#svg');\r\n    const rect = block.select('rect');\r\n    const transform = block\r\n      .attr('transform')\r\n      .replace('matrix(', '')\r\n      .replace(')', '')\r\n      .split(',');\r\n    const transformOriginX =\r\n      (Number(transform[4]) + Number(rect.attr('x'))) /\r\n      Number(svg.attr('width'));\r\n    const transformOriginY =\r\n      (Number(transform[5]) + Number(rect.attr('y'))) /\r\n      Number(svg.attr('height'));\r\n    block.attr(\r\n      'transform-origin',\r\n      `${transformOriginX * 100}% ${transformOriginY * 100}%`\r\n    );\r\n    block\r\n      .transition()\r\n      .duration(1000)\r\n      .tween('number', function () {\r\n        let i = d3.interpolateNumber(0, 1);\r\n        return function (t) {\r\n          block.attr(\r\n            'transform',\r\n            `matrix(${i(t)},0,0,${i(t)},${transform[4]},${\r\n              transform[5] + offsetY\r\n            })`\r\n          );\r\n        };\r\n      });\r\n  }\r\n\r\n  uniReturn() {\r\n    const { animationDrawer } = this.props;\r\n    const postArgs = animationDrawer.getPostArgs();\r\n    if (postArgs.length < 1) return;\r\n    const len = animationDrawer.getVariableKeys().length;\r\n    if (len === 0) return;\r\n    const key = animationDrawer.getVariableKeys()[len - 1];\r\n    renderArrow('_cloned', '_cloned');\r\n    const target = d3.select('#block-' + key);\r\n    target\r\n      .select('rect')\r\n      .style('display', 'none')\r\n      .transition()\r\n      .delay(1000)\r\n      .style('display', 'inline');\r\n    target\r\n      .selectAll('.value')\r\n      .style('display', 'none')\r\n      .transition()\r\n      .delay(1000)\r\n      .style('display', 'inline');\r\n    const cloned = (d3.select('#svg').select('#clone') as any).appendClone(\r\n      d3.select('#cloned-block-' + postArgs[0])\r\n    );\r\n    cloned.select('rect').style('fill-opacity', 1).style('stroke-opacity', 1);\r\n    cloned\r\n      .selectAll('.value')\r\n      .style('fill-opacity', 1)\r\n      .style('stroke-opacity', 1);\r\n    cloned.select('text').remove();\r\n    cloned\r\n      .select('rect')\r\n      .transition()\r\n      .duration(1000)\r\n      .attr('x', target.select('rect').attr('x'))\r\n      .attr('y', target.select('rect').attr('y'));\r\n    cloned\r\n      .selectAll('.value')\r\n      .transition()\r\n      .duration(1000)\r\n      .attr('x', target.selectAll('.value').attr('x'))\r\n      .attr('y', target.selectAll('.value').attr('y'));\r\n    d3.select('#stack__cloned').transition().delay(1000).remove();\r\n    d3.select('#block__cloned').transition().delay(1000).remove();\r\n    cloned.transition().delay(1000).remove();\r\n    d3.select('#arrow__cloned').transition().delay(1000).remove();\r\n  }\r\n\r\n  compareProps(prevProps: Props, newProps: Props) {\r\n    const stacks = prevProps.animationDrawer.getStacks();\r\n    const newStacks = newProps.animationDrawer.getStacks();\r\n    const destroyList = [];\r\n    const addList = [];\r\n    const stacksLen = stacks.length;\r\n    const newStacksLen = newStacks.length;\r\n    if (stacksLen > newStacksLen) {\r\n      for (let i = newStacksLen; i < stacksLen; i++) {\r\n        const stack = stacks[i];\r\n        const stackName = stack.name.replace(/[&\\|\\\\\\*:^%$@()\\[\\].]/g, '_');\r\n        destroyList.push(stackName);\r\n      }\r\n    } else if (stacksLen !== 0 && stacksLen < newStacksLen) {\r\n      for (let i = stacksLen; i < newStacksLen; i++) {\r\n        const stack = newStacks[i];\r\n        const stackName = stack.name.replace(/[&\\|\\\\\\*:^%$@()\\[\\].]/g, '_');\r\n        addList.push(stackName);\r\n      }\r\n    }\r\n    return { destroyList, addList };\r\n  }\r\n\r\n  render() {\r\n    return <React.Fragment></React.Fragment>;\r\n  }\r\n}\r\n","import { ExecState } from 'unicoen.ts/dist/interpreter/Engine/ExecState';\r\nimport { Stack } from 'unicoen.ts/dist/interpreter/Engine/Stack';\r\nimport { UniVariableDef } from 'unicoen.ts/dist/node/UniVariableDef';\r\nimport { arrayToString } from '../blockDrawer/BlockDrawer';\r\nimport { inArray } from 'jquery';\r\n\r\nexport class AnimationDrawer {\r\n  private execState: ExecState | undefined = undefined;\r\n  private lastState: ExecState | undefined = undefined;\r\n  private state!: string;\r\n  private variableKeys!: string[];\r\n  private variableTypes!: string[];\r\n  private variableValues!: any[];\r\n  private postArgs!: any[];\r\n  private stack: Stack | undefined = undefined;\r\n  constructor(execState?: ExecState, lastState?: ExecState) {\r\n    if (typeof execState === 'undefined') return;\r\n    this.execState = execState;\r\n    if (typeof lastState === 'undefined') return;\r\n    this.lastState = lastState;\r\n    this.reset();\r\n    this.getCurrentStack();\r\n    this.parseExe();\r\n  }\r\n\r\n  public reset() {\r\n    this.state = '';\r\n    this.stack = undefined;\r\n    this.postArgs = [];\r\n    this.variableKeys = [];\r\n    this.variableTypes = [];\r\n    this.variableValues = [];\r\n  }\r\n\r\n  private parseExe() {\r\n    const currentExpr = this.execState!.getCurrentExpr();\r\n    const currentClassName = currentExpr.constructor.name;\r\n    let lastClassName = '';\r\n    let lastExpr = undefined;\r\n    let flag = true;\r\n    if (this.lastState) {\r\n      if (\r\n        this.execState!.getStacks().length < this.lastState.getStacks().length\r\n      ) {\r\n        // flag = false;\r\n      }\r\n      lastExpr = this.lastState.getNextExpr();\r\n      lastClassName = lastExpr.constructor.name;\r\n    }\r\n    if (flag) {\r\n      switch (currentClassName) {\r\n        case 'UniProgram':\r\n          this.state = 'programInit';\r\n          break;\r\n        case 'UniVariableDec':\r\n          this.state = 'variablesInit';\r\n          this.variableDec(currentExpr);\r\n          break;\r\n        case 'UniMethodCall':\r\n          this.methodCall(currentExpr);\r\n          break;\r\n        case 'UniBinOp':\r\n          this.binOp(currentExpr);\r\n          break;\r\n      }\r\n      switch (lastClassName) {\r\n        case 'UniBinOp':\r\n          this.binOp(lastExpr);\r\n          break;\r\n        case 'UniReturn':\r\n          this.state = 'uniReturn';\r\n          this.uniReturn(lastExpr);\r\n          break;\r\n        case 'UniVariableDec':\r\n          this.variableKeys = [];\r\n          this.variableTypes = [];\r\n          this.variableValues = [];\r\n          this.state = 'variablesInit';\r\n          this.variableDec(lastExpr);\r\n          break;\r\n      }\r\n    }\r\n    console.log(this);\r\n  }\r\n\r\n  public binOp(uniBinOp: any) {\r\n    const operator = uniBinOp.operator;\r\n    const right = uniBinOp.right;\r\n    const rightClassName = right.constructor.name;\r\n    switch (rightClassName) {\r\n      case 'UniMethodCall':\r\n        this.methodCall(right);\r\n        break;\r\n      case 'UniBinOp':\r\n        this.binOp(right);\r\n        break;\r\n    }\r\n    if (operator !== '=') {\r\n      const left = uniBinOp.left;\r\n      const leftClassName = left.constructor.name;\r\n      switch (leftClassName) {\r\n        case 'UniMethodCall':\r\n          this.methodCall(left);\r\n          break;\r\n        case 'UniBinOp':\r\n          this.binOp(left);\r\n          break;\r\n      }\r\n    }\r\n  }\r\n\r\n  public methodCall(uniMethodCall: any) {\r\n    const methodName = uniMethodCall.methodName.name;\r\n    this.execState!.getStacks().forEach((stack) => {\r\n      if (methodName === stack.name) {\r\n        this.state = 'methodCall';\r\n        this.postArgs = [];\r\n        this.getMethodArgs(uniMethodCall);\r\n        return;\r\n      }\r\n    });\r\n    this.lastState!.getStacks().forEach((stack) => {\r\n      if (methodName === stack.name) {\r\n        this.state = 'methodCall';\r\n        this.postArgs = [];\r\n        this.getMethodArgs(uniMethodCall);\r\n        return;\r\n      }\r\n    });\r\n  }\r\n\r\n  public variableDec(uniVariableDec: any) {\r\n    const variables = uniVariableDec.variables;\r\n    if (variables) {\r\n      variables.forEach((variable: UniVariableDef) => {\r\n        this.variableDef(variable);\r\n      });\r\n    }\r\n  }\r\n\r\n  public variableDef(uniVariableDef: UniVariableDef) {\r\n    let key = this.stack!.name + '-' + uniVariableDef.name;\r\n    key = key.replace(/[&\\|\\\\\\*:^%$@()\\[\\].]/g, '_');\r\n    const variableValue = uniVariableDef.value;\r\n    if (!variableValue) return;\r\n    const valueClass = variableValue.constructor.name;\r\n    switch (valueClass) {\r\n      case 'UniMethodCall':\r\n        this.methodCall(variableValue);\r\n        break;\r\n      case 'UniBinOp':\r\n        this.binOp(variableValue);\r\n        break;\r\n    }\r\n    const variables = this.stack!.getVariables();\r\n    for (let i = 0; i < variables.length; i++) {\r\n      if (variables[i].getName() === uniVariableDef.name) {\r\n        const type = variables[i].type;\r\n        const value = variables[i].getValue();\r\n        this.variableKeys.push(key);\r\n        this.variableTypes.push(type);\r\n        if (type.split('[').length > 1) {\r\n          this.variableValues.push(arrayToString(value, type.split('[')[0]));\r\n        } else {\r\n          if (inArray(type.split('[')[0], ['char', 'unsignedchar']) < 0) {\r\n            this.variableValues.push(value);\r\n          } else {\r\n            this.variableValues.push(String.fromCharCode(value));\r\n          }\r\n        }\r\n        break;\r\n      }\r\n    }\r\n  }\r\n\r\n  public uniReturn(uniReturn: any) {\r\n    const currentExpr = this.execState!.getCurrentExpr();\r\n    const currentClassName = currentExpr.constructor.name;\r\n    // if (currentClassName !== 'UniVariableDec') {\r\n    //   return;\r\n    // }\r\n    const returnValue = uniReturn.value;\r\n    if (!returnValue) {\r\n      return;\r\n    }\r\n    this.postArgs = [];\r\n    this.travelValue(returnValue);\r\n    // this.variableDec(currentExpr);\r\n  }\r\n\r\n  private travelValue(returnValue: any) {\r\n    let returnValueClass = returnValue.constructor.name;\r\n    if (returnValueClass === 'UniIdent') {\r\n      this.postArgs.push(\r\n        (\r\n          this.lastState!.getStacks()[this.lastState!.getStacks().length - 1]\r\n            .name +\r\n          '-' +\r\n          returnValue.name\r\n        ).replace(/[&\\|\\\\\\*:^%$@()\\[\\].]/g, '_')\r\n      );\r\n      return;\r\n    } else if (returnValueClass === 'UniBinOp') {\r\n      this.travelValue(returnValue.left);\r\n      this.travelValue(returnValue.right);\r\n    }\r\n  }\r\n\r\n  private travelArg(arg: any, idx: number) {\r\n    let returnValueClass = arg.constructor.name;\r\n    if (this.postArgs.length === idx) {\r\n      this.postArgs.push(undefined);\r\n    }\r\n    if (returnValueClass === 'UniIdent') {\r\n      if (this.postArgs[idx] === undefined) {\r\n        this.postArgs[idx] = (\r\n          this.lastState!.getStacks()[this.lastState!.getStacks().length - 1]\r\n            .name +\r\n          '-' +\r\n          arg.name\r\n        ).replace(/[&\\|\\\\\\*:^%$@()\\[\\].]/g, '_');\r\n      }\r\n      return;\r\n    } else if (returnValueClass === 'UniBinOp') {\r\n      this.travelArg(arg.left, idx);\r\n      this.travelArg(arg.right, idx);\r\n    }\r\n  }\r\n\r\n  public getMethodArgs(uniMethodCall: any) {\r\n    const args = uniMethodCall.args;\r\n    const variables = this.stack!.getVariables();\r\n    args.forEach((arg: any, idx: number) => {\r\n      this.travelArg(arg, idx);\r\n      const type = variables[idx].type;\r\n      const value = variables[idx].getValue();\r\n      this.variableKeys.push(\r\n        (this.stack!.name + '-' + variables[idx].name).replace(\r\n          /[&\\|\\\\\\*:^%$@()\\[\\].]/g,\r\n          '_'\r\n        )\r\n      );\r\n      this.variableTypes.push(type);\r\n      if (type.split('[').length > 1) {\r\n        this.variableValues.push(arrayToString(value, type.split('[')[0]));\r\n      } else {\r\n        if (inArray(type.split('[')[0], ['char', 'unsignedchar']) < 0) {\r\n          this.variableValues.push(value);\r\n        } else {\r\n          this.variableValues.push(String.fromCharCode(value));\r\n        }\r\n      }\r\n    });\r\n  }\r\n\r\n  public getCurrentStack() {\r\n    const stacks = this.execState!.getStacks();\r\n    const stack = stacks[stacks.length - 1];\r\n    this.stack = stack;\r\n    return stack;\r\n  }\r\n\r\n  public getState() {\r\n    return this.state;\r\n  }\r\n\r\n  public getVariableKeys() {\r\n    return this.variableKeys;\r\n  }\r\n\r\n  public getVariableTypes() {\r\n    return this.variableTypes;\r\n  }\r\n\r\n  public getVariableValues() {\r\n    return this.variableValues;\r\n  }\r\n\r\n  public getStackName() {\r\n    if (this.stack) {\r\n      let res = this.stack.name.replace(/[&\\|\\\\\\*:^%$@()\\[\\].]/g, '_');\r\n      return res;\r\n    }\r\n    return '';\r\n  }\r\n\r\n  public getStacks() {\r\n    if (this.execState) {\r\n      return this.execState.getStacks();\r\n    }\r\n    return [];\r\n  }\r\n\r\n  public getPostArgs() {\r\n    return this.postArgs;\r\n  }\r\n}\r\n","import React from 'react';\r\nimport PanelHeader from '../../components/panelHeader/PanelHeader';\r\nimport CallStack from '../../components/callStack/CallStack';\r\nimport Animation from '../../components/callStack/animation/Animation';\r\nimport { AnimationDrawer } from '../../components/callStack/animation/AnimationDrawer';\r\nimport { slot, remove } from '../../components/emitter';\r\nimport { ExecState } from 'unicoen.ts/dist/interpreter/Engine/ExecState';\r\nimport { BlockDrawer } from '../../components/callStack/blockDrawer/BlockDrawer';\r\n\r\nimport './style.scss';\r\n\r\ninterface Props {\r\n  height: number;\r\n  width: number;\r\n  execState?: ExecState;\r\n  lastState?: ExecState;\r\n}\r\ninterface State {}\r\n\r\nclass CallStackPanel extends React.Component<Props, State> {\r\n  // componentDidMount() {\r\n  //   slot('draw', (execState: ExecState, lastState: ExecState) =>\r\n  //     this.setState({ execState, lastState })\r\n  //   );\r\n  // }\r\n\r\n  // componentWillUnmount() {\r\n  //   remove('draw');\r\n  // }\r\n  // shouldComponentUpdate() {\r\n  //   console.log('Should upd');\r\n  //   return true;\r\n  // }\r\n  // componentDidUpdate() {\r\n  //   console.log('-----------------------');\r\n  //   console.log(this.props.execState);\r\n  //   console.log(this.props.lastState);\r\n  //   console.log('-----------------------');\r\n  // }\r\n\r\n  render() {\r\n    // console.log('render1');\r\n    const blockDrawer = new BlockDrawer(this.props.execState);\r\n    const animationDrawer = new AnimationDrawer(\r\n      this.props.execState,\r\n      this.props.lastState\r\n    );\r\n    // console.log('render2');\r\n    return (\r\n      <div id=\"CallStackPanel\" className=\"panel\">\r\n        <PanelHeader title=\"Call Stack\" />\r\n        <div className=\"callStack-area\">\r\n          {/* {console.log('DEBUG|'+this.props.execState)} */}\r\n          <svg\r\n            id=\"svg\"\r\n            width={this.props.width - 20}\r\n            height={this.props.height * 0.75 - 28 - 39.2}\r\n          >\r\n            <marker\r\n              id=\"end\"\r\n              viewBox=\"-10 -10 20 20\"\r\n              refX=\"0\"\r\n              refY=\"0\"\r\n              markerWidth=\"8\"\r\n              markerHeight=\"8\"\r\n              orient=\"auto\"\r\n            >\r\n              <circle\r\n                cx={0}\r\n                cy={0}\r\n                style={{ stroke: '#483647', strokeWidth: 2, fill: 'white' }}\r\n                r={8}\r\n              ></circle>\r\n            </marker>\r\n            <marker\r\n              id=\"start\"\r\n              viewBox=\"-10 -10 20 20\"\r\n              refX=\"0\"\r\n              refY=\"0\"\r\n              markerWidth=\"8\"\r\n              markerHeight=\"8\"\r\n              orient=\"auto\"\r\n            >\r\n              <circle\r\n                cx={0}\r\n                cy={0}\r\n                style={{ stroke: '#979797', strokeWidth: 2, fill: 'white' }}\r\n                r={8}\r\n              ></circle>\r\n            </marker>\r\n            <CallStack blockDrawer={blockDrawer}></CallStack>\r\n            <g id=\"clone\"></g>\r\n            <g id=\"path\"></g>\r\n          </svg>\r\n          <Animation animationDrawer={animationDrawer}></Animation>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default CallStackPanel;\r\n","import classNames from 'classnames';\r\nimport React from 'react';\r\nimport { Variable } from 'unicoen.ts/dist/interpreter/Engine/Variable';\r\nimport './style.scss';\r\n\r\nexport interface MemoryCellProps {\r\n  variable: Variable;\r\n  selectedVar: Variable | undefined;\r\n  handleClick: (variable: Variable) => void;\r\n}\r\n\r\nfunction MemoryCell({ variable, selectedVar, handleClick }: MemoryCellProps) {\r\n  const varName = variable.name;\r\n  const dataType = variable.type;\r\n  const address = variable.address;\r\n\r\n  const getValue = () => {\r\n    const value = variable.getValue();\r\n    if (dataType === 'char') {\r\n      return \"'\" + value.toString() + \"'\";\r\n    }\r\n    if (value instanceof Array) {\r\n      const fv = firstVarInArr(value);\r\n      return '0x' + fv.address.toString(16);\r\n    }\r\n    return value.toString();\r\n  };\r\n\r\n  return dataType[-1] !== ']' ? (\r\n    <div\r\n      className={classNames('memory-cell', {\r\n        active: selectedVar?.address === address,\r\n        'in-heap': varName === '',\r\n      })}\r\n      onClick={() => {\r\n        handleClick(variable);\r\n      }}\r\n    >\r\n      <div className=\"col-name variable-name\">{varName}</div>\r\n      <div className=\"col-value\">\r\n        <div className=\"col-1\">{dataType}</div>\r\n        <div className=\"col-2\">{getValue()}</div>\r\n      </div>\r\n    </div>\r\n  ) : (\r\n    <div></div>\r\n  );\r\n}\r\n\r\nexport default MemoryCell;\r\n\r\nfunction firstVarInArr(arr: Array<Variable>) {\r\n  while (arr[0].getValue() instanceof Array) {\r\n    arr = arr[0].getValue();\r\n  }\r\n  return arr[0];\r\n}\r\n","import React from 'react';\r\nimport { Variable } from 'unicoen.ts/dist/interpreter/Engine/Variable';\r\nimport MemoryCell from './MemoryCell';\r\nimport './style.scss';\r\n\r\ninterface MemoryBlockProps {\r\n  funcName: string;\r\n  variables: Variable[];\r\n  selectedVar: Variable | undefined;\r\n  handleClick: (variable: Variable) => void;\r\n  // memoryCells: {varName: string; dataType: string; value: string}[];\r\n}\r\n\r\nfunction MemoryBlock({\r\n  funcName,\r\n  variables,\r\n  selectedVar,\r\n  handleClick,\r\n}: MemoryBlockProps) {\r\n  return (\r\n    <div className=\"memory-block\">\r\n      <div className=\"highlight-bar\"></div>\r\n      <div className=\"main-content\">\r\n        <div className=\"function-name\">{funcName}</div>\r\n        <div className=\"cells\">\r\n          {variables.map((variable) => {\r\n            const value = variable.getValue();\r\n\r\n            return value instanceof Array ? (\r\n              <MemoryCell\r\n                key={variable.name}\r\n                variable={variable}\r\n                selectedVar={selectedVar}\r\n                handleClick={handleClick}\r\n              />\r\n            ) : (\r\n              <MemoryCell\r\n                key={variable.name}\r\n                variable={variable}\r\n                selectedVar={selectedVar}\r\n                handleClick={handleClick}\r\n              />\r\n            );\r\n          })}\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default MemoryBlock;\r\n","import { type } from 'os';\r\nimport React, { useEffect, useState } from 'react';\r\nimport { ExecState } from 'unicoen.ts/dist/interpreter/Engine/ExecState';\r\nimport { Stack } from 'unicoen.ts/dist/interpreter/Engine/Stack';\r\nimport { Variable } from 'unicoen.ts/dist/interpreter/Engine/Variable';\r\nimport MemoryBlock from './memoryBlock/MemoryBlock';\r\nimport MemoryCell, { MemoryCellProps } from './memoryBlock/MemoryCell';\r\n\r\nimport './style.scss';\r\n\r\ninterface LogicalViewProps {\r\n  execState: ExecState | undefined;\r\n  selectedVar: Variable | undefined;\r\n  handleClick: (variable: Variable) => void;\r\n}\r\n\r\nconst example_var0 = new Variable('int', '', -1, 10008, 2);\r\nconst example_var1 = new Variable('int', '', 2100000000, 10000, 2);\r\nconst example_var2 = new Variable('int', 'a', -2, 10004, 2);\r\nconst example_var3 = new Variable('int', 'b', 10, 10006, 2);\r\nconst example_var4 = new Variable('char', 'c', 'c', 10010, 2);\r\n\r\nfunction LogicalView({\r\n  execState,\r\n  selectedVar,\r\n  handleClick,\r\n}: LogicalViewProps) {\r\n  const [allStacks, setAllStacks] = useState<Stack[]>([]);\r\n  const [heap, setHeap] = useState<Variable[]>([]);\r\n  const [global, setGlobal] = useState<Variable[]>([]);\r\n\r\n  useEffect(() => {\r\n    if (execState !== undefined) {\r\n      const stacks = execState.getStacks();\r\n      const curStacks: Stack[] = [];\r\n      const curHeap: Variable[] = [];\r\n      const curGlobal: Variable[] = [];\r\n\r\n      // console.log('DEBUG| Stacks: ' + stacks);\r\n\r\n      stacks.forEach((stack) => {\r\n        if (stack.name !== 'GLOBAL') {\r\n          curStacks.push(stack);\r\n        } else {\r\n          const variables = stack.getVariables();\r\n          variables.forEach((variable) => {\r\n            if (variable.address >= 50000) {\r\n              curGlobal.push(variable);\r\n            } else if (variable.address >= 20000) {\r\n              curHeap.push(variable);\r\n            }\r\n          });\r\n        }\r\n      });\r\n\r\n      setAllStacks(curStacks);\r\n      setHeap(curHeap);\r\n      setGlobal(curGlobal);\r\n    }\r\n  }, [execState]);\r\n\r\n  return (\r\n    <div id=\"LogicalView\">\r\n      <div className='left-content'>\r\n      <div id=\"StackView\" className=\"content-view\">\r\n        <div className=\"title\"> Stack</div>\r\n        <div className=\"content\">\r\n          {allStacks.map((stack) => {\r\n            const p = stack.name.indexOf('.');\r\n            const stackName = p > 0 ? stack.name.substring(0, p) : stack.name;\r\n            return (\r\n              <MemoryBlock\r\n                key={stack.name}\r\n                funcName={stackName}\r\n                variables={stack.getVariables()}\r\n                selectedVar={selectedVar}\r\n                handleClick={handleClick}\r\n              />\r\n            );\r\n          })}\r\n          {/* <MemoryBlock funcName=\"functionX\" memoryCells={memoryCells} /> */}\r\n        </div>\r\n      </div></div>\r\n      <div className='right-content'>\r\n        <div id=\"HeapView\" className=\"content-view\">\r\n          <div className=\"title\">Heap</div>\r\n          <div className=\"content\">\r\n            {/* <MemoryCell\r\n              variable={example_var1}\r\n              selectedVar={selectedVar}\r\n              handleClick={handleClick}\r\n            />\r\n            <MemoryCell\r\n              variable={example_var0}\r\n              selectedVar={selectedVar}\r\n              handleClick={handleClick}\r\n            /> */}\r\n          </div>\r\n        </div>\r\n        <div id=\"GlobalStaticView\" className=\"content-view\">\r\n          <div className=\"title\">Global / Static</div>\r\n          <div className=\"content\">\r\n            {/* <div style={{border: '1px solid black', height: '2rem'}}></div> */}\r\n            {/* <MemoryCell\r\n              variable={example_var2}\r\n              selectedVar={selectedVar}\r\n              handleClick={handleClick}\r\n            />\r\n            <MemoryCell\r\n              variable={example_var3}\r\n              selectedVar={selectedVar}\r\n              handleClick={handleClick}\r\n            />\r\n            <MemoryCell\r\n              variable={example_var4}\r\n              selectedVar={selectedVar}\r\n              handleClick={handleClick}\r\n            /> */}\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default LogicalView;\r\n","import React, { useEffect } from 'react';\r\nimport { Variable } from 'unicoen.ts/dist/interpreter/Engine/Variable';\r\nimport './style.scss';\r\n\r\nexport interface MemoryInfo {\r\n  funcName: string;\r\n  varName: string;\r\n  address: string;\r\n  type: string;\r\n  value: string;\r\n  binaryCode0: string;\r\n  binaryCode1: string;\r\n  binaryCode2: string;\r\n}\r\n\r\nconst defaultMemoryInfo: MemoryInfo = {\r\n  funcName: 'X',\r\n  varName: 'X',\r\n  address: 'X',\r\n  type: 'X',\r\n  value: 'X',\r\n  binaryCode0: 'X',\r\n  binaryCode1: 'X',\r\n  binaryCode2: 'X',\r\n};\r\n\r\ninterface MemoryDetailProps {\r\n  variable: Variable;\r\n}\r\n\r\nfunction MemoryDetail({ variable }: MemoryDetailProps) {\r\n  const memoryInfo: MemoryInfo = variable.address > 0\r\n    ? {\r\n        funcName: 'main',\r\n        varName: variable.name,\r\n        address: '0x' + variable.address.toString(16),\r\n        type: variable.type,\r\n        value: variable.getValue().toString(),\r\n        binaryCode0: signMagn(variable),\r\n        binaryCode1: oneComp(variable),\r\n        binaryCode2: twoComp(variable),\r\n      }\r\n    : defaultMemoryInfo;\r\n// console.log('DEBUG|'+variable.address);\r\n  return (\r\n    <div id=\"MemoryDetail\">\r\n      <div>\r\n        <div className=\"detail-item\"></div>\r\n        <div className=\"detail-item\">\r\n          <div className=\"item-name\">Function Name</div>\r\n          <div className=\"item-value\">{memoryInfo.funcName}</div>\r\n        </div>\r\n        <div className=\"detail-item\">\r\n          <div className=\"item-name\">Variable Name</div>\r\n          <div className=\"item-value variable-name\">{memoryInfo.varName}</div>\r\n        </div>\r\n        <div className=\"detail-item\">\r\n          <div className=\"item-name\">Address</div>\r\n          <div className=\"item-value\">{memoryInfo.address}</div>\r\n        </div>\r\n        <div className=\"type-value-detail\">\r\n          <div className=\"detail-item dashed-border-right\">\r\n            <div className=\"item-name\">Type</div>\r\n            <div className=\"item-value\">{memoryInfo.type}</div>\r\n          </div>\r\n          <div className=\"detail-item\">\r\n            <div className=\"item-name\">Value</div>\r\n            <div className=\"item-value\">{memoryInfo.value}</div>\r\n          </div>\r\n        </div>\r\n        <div className=\"detail-item binary-item\">\r\n          <div className=\"item-name\">Sign-Magnitude</div>\r\n          {/* <div className=\"item-name\">Sign-Magn</div> */}\r\n          <div className=\"item-value binary-code\">{memoryInfo.binaryCode0}</div>\r\n        </div>\r\n        <div className=\"detail-item binary-item\">\r\n          <div className=\"item-name\">One's Complement</div>\r\n          {/* <div className=\"item-name\">1's Comp</div> */}\r\n          <div className=\"item-value binary-code\">{memoryInfo.binaryCode1}</div>\r\n        </div>\r\n        <div className=\"detail-item binary-item\">\r\n          <div className=\"item-name\">Two's Complement</div>\r\n          <div className=\"item-value binary-code\">{memoryInfo.binaryCode2}</div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default MemoryDetail;\r\n\r\nfunction twoComp(variable: Variable) {\r\n  if (variable.type === 'int') {\r\n    const num = variable.getValue();\r\n    if (num >= 0) return signMagn(variable);\r\n    const oneC = oneComp(variable);\r\n    const twoC = '1' + d2b(parseInt(oneC, 2) + 1, 31);\r\n    return twoC;\r\n  }\r\n  return 'X';\r\n}\r\n\r\nfunction d2b(num: number, width: number) {\r\n  return (Array(width).join('0') + num.toString(2))\r\n    .slice(-width)\r\n    .replace('-', '0');\r\n}\r\n\r\nfunction signMagn(variable: Variable) {\r\n  if (variable.type === 'int') {\r\n    const num = variable.getValue();\r\n    const binary = d2b(num, 31);\r\n    return (num >= 0 ? '0' : '1') + binary;\r\n  }\r\n  return 'X';\r\n}\r\n\r\nfunction oneComp(variable: Variable) {\r\n  if (variable.type === 'int') {\r\n    const num = variable.getValue();\r\n\r\n    if (num >= 0) {\r\n      return signMagn(variable);\r\n    }\r\n\r\n    const binary = d2b(num, 31);\r\n    const reg = /1|0/g;\r\n    const oneC = binary.replace(reg, (x: string) => {\r\n      return x === '0' ? '1' : '0';\r\n    });\r\n    return '1' + oneC;\r\n  }\r\n  return 'X';\r\n}\r\n","import React from 'react';\r\nimport { ExecState } from 'unicoen.ts/dist/interpreter/Engine/ExecState';\r\nimport { Variable } from 'unicoen.ts/dist/interpreter/Engine/Variable';\r\n\r\ninterface PhysicalViewProps {\r\n  execState: ExecState | undefined;\r\n  selectedVar: Variable | undefined;\r\n  handleClick: (variable: Variable) => void;\r\n}\r\n\r\nfunction PhysicalView({\r\n  execState,\r\n  selectedVar,\r\n  handleClick,\r\n}: PhysicalViewProps) {\r\n  // const a = allVariables ;\r\n  return execState ? <div className=\"physical-view\">\r\n\r\n  </div> : <div></div>;\r\n}\r\n\r\nexport default PhysicalView;\r\n","import React from 'react';\r\nimport classNames from 'classnames';\r\nimport './style.scss';\r\ninterface SubtitleBlockProps {\r\n  title: string;\r\n  isActive: boolean;\r\n  handleClick: () => void;\r\n}\r\n\r\nfunction SubtitleBlock({title, isActive, handleClick}: SubtitleBlockProps) {\r\n  return (\r\n    <div\r\n      className={classNames('subtitle-block', {'subtitle-active': isActive})}\r\n      onClick={handleClick}\r\n    >\r\n      {title}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default SubtitleBlock;\r\n","import classNames from 'classnames';\r\nimport React, { useEffect, useState } from 'react';\r\nimport { ExecState } from 'unicoen.ts/dist/interpreter/Engine/ExecState';\r\nimport { Variable } from 'unicoen.ts/dist/interpreter/Engine/Variable';\r\nimport LogicalView from '../../components/memory/LogicalView';\r\nimport MemoryDetail, { MemoryInfo } from '../../components/memory/MemoryDetail';\r\nimport PhysicalView from '../../components/memory/PhysicalView';\r\nimport PanelHeader from '../../components/panelHeader/PanelHeader';\r\nimport SubtitleBlock from '../../components/subtitleBlock/SubtitleBlock';\r\nimport './style.scss';\r\n\r\n// const example_memory: MemoryInfo = {\r\n//   funcName: 'recursiveToThree',\r\n//   varName: 'n',\r\n//   address: '0xc35f',\r\n//   type: 'int',\r\n//   value: '-1',\r\n//   binaryCode0: '1000 0001',\r\n//   binaryCode1: '1000 0001',\r\n//   binaryCode2: '1000 0001',\r\n//   // binaryCode0: '1000 0000 0000 0000 0000 0000 0000 0001',\r\n//   // binaryCode1: '1111 1111 1111 1111 1111 1111 1111 1110',\r\n//   // binaryCode2: '1111 1111 1111 1111 1111 1111 1111 1111',\r\n// };\r\n\r\nconst defaultVar: Variable = new Variable('', '', '', -1, -1);\r\n\r\ninterface MemoryPanelProps {\r\n  execState: ExecState | undefined;\r\n}\r\n\r\nfunction MemoryPanel({ execState }: MemoryPanelProps) {\r\n  const [viewMode, setViewMode] = useState('logical');\r\n  const [selectedVar, setSelectedVar] = useState<Variable>();\r\n  const [lastVar, setLastVar] = useState<Variable>(defaultVar);\r\n\r\n  const handleModeChange = (mode: 'logical' | 'physical') => {\r\n    setViewMode(mode);\r\n  };\r\n\r\n  const handleSelectMemory = (newSelectedVar: Variable) => {\r\n    if (newSelectedVar.address === selectedVar?.address) {\r\n      hideDetail();\r\n    } else {\r\n      setLastVar(selectedVar ? selectedVar : defaultVar);\r\n      setSelectedVar(newSelectedVar);\r\n    }\r\n  };\r\n\r\n  const hideDetail = () => {\r\n    setLastVar(selectedVar ? selectedVar : defaultVar);\r\n    setSelectedVar(undefined);\r\n  };\r\n\r\n  return (\r\n    <div\r\n      id=\"MemoryPanel\"\r\n      className={classNames('panel', {\r\n        'show-detail': selectedVar !== undefined,\r\n        'hide-detail': selectedVar === undefined,\r\n      })}\r\n    >\r\n      <PanelHeader title=\"Memory\" />\r\n      <div className=\"subtitle-1\">\r\n        <div className=\"subtitle-area\">\r\n          <SubtitleBlock\r\n            title=\"Logical View\"\r\n            isActive={viewMode === 'logical'}\r\n            handleClick={() => handleModeChange('logical')}\r\n          />\r\n        </div>\r\n        <div className=\"subtitle-area\">\r\n          <SubtitleBlock\r\n            title=\"Physical View\"\r\n            isActive={viewMode === 'physical'}\r\n            handleClick={() => handleModeChange('physical')}\r\n          />\r\n        </div>\r\n      </div>\r\n      <div className=\"main-area\">\r\n        {viewMode === 'logical' ? (\r\n          <LogicalView\r\n            execState={execState}\r\n            selectedVar={selectedVar}\r\n            handleClick={handleSelectMemory}\r\n          />\r\n        ) : (\r\n          <PhysicalView\r\n            execState={execState}\r\n            selectedVar={selectedVar}\r\n            handleClick={handleSelectMemory}\r\n          />\r\n        )}\r\n      </div>\r\n      <div className=\"subtitle-area\">\r\n        <SubtitleBlock\r\n          title=\"Memory Detail\"\r\n          isActive={selectedVar !== undefined}\r\n          handleClick={() => {\r\n            if (selectedVar !== undefined) {\r\n              hideDetail();\r\n            } else {\r\n              if (lastVar !== undefined) {\r\n                setSelectedVar(lastVar);\r\n              } else {\r\n                setSelectedVar(defaultVar);\r\n                // alert('Click a memory cell to start');\r\n              }\r\n            }\r\n          }}\r\n        />\r\n      </div>\r\n      <div className=\"detail-area\">\r\n        <MemoryDetail variable={selectedVar ? selectedVar : lastVar} />\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default MemoryPanel;\r\n","export default __webpack_public_path__ + \"static/media/logo.afd13c96.svg\";","export default __webpack_public_path__ + \"static/media/icon1.c3c63206.svg\";","export default __webpack_public_path__ + \"static/media/icon2.43c03c24.svg\";","import React from 'react';\r\nimport logo from '../../assets/icon/logo.svg';\r\nimport menuIcon1 from '../../assets/icon/icon1.svg';\r\nimport menuIcon2 from '../../assets/icon/icon2.svg';\r\nimport './style.scss';\r\n\r\nfunction AppHeader() {\r\n  return (\r\n    <div id=\"AppHeader\">\r\n      <div className=\"logo\">\r\n        <svg width={400} height={64}>\r\n          <image xlinkHref={logo} height=\"64\" width=\"400\" />\r\n        </svg>\r\n      </div>\r\n      <div className=\"menu\">\r\n          <div></div>\r\n        <div className=\"menu-item\">\r\n          <svg width={20} height={20}>\r\n            <image xlinkHref={menuIcon1} height=\"20\" width=\"20\" />\r\n          </svg>\r\n        </div>\r\n        <div className=\"menu-item\">\r\n          <svg width={20} height={20}>\r\n            <image xlinkHref={menuIcon2} height=\"20\" width=\"20\" />\r\n          </svg>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default AppHeader;\r\n","import React, { useEffect, useState } from 'react';\r\nimport './App.scss';\r\nimport EditorPanel from './panels/editorPanel/EditorPanel';\r\nimport ConsolePanel from './panels/consolePanel/ConsolePanel';\r\nimport TimelinePanel from './panels/timelinePanel/TimelinePanel';\r\nimport CallStackPanel from './panels/callStackPanel/CallStackPanel';\r\nimport MemoryPanel from './panels/memoryPanel/MemoryPanel';\r\nimport ContainerDimensions from 'react-container-dimensions';\r\nimport AppHeader from './components/appHeader/AppHeader';\r\nimport { ExecState } from 'unicoen.ts/dist/interpreter/Engine/ExecState';\r\nimport { remove, slot } from './components/emitter';\r\nimport { unstable_batchedUpdates } from 'react-dom';\r\n\r\nfunction App() {\r\n  const [execState, setExecState] = useState<ExecState | undefined>();\r\n  const [lastState, setLastState] = useState<ExecState | undefined>();\r\n\r\n  useEffect(() => {\r\n    slot(\r\n      'draw',\r\n      (execState: ExecState | undefined, lastState: ExecState | undefined) => {\r\n        unstable_batchedUpdates(() => {\r\n          setExecState(execState);\r\n          setLastState(lastState);\r\n        });\r\n      }\r\n    );\r\n    return () => {\r\n      remove('draw');\r\n    };\r\n  }, []);\r\n\r\n  return (\r\n    <div className=\"App\">\r\n      <div className=\"Row-1\">\r\n        <AppHeader />\r\n      </div>\r\n      <div className=\"Row-2\">\r\n        <div className=\"Col-1\">\r\n          <EditorPanel />\r\n          <ConsolePanel />\r\n        </div>\r\n        <div className=\"Col-2\">\r\n          <ContainerDimensions>\r\n            {({ width, height }: { width: number; height: number }) => (\r\n              <React.Fragment>\r\n                <TimelinePanel />\r\n                <CallStackPanel\r\n                  width={width}\r\n                  height={height}\r\n                  execState={execState}\r\n                  lastState={lastState}\r\n                />\r\n              </React.Fragment>\r\n            )}\r\n          </ContainerDimensions>\r\n        </div>\r\n        <div className=\"Col-3\">\r\n          <MemoryPanel execState={execState} />\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n","import {EventEmitter} from 'events';\nexport const emitter = new EventEmitter();\nemitter.setMaxListeners(20);\nexport type event =\n  | 'debug'\n  | 'changeTheme'\n  | 'changeLang'\n  | 'changeProgLang'\n  | 'changeState'\n  | 'changeOutput'\n  | 'zoom'\n  | 'draw'\n  | 'redraw'\n  | 'EOF'\n  | 'stdin'\n  | 'Breakpoint'\n  | 'files'\n  | 'changeStep'\n  | 'jumpTo'\n  | 'init'\n  | 'statementHighlight'\n  | 'cancelStatementHighlight';\nexport const slot = (\n  event: event,\n  listener: (...args: any[]) => void\n): EventEmitter => {\n  return emitter.on(event, listener);\n};\nexport const signal = (event: event, ...args: any[]): boolean => {\n  // console.log('Log | signal: ' + event + ' ' + args);\n  return emitter.emit(event, ...args);\n};\nexport const remove = (event: event) => {\n  emitter.removeAllListeners(event);\n};\n\nexport const showEvents = () => {\n  const eventNames = emitter.eventNames();\n  console.log('Eventnames: ' + eventNames);\n};\n"],"sourceRoot":""}